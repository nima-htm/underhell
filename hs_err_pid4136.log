#
# A fatal error has been detected by the Java Runtime Environment:
#
#  EXCEPTION_ACCESS_VIOLATION (0xc0000005) at pc=0x00007ff9bc89c4b4, pid=4136, tid=7916
#
# JRE version: Java(TM) SE Runtime Environment (24.0.1+9) (build 24.0.1+9-30)
# Java VM: Java HotSpot(TM) 64-Bit Server VM (24.0.1+9-30, mixed mode, sharing, tiered, compressed oops, compressed class ptrs, g1 gc, windows-amd64)
# Problematic frame:
# V  [jvm.dll+0x1fc4b4]
#
# No core dump will be written. Minidumps are not enabled by default on client versions of Windows
#
# If you would like to submit a bug report, please visit:
#   https://bugreport.java.com/bugreport/crash.jsp
#

---------------  S U M M A R Y ------------

Command Line: --module-path=C:\Javac\javafx-sdk-24.0.1\lib --add-modules=javafx.controls,javafx.media -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2024.3.5\lib\idea_rt.jar=50034 -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8 BattleManager

Host: Intel(R) Core(TM) i5-3320M CPU @ 2.60GHz, 4 cores, 15G,  Windows 11 , 64 bit Build 22621 (10.0.22621.3958)
Time: Fri Jun  6 16:44:51 2025 Iran Standard Time elapsed time: 59.002284 seconds (0d 0h 0m 59s)

---------------  T H R E A D  ---------------

Current thread (0x00000214fa8064c0):  JavaThread "JavaFX Application Thread"        [_thread_in_vm, id=7916, stack(0x00000014dc600000,0x00000014dc700000) (1024K)]

Stack: [0x00000014dc600000,0x00000014dc700000],  sp=0x00000014dc6fd7f8,  free space=1013k
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)
V  [jvm.dll+0x1fc4b4]  (no source info available)

Java frames: (J=compiled Java code, j=interpreted, Vv=VM code)
j  com.sun.glass.ui.win.WinView._exitFullscreen(JZ)V+0 javafx.graphics@24.0.1
j  com.sun.glass.ui.View.exitFullscreen(Z)V+13 javafx.graphics@24.0.1
j  com.sun.javafx.tk.quantum.WindowStage.applyFullScreen()V+288 javafx.graphics@24.0.1
j  com.sun.javafx.tk.quantum.WindowStage.setFullScreen(Z)V+38 javafx.graphics@24.0.1
j  com.sun.javafx.tk.quantum.WindowStage.exitFullScreen()V+2 javafx.graphics@24.0.1
j  com.sun.javafx.tk.quantum.WindowStage.setScene(Lcom/sun/javafx/tk/TKScene;)V+12 javafx.graphics@24.0.1
j  javafx.stage.Window$SceneModel.updatePeerScene(Lcom/sun/javafx/tk/TKScene;)V+18 javafx.graphics@24.0.1
j  javafx.stage.Window$SceneModel.invalidated()V+35 javafx.graphics@24.0.1
J 2031 c1 javafx.beans.property.ObjectPropertyBase.set(Ljava/lang/Object;)V javafx.base@24.0.1 (76 bytes) @ 0x000002149eac0f3c [0x000002149eac0a00+0x000000000000053c]
j  javafx.stage.Window.setScene(Ljavafx/scene/Scene;)V+5 javafx.graphics@24.0.1
j  javafx.stage.Stage.setScene(Ljavafx/scene/Scene;)V+8 javafx.graphics@24.0.1
j  BattleManager.gameOver(Ljavafx/stage/Stage;)V+110
j  BattleManager.lambda$start$18(Ljavafx/stage/Stage;Ljavafx/beans/value/ObservableValue;Ljava/lang/Number;Ljava/lang/Number;)V+10
j  BattleManager$$Lambda+0x00000214b62279f0.changed(Ljavafx/beans/value/ObservableValue;Ljava/lang/Object;Ljava/lang/Object;)V+17
j  com.sun.javafx.binding.ExpressionHelper$Generic.fireValueChangedEvent()V+172 javafx.base@24.0.1
J 4231 c1 javafx.beans.property.IntegerPropertyBase.set(I)V javafx.base@24.0.1 (76 bytes) @ 0x000002149eec1124 [0x000002149eec0b40+0x00000000000005e4]
j  Player.getdmg(I)V+13
J 4181 c2 Alastor$1.handle(J)V (2747 bytes) @ 0x00000214a6415844 [0x00000214a6414140+0x0000000000001704]
J 2994 c1 com.sun.scenario.animation.AbstractPrimaryTimer.timePulseImpl(J)V javafx.graphics@24.0.1 (157 bytes) @ 0x000002149ec1702c [0x000002149ec168a0+0x000000000000078c]
J 2974 c1 com.sun.scenario.animation.AbstractPrimaryTimer$MainLoop.run()V javafx.graphics@24.0.1 (50 bytes) @ 0x000002149ec0ea7c [0x000002149ec0e720+0x000000000000035c]
J 2973 c1 com.sun.javafx.tk.quantum.QuantumToolkit.pulse(Z)V javafx.graphics@24.0.1 (152 bytes) @ 0x000002149ec0d3ec [0x000002149ec0c900+0x0000000000000aec]
J 2976 c1 com.sun.javafx.tk.quantum.QuantumToolkit$$Lambda+0x00000214b601d428.run()V javafx.graphics@24.0.1 (8 bytes) @ 0x000002149ec0f5b4 [0x000002149ec0f2e0+0x00000000000002d4]
J 2774 c1 com.sun.glass.ui.InvokeLaterDispatcher$Future.run()V javafx.graphics@24.0.1 (91 bytes) @ 0x000002149ebca27c [0x000002149ebca160+0x000000000000011c]
v  ~StubRoutines::call_stub 0x00000214a5cc0fcd
j  com.sun.glass.ui.win.WinApplication._runLoop(Ljava/lang/Runnable;)V+0 javafx.graphics@24.0.1
j  com.sun.glass.ui.win.WinApplication.lambda$runLoop$0(ILjava/lang/Runnable;)V+8 javafx.graphics@24.0.1
j  com.sun.glass.ui.win.WinApplication$$Lambda+0x00000214b6019bb0.run()V+12 javafx.graphics@24.0.1
j  java.lang.Thread.runWith(Ljava/lang/Object;Ljava/lang/Runnable;)V+5 java.base@24.0.1
j  java.lang.Thread.run()V+19 java.base@24.0.1
v  ~StubRoutines::call_stub 0x00000214a5cc0fcd

siginfo: EXCEPTION_ACCESS_VIOLATION (0xc0000005), reading address 0x0000000100000009


Registers:
RAX=0x00000214b4df75e8, RBX=0x0000000100000001, RCX=0x0000000100000001, RDX=0x0000000000000001
RSP=0x00000014dc6fd7f8, RBP=0x00000014dc6fd8d1, RSI=0x00000214fa8064c0, RDI=0x0000000000000042
R8 =0x0000000000000002, R9 =0x0000000000000001, R10=0x00000214fa805500, R11=0x00000014dc6fd910
R12=0x0000000000000000, R13=0x00000014dc6fd960, R14=0x00000214f64fe840, R15=0x00000214b4df75e0
RIP=0x00007ff9bc89c4b4, EFLAGS=0x0000000000010246

XMM[0]=0x0000000000000000 0x0000000000000000
XMM[1]=0x0000000000000000 0x0000000000000000
XMM[2]=0x0000000000000000 0x0000000000000000
XMM[3]=0x0000000000000000 0x0000000000000000
XMM[4]=0x0000000000000000 0x0000000000000000
XMM[5]=0x0000000000000000 0x0000000000000000
XMM[6]=0x0000000000000000 0x40777e6660000000
XMM[7]=0x0000000000000000 0x0000000000000000
XMM[8]=0x0000000000000000 0x407cbe6660000000
XMM[9]=0x0000000000000000 0x4040800000000000
XMM[10]=0x0000000000000000 0x0000000000000000
XMM[11]=0x0000000000000000 0x403e584200000000
XMM[12]=0x0000000000000000 0x0000000000000000
XMM[13]=0x0000000000000000 0x0000000000000000
XMM[14]=0x0000000000000000 0x0000000000000000
XMM[15]=0x0000000000000000 0x0000000000000000
  MXCSR=0x00001fa7


Register to memory mapping:

RAX=0x00000214b4df75e8 points into unknown readable memory: 0x000000070d9d3a40 | 40 3a 9d 0d 07 00 00 00
RBX=0x0000000100000001 is an unknown value
RCX=0x0000000100000001 is an unknown value
RDX=0x0000000000000001 is an unknown value
RSP=0x00000014dc6fd7f8 is pointing into the stack for thread: 0x00000214fa8064c0
RBP=0x00000014dc6fd8d1 is pointing into the stack for thread: 0x00000214fa8064c0
RSI=0x00000214fa8064c0 is a thread
RDI=0x0000000000000042 is an unknown value
R8 =0x0000000000000002 is an unknown value
R9 =0x0000000000000001 is an unknown value
R10=0x00000214fa805500 points into unknown readable memory: 0x0000010000000004 | 04 00 00 00 00 01 00 00
R11=0x00000014dc6fd910 is pointing into the stack for thread: 0x00000214fa8064c0
R12=0x0 is null
R13=0x00000014dc6fd960 is pointing into the stack for thread: 0x00000214fa8064c0
R14=0x00000214f64fe840 is a pointer to class: 
com.sun.glass.ui.View {0x00000214f64fe848}
 - instance size:     6
 - klass size:        138
 - access:            public synchronized abstract 
 - flags:             rewritten has_nonstatic_fields should_verify_class has_resolved_methods 
 - state:             fully_initialized
 - name:              'com/sun/glass/ui/View'
 - super:             'java/lang/Object'
 - sub:               'com/sun/glass/ui/win/WinView'   
 - arrays:            null
 - methods:           Array<T>(0x00000214f64fa2b0)
 - method ordering:   Array<T>(0x00000214b56d5fe8)
 - local interfaces:  Array<T>(0x00000214b565eda8)
 - trans. interfaces: Array<T>(0x00000214b565eda8)
 - secondary supers: Array<T>(0x00000214b565ed90)
 - hash_slot:         50
 - secondary bitmap: 0x0000000000000000
 - constants:         constant pool [586]/operands[12] {0x00000214f64f8f18} for 'com/sun/glass/ui/View' cache=0x00000214f6aad5d8
 - class loader data:  loader data: 0x00000214b4a923c0 for instance a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000070d20aff0}
 - source file:       'View.java'
 - inner classes:     Array<T>(0x00000214f64fe720)
 - nest members:     Array<T>(0x00000214f64fe758)
 - permitted subclasses:     Array<T>(0x00000214b565eda0)
 - java mirror:       a 'java/lang/Class'{0x000000070d2deb68} = 'com/sun/glass/ui/View'
 - vtable length      75  (start addr: 0x00000214f64fea20)
 - itable length      2 (start addr: 0x00000214f64fec78)
 - ---- static fields (7 words):
 - public static final 'GESTURE_NO_VALUE' 'I' @136 
 - public static final 'GESTURE_NO_DOUBLE_VALUE' 'D' @120 
 - public static final 'IME_ATTR_INPUT' 'B' @156 
 - public static final 'IME_ATTR_TARGET_CONVERTED' 'B' @157 
 - public static final 'IME_ATTR_CONVERTED' 'B' @158 
 - public static final 'IME_ATTR_TARGET_NOTCONVERTED' 'B' @159 
 - public static final 'IME_ATTR_INPUT_ERROR' 'B' @160 
 - static final 'accessible' 'Z' @161 
 - private static 'lastClickedView' 'Ljava/lang/ref/WeakReference;' @112 
 - private static 'lastClickedButton' 'I' @140 
 - private static 'lastClickedTime' 'J' @128 
 - private static 'lastClickedX' 'I' @144 
 - private static 'lastClickedY' 'I' @148 
 - private static 'clickCount' 'I' @152 
 - private static 'dragProcessed' 'Z' @162 
 - ---- non-static fields (9 words):
 - private 'width' 'I' @12 
 - private volatile 'ptr' 'J' @16 
 - private 'height' 'I' @24 
 - private 'isValid' 'Z' @28 
 - private 'isVisible' 'Z' @29 
 - private 'inFullscreen' 'Z' @30 
 - private 'window' 'Lcom/sun/glass/ui/Window;' @32 
 - private 'eventHandler' 'Lcom/sun/glass/ui/View$EventHandler;' @36 
 - private 'dropSourceAssistant' 'Lcom/sun/glass/ui/ClipboardAssistance;' @40 
 - 'dropTargetAssistant' 'Lcom/sun/glass/ui/ClipboardAssistance;' @44 
 - non-static oop maps: 32-44 
R15=0x00000214b4df75e0 points into unknown readable memory: 0x0000000100000001 | 01 00 00 00 01 00 00 00

Top of Stack: (sp=0x00000014dc6fd7f8)
0x00000014dc6fd7f8:   00007ff9bcb36dd1 00007ffa1f148696   .m..............
0x00000014dc6fd808:   0000000000000000 0000000000000000   ................
0x00000014dc6fd818:   0000000000000000 0000000000000000   ................
0x00000014dc6fd828:   0000000000000000 0000000000000002   ................
0x00000014dc6fd838:   00007ffa1f1480ac 00000014dc6fd990   ..........o.....
0x00000014dc6fd848:   00007ffa1f70ff00 00000000001104a2   ..p.............
0x00000014dc6fd858:   0000000080000000 0000000000000006   ................
0x00000014dc6fd868:   0000000000000000 0000000000000000   ................
0x00000014dc6fd878:   00007ffa00000001 00000014dc6fdd10   ..........o.....
0x00000014dc6fd888:   00000214b4bc2120 00000014dc6fda28    !......(.o.....
0x00000014dc6fd898:   00007ff9bcb35de1 00000014dc6fd990   .]........o.....
0x00000014dc6fd8a8:   0000000000000000 00000214f64fd308   ..........O.....
0x00000014dc6fd8b8:   0000000000000000 00000214f64fd308   ..........O.....
0x00000014dc6fd8c8:   00000214fa8064c0 00000214b54a6440   .d......@dJ.....
0x00000014dc6fd8d8:   000000000000000e 0000a9cbd37ff1e5   ................
0x00000014dc6fd8e8:   00007ffa1f1c6000 00000214b4bc2120   .`...... !......
0x00000014dc6fd8f8:   0000000000000000 00000214fa806888   .........h......
0x00000014dc6fd908:   00000214faac74a8 00000014dc6fda28   .t......(.o.....
0x00000014dc6fd918:   00007ff9bcb2599f 00000214f64fd308   .Y........O.....
0x00000014dc6fd928:   00000214fa8064c0 00007ff9bd0f8ec8   .d..............
0x00000014dc6fd938:   00000214fa8064c0 00000214faac74a8   .d.......t......
0x00000014dc6fd948:   00000014dc6fd990 00000214fa8064c0   ..o......d......
0x00000014dc6fd958:   00000214941e96d0 000000000000020e   ................
0x00000014dc6fd968:   0000000000000006 00000214fa8064c0   .........d......
0x00000014dc6fd978:   0000000000000000 00007ffa1f70ffc0   ..........p.....
0x00000014dc6fd988:   00007ffa0643b5d4 00007ff9bd0f8ec8   ..C.............
0x00000014dc6fd998:   00000214b54a6440 000000000000000e   @dJ.............
0x00000014dc6fd9a8:   000000000000015c 0000000000000000   \...............
0x00000014dc6fd9b8:   00000014dc6fda28 00000014dc6fdd10   (.o.......o.....
0x00000014dc6fd9c8:   0000000000000000 00000214b4b2d320   ........ .......
0x00000014dc6fd9d8:   00007ffa0642531c 00000014dc6fdd10   .SB.......o.....
0x00000014dc6fd9e8:   0000000000000000 0000000000000401   ................

Instructions: (pc=0x00007ff9bc89c4b4)
  0x00007ff9bc89c3b4:   00 00 00 48 8d 05 ca 96 81 00 4c 89 7c 24 40 48
  0x00007ff9bc89c3c4:   89 44 24 20 45 33 ff 48 89 7c 24 28 48 89 74 24
  0x00007ff9bc89c3d4:   30 48 63 87 a0 f0 01 00 85 c0 0f 8e 98 00 00 00
  0x00007ff9bc89c3e4:   48 8b bf a8 f0 01 00 48 89 5c 24 70 41 8b df 48
  0x00007ff9bc89c3f4:   89 6c 24 78 48 8b e8 4c 89 a4 24 80 00 00 00 4c
  0x00007ff9bc89c404:   89 6c 24 50 4c 8b 6e 18 4c 89 74 24 48 45 0f b7
  0x00007ff9bc89c414:   65 04 66 66 0f 1f 84 00 00 00 00 00 4c 8b 37 48
  0x00007ff9bc89c424:   c7 c0 ff ff ff ff 49 8b 16 0f 1f 00 48 ff c0 44
  0x00007ff9bc89c434:   38 3c 02 75 f7 44 3b e0 75 10 4c 63 c0 49 8d 4d
  0x00007ff9bc89c444:   06 e8 4e b4 75 00 85 c0 74 0e 48 ff c3 48 83 c7
  0x00007ff9bc89c454:   08 48 3b dd 7c c6 eb 04 4d 8d 7e 08 4c 8b 6c 24
  0x00007ff9bc89c464:   50 4c 8b a4 24 80 00 00 00 48 8b 6c 24 78 48 8b
  0x00007ff9bc89c474:   5c 24 70 4c 8b 74 24 48 48 8d 54 24 20 4c 89 7c
  0x00007ff9bc89c484:   24 38 48 8b ce e8 02 1c 20 00 4c 8b 7c 24 40 48
  0x00007ff9bc89c494:   83 c4 58 5f 5e c3 cc cc cc cc cc cc 8b 15 ca 05
  0x00007ff9bc89c4a4:   a4 00 85 d2 74 1e 83 fa 01 74 05 48 8b 41 08 c3
=>0x00007ff9bc89c4b4:   8b 41 08 8b 0d 13 2c a3 00 48 d3 e0 48 03 05 01
  0x00007ff9bc89c4c4:   2c a3 00 c3 48 8b 01 8b 0d ff 2b a3 00 48 c1 e8
  0x00007ff9bc89c4d4:   2a 48 d3 e0 48 03 05 e9 2b a3 00 c3 48 89 4c 24
  0x00007ff9bc89c4e4:   08 55 53 56 57 41 54 41 55 41 56 41 57 48 8d 6c
  0x00007ff9bc89c4f4:   24 e1 48 81 ec e8 00 00 00 49 8b 01 33 f6 4d 8b
  0x00007ff9bc89c504:   f1 4d 8b e0 48 8b fa 4c 8b f9 44 8b ee 48 85 c0
  0x00007ff9bc89c514:   74 6d 48 8b 1d cb ba a9 00 48 8d 4d 6f 48 89 45
  0x00007ff9bc89c524:   6f e8 b6 d0 1e 00 33 d2 44 8b c0 f7 33 48 8b 43
  0x00007ff9bc89c534:   08 48 8d 14 d0 48 8b 02 48 85 c0 74 1c 48 8b 4d
  0x00007ff9bc89c544:   6f 44 39 00 75 06 48 3b 48 08 74 0d 48 8d 50 28
  0x00007ff9bc89c554:   48 8b 40 28 48 85 c0 75 e8 48 8b 02 4c 8b c7 49
  0x00007ff9bc89c564:   8b 16 48 85 c0 49 8b cf 4c 8d 48 10 4c 0f 44 ce
  0x00007ff9bc89c574:   e8 67 ff ff ff 48 8d 5f 08 44 8d 68 01 eb 59 48
  0x00007ff9bc89c584:   8d 5a 08 48 85 ff 74 50 8b 0d de 04 a4 00 85 c9
  0x00007ff9bc89c594:   74 0e 83 f9 01 74 05 48 8b 03 eb 1b 8b 03 eb 07
  0x00007ff9bc89c5a4:   48 8b 02 48 c1 e8 2a 8b 0d 1f 2b a3 00 48 d3 e0


Stack slot to memory mapping:

stack at sp + 0 slots: 0x00007ff9bcb36dd1 jvm.dll
stack at sp + 1 slots: 0x00007ffa1f148696 USER32.dll
stack at sp + 2 slots: 0x0 is null
stack at sp + 3 slots: 0x0 is null
stack at sp + 4 slots: 0x0 is null
stack at sp + 5 slots: 0x0 is null
stack at sp + 6 slots: 0x0 is null
stack at sp + 7 slots: 0x0000000000000002 is an unknown value

Lock stack of current Java thread (top to bottom):


Compiled method (c1) 59367 2031       3       javafx.beans.property.ObjectPropertyBase::set (76 bytes)
 total in heap  [0x000002149eac0808,0x000002149eac15f0] = 3560
 relocation     [0x000002149eac08e0,0x000002149eac09f0] = 272
 main code      [0x000002149eac0a00,0x000002149eac14e8] = 2792
 stub code      [0x000002149eac14e8,0x000002149eac15c0] = 216
 oops           [0x000002149eac15c0,0x000002149eac15c8] = 8
 metadata       [0x000002149eac15c8,0x000002149eac15f0] = 40
 immutable data [0x00000214fb16d920,0x00000214fb16db60] = 576
 dependencies   [0x00000214fb16d920,0x00000214fb16d930] = 16
 nul chk table  [0x00000214fb16d930,0x00000214fb16d948] = 24
 scopes pcs     [0x00000214fb16d948,0x00000214fb16da98] = 336
 scopes data    [0x00000214fb16da98,0x00000214fb16db60] = 200

[Constant Pool (empty)]

[MachCode]
[Instructions begin]
  0x000002149eac0a00: 6666 660f | 1f84 0000 | 0000 0066 | 6666 9066 | 6690 448b | 5208 443b 

  0x000002149eac0a18: ;   {runtime_call Shared Runtime ic_miss_blob}
  0x000002149eac0a18: 5008 0f85 | 40dd 2407 
[Verified Entry Point]
  0x000002149eac0a20: e93b 6c20 | 07ff ff55 | 4883 ec60 | 4181 7f20 | 0100 0000 

  0x000002149eac0a34: ;   {runtime_call StubRoutines (final stubs)}
  0x000002149eac0a34: 7405 e8c5 | 4f23 0748 | 8954 2440 

  0x000002149eac0a40: ;   {metadata(method data for {method} {0x00000214f6442570} 'set' '(Ljava/lang/Object;)V' in 'javafx/beans/property/ObjectPropertyBase')}
  0x000002149eac0a40: 48be 0000 | b7f6 1402 | 0000 8bbe | cc00 0000 | 83c7 0289 | becc 0000 | 0081 e7fe | 0700 0085 
  0x000002149eac0a60: ff0f 8447 | 0900 0048 

  0x000002149eac0a68: ;   {metadata(method data for {method} {0x00000214f6442570} 'set' '(Ljava/lang/Object;)V' in 'javafx/beans/property/ObjectPropertyBase')}
  0x000002149eac0a68: 8bf2 48bf | 0000 b7f6 | 1402 0000 | 8b76 0849 | ba00 0000 | b514 0200 | 0049 03f2 | 483b b718 
  0x000002149eac0a88: 0100 0075 | 0d48 8387 | 2001 0000 | 01e9 6000 | 0000 483b | b728 0100 | 0075 0d48 | 8387 3001 
  0x000002149eac0aa8: 0000 01e9 | 4a00 0000 | 4883 bf18 | 0100 0000 | 7517 4889 | b718 0100 | 0048 c787 | 2001 0000 
  0x000002149eac0ac8: 0100 0000 | e929 0000 | 0048 83bf | 2801 0000 | 0075 1748 | 89b7 2801 | 0000 48c7 | 8730 0100 
  0x000002149eac0ae8: 0001 0000 | 00e9 0800 | 0000 4883 | 8710 0100 

  0x000002149eac0af8: ;   {metadata(method data for {method} {0x00000214f6442650} 'isBound' '()Z' in 'javafx/beans/property/ObjectPropertyBase')}
  0x000002149eac0af8: 0001 48be | 88fc b6f6 | 1402 0000 | 8bbe cc00 | 0000 83c7 | 0289 becc | 0000 0081 | e7fe ff1f 
  0x000002149eac0b18: 0085 ff0f | 84ae 0800 | 008b 7214 | 48c1 e603 

  0x000002149eac0b28: ;   {metadata(method data for {method} {0x00000214f6442650} 'isBound' '()Z' in 'javafx/beans/property/ObjectPropertyBase')}
  0x000002149eac0b28: 4885 f648 | be88 fcb6 | f614 0200 | 00bf 1001 | 0000 7405 | bf20 0100 | 0048 8b04 | 3e48 8d40 
  0x000002149eac0b48: 0148 8904 | 3e0f 841a 

  0x000002149eac0b50: ;   {metadata(method data for {method} {0x00000214f6442650} 'isBound' '()Z' in 'javafx/beans/property/ObjectPropertyBase')}
  0x000002149eac0b50: 0000 0048 | be88 fcb6 | f614 0200 | 00ff 8630 | 0100 00be | 0100 0000 | e905 0000 | 00be 0000 
  0x000002149eac0b70: 0000 83e6 

  0x000002149eac0b74: ;   {metadata(method data for {method} {0x00000214f6442570} 'set' '(Ljava/lang/Object;)V' in 'javafx/beans/property/ObjectPropertyBase')}
  0x000002149eac0b74: 0185 f648 | be00 00b7 | f614 0200 | 00bf 4001 | 0000 7405 | bf50 0100 | 0048 8b04 | 3e48 8d40 
  0x000002149eac0b94: 0148 8904 | 3e0f 8425 | 0200 0048 | 8bda 660f | 1f44 0000 

  0x000002149eac0ba8: ;   {no_reloc}
  0x000002149eac0ba8: e952 0800 | 0000 0000 | 0000 498b | 87c8 0100 | 0048 8d78 | 2849 3bbf | d801 0000 | 0f87 3f08 
  0x000002149eac0bc8: 0000 4989 | bfc8 0100 | 0048 c700 | 0100 0000 | 488b ca49 | ba00 0000 | b514 0200 | 0049 2bca 
  0x000002149eac0be8: 8948 0848 | 33c9 8948 | 0c48 33c9 | 4889 4810 | 4889 4818 | 4889 4820 | 4889 4424 | 4848 8bd3 
  0x000002149eac0c08: ;   {metadata(method data for {method} {0x00000214f6442570} 'set' '(Ljava/lang/Object;)V' in 'javafx/beans/property/ObjectPropertyBase')}
  0x000002149eac0c08: 48be 0000 | b7f6 1402 | 0000 8b52 | 0849 ba00 | 0000 b514 | 0200 0049 | 03d2 483b | 9668 0100 
  0x000002149eac0c28: 0075 0d48 | 8386 7001 | 0000 01e9 | 6000 0000 | 483b 9678 | 0100 0075 | 0d48 8386 | 8001 0000 
  0x000002149eac0c48: 01e9 4a00 | 0000 4883 | be68 0100 | 0000 7517 | 4889 9668 | 0100 0048 | c786 7001 | 0000 0100 
  0x000002149eac0c68: 0000 e929 | 0000 0048 | 83be 7801 | 0000 0075 | 1748 8996 | 7801 0000 | 48c7 8680 | 0100 0001 
  0x000002149eac0c88: 0000 00e9 | 0800 0000 | 4883 8660 | 0100 0001 | 488b d366 | 9048 b880 | ef50 fb14 

  0x000002149eac0ca4: ;   {virtual_call}
  0x000002149eac0ca4: 0200 00e8 

  0x000002149eac0ca8: ; ImmutableOopMap {[64]=Oop [72]=Oop }
                      ;*invokevirtual getBean {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.beans.property.ObjectPropertyBase::set@12 (line 142)
  0x000002149eac0ca8: b4e0 2407 

  0x000002149eac0cac: ;   {post_call_nop}
  0x000002149eac0cac: 0f1f 8400 | a404 0000 

  0x000002149eac0cb4: ;   {metadata(method data for {method} {0x00000214f6442570} 'set' '(Ljava/lang/Object;)V' in 'javafx/beans/property/ObjectPropertyBase')}
  0x000002149eac0cb4: 4885 c048 | ba00 00b7 | f614 0200 | 00be 9001 | 0000 7405 | bea0 0100 | 0048 8b3c | 3248 8d7f 
  0x000002149eac0cd4: 0148 893c | 320f 842d | 0300 0048 | 8b54 2440 

  0x000002149eac0ce4: ;   {metadata(method data for {method} {0x00000214f6442570} 'set' '(Ljava/lang/Object;)V' in 'javafx/beans/property/ObjectPropertyBase')}
  0x000002149eac0ce4: 48be 0000 | b7f6 1402 | 0000 8b52 | 0849 ba00 | 0000 b514 | 0200 0049 | 03d2 483b | 96b8 0100 
  0x000002149eac0d04: 0075 0d48 | 8386 c001 | 0000 01e9 | 6000 0000 | 483b 96c8 | 0100 0075 | 0d48 8386 | d001 0000 
  0x000002149eac0d24: 01e9 4a00 | 0000 4883 | beb8 0100 | 0000 7517 | 4889 96b8 | 0100 0048 | c786 c001 | 0000 0100 
  0x000002149eac0d44: 0000 e929 | 0000 0048 | 83be c801 | 0000 0075 | 1748 8996 | c801 0000 | 48c7 86d0 | 0100 0001 
  0x000002149eac0d64: 0000 00e9 | 0800 0000 | 4883 86b0 | 0100 0001 | 488b 5424 | 400f 1f40 | 0048 b8a8 | ef50 fb14 
  0x000002149eac0d84: ;   {virtual_call}
  0x000002149eac0d84: 0200 00e8 

  0x000002149eac0d88: ; ImmutableOopMap {[64]=Oop [72]=Oop }
                      ;*invokevirtual getName {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.beans.property.ObjectPropertyBase::set@19 (line 142)
  0x000002149eac0d88: d4df 2407 

  0x000002149eac0d8c: ;   {post_call_nop}
  0x000002149eac0d8c: 0f1f 8400 | 8405 0001 

  0x000002149eac0d94: ;   {metadata(method data for {method} {0x00000214f6442570} 'set' '(Ljava/lang/Object;)V' in 'javafx/beans/property/ObjectPropertyBase')}
  0x000002149eac0d94: 4885 c048 | ba00 00b7 | f614 0200 | 00be e001 | 0000 7405 | bef0 0100 | 0048 8b3c | 3248 8d7f 
  0x000002149eac0db4: 0148 893c | 320f 844d | 0200 00e9 | 5702 0000 | 8b72 1048 | c1e6 0349 

  0x000002149eac0dcc: ;   {metadata(method data for {method} {0x00000214f6442570} 'set' '(Ljava/lang/Object;)V' in 'javafx/beans/property/ObjectPropertyBase')}
  0x000002149eac0dcc: 3bf0 48be | 0000 b7f6 | 1402 0000 | bf58 0300 | 0074 05bf | 6803 0000 | 488b 1c3e | 488d 5b01 
  0x000002149eac0dec: 4889 1c3e | 0f84 0602 | 0000 410f | be77 4885 | f60f 8513 | 0600 004d | 8bd0 49c1 | ea03 4489 
  0x000002149eac0e0c: 5210 488b | f249 33f0 | 48c1 ee15 | 4883 fe00 | 0f85 1306 | 0000 488b 

  0x000002149eac0e24: ;   {metadata(method data for {method} {0x00000214f6442570} 'set' '(Ljava/lang/Object;)V' in 'javafx/beans/property/ObjectPropertyBase')}
  0x000002149eac0e24: f248 bf00 | 00b7 f614 | 0200 0048 | 8387 7803 

  0x000002149eac0e34: ;   {metadata(method data for {method} {0x00000214f6442320} 'markInvalid' '()V' in 'javafx/beans/property/ObjectPropertyBase')}
  0x000002149eac0e34: 0000 0148 | be10 feb6 | f614 0200 | 008b becc | 0000 0083 | c702 89be | cc00 0000 | 81e7 feff 
  0x000002149eac0e54: 1f00 85ff | 0f84 ef05 | 0000 0fbe | 720c 85f6 

  0x000002149eac0e64: ;   {metadata(method data for {method} {0x00000214f6442320} 'markInvalid' '()V' in 'javafx/beans/property/ObjectPropertyBase')}
  0x000002149eac0e64: 48be 10fe | b6f6 1402 | 0000 bf10 | 0100 0074 | 05bf 2001 | 0000 488b | 1c3e 488d | 5b01 4889 
  0x000002149eac0e84: 1c3e 0f84 | 7001 0000 | c642 0c00 

  0x000002149eac0e90: ;   {metadata(method data for {method} {0x00000214f6442320} 'markInvalid' '()V' in 'javafx/beans/property/ObjectPropertyBase')}
  0x000002149eac0e90: 488b f248 | bf10 feb6 | f614 0200 | 008b 7608 | 49ba 0000 | 00b5 1402 | 0000 4903 | f248 3bb7 
  0x000002149eac0eb0: 3801 0000 | 750d 4883 | 8740 0100 | 0001 e960 | 0000 0048 | 3bb7 4801 | 0000 750d | 4883 8750 
  0x000002149eac0ed0: 0100 0001 | e94a 0000 | 0048 83bf | 3801 0000 | 0075 1748 | 89b7 3801 | 0000 48c7 | 8740 0100 
  0x000002149eac0ef0: 0001 0000 | 00e9 2900 | 0000 4883 | bf48 0100 | 0000 7517 | 4889 b748 | 0100 0048 | c787 5001 
  0x000002149eac0f10: 0000 0100 | 0000 e908 | 0000 0048 | 8387 3001 | 0000 0148 | 8bf2 488b | d60f 1f40 | 0048 b8d0 
  0x000002149eac0f30: ef50 fb14 

  0x000002149eac0f34: ;   {virtual_call}
  0x000002149eac0f34: 0200 00e8 

  0x000002149eac0f38: ; ImmutableOopMap {[64]=Oop }
                      ;*invokevirtual invalidated {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.beans.property.ObjectPropertyBase::markInvalid@13 (line 112)
                      ; - javafx.beans.property.ObjectPropertyBase::set@72 (line 147)
  0x000002149eac0f38: c468 3407 

  0x000002149eac0f3c: ;   {post_call_nop}
  0x000002149eac0f3c: 0f1f 8400 | 3407 0002 | 488b 5424 

  0x000002149eac0f48: ;   {metadata(method data for {method} {0x00000214f6442320} 'markInvalid' '()V' in 'javafx/beans/property/ObjectPropertyBase')}
  0x000002149eac0f48: 4048 be10 | feb6 f614 | 0200 008b | 5208 49ba | 0000 00b5 | 1402 0000 | 4903 d248 | 3b96 6801 
  0x000002149eac0f68: 0000 750d | 4883 8670 | 0100 0001 | e960 0000 | 0048 3b96 | 7801 0000 | 750d 4883 | 8680 0100 
  0x000002149eac0f88: 0001 e94a | 0000 0048 | 83be 6801 | 0000 0075 | 1748 8996 | 6801 0000 | 48c7 8670 | 0100 0001 
  0x000002149eac0fa8: 0000 00e9 | 2900 0000 | 4883 be78 | 0100 0000 | 7517 4889 | 9678 0100 | 0048 c786 | 8001 0000 
  0x000002149eac0fc8: 0100 0000 | e908 0000 | 0048 8386 | 6001 0000 | 0148 8b54 | 2440 0f1f | 8000 0000 | 0048 b8f8 
  0x000002149eac0fe8: ef50 fb14 

  0x000002149eac0fec: ;   {virtual_call}
  0x000002149eac0fec: 0200 00e8 

  0x000002149eac0ff0: ; ImmutableOopMap {}
                      ;*invokevirtual fireValueChangedEvent {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.beans.property.ObjectPropertyBase::markInvalid@17 (line 113)
                      ; - javafx.beans.property.ObjectPropertyBase::set@72 (line 147)
  0x000002149eac0ff0: 3c68 3407 

  0x000002149eac0ff4: ;   {post_call_nop}
  0x000002149eac0ff4: 0f1f 8400 | ec07 0003 | 4883 c460 

  0x000002149eac1000: ;   {poll_return}
  0x000002149eac1000: 5d49 3b67 | 280f 8763 | 0400 00c3 

  0x000002149eac100c: ;   {oop(""{0x00000007ffe027c8})}
  0x000002149eac100c: 48be c827 | e0ff 0700 | 0000 e91c | 0300 0048 | 8b54 2440 

  0x000002149eac1020: ;   {metadata(method data for {method} {0x00000214f6442570} 'set' '(Ljava/lang/Object;)V' in 'javafx/beans/property/ObjectPropertyBase')}
  0x000002149eac1020: 488b f248 | bf00 00b7 | f614 0200 | 008b 7608 | 49ba 0000 | 00b5 1402 | 0000 4903 | f248 3bb7 
  0x000002149eac1040: 0802 0000 | 750d 4883 | 8710 0200 | 0001 e960 | 0000 0048 | 3bb7 1802 | 0000 750d | 4883 8720 
  0x000002149eac1060: 0200 0001 | e94a 0000 | 0048 83bf | 0802 0000 | 0075 1748 | 89b7 0802 | 0000 48c7 | 8710 0200 
  0x000002149eac1080: 0001 0000 | 00e9 2900 | 0000 4883 | bf18 0200 | 0000 7517 | 4889 b718 | 0200 0048 | c787 2002 
  0x000002149eac10a0: 0000 0100 | 0000 e908 | 0000 0048 | 8387 0002 | 0000 0148 | 8bf2 488b | d60f 1f40 | 0048 b820 
  0x000002149eac10c0: f050 fb14 

  0x000002149eac10c4: ;   {virtual_call}
  0x000002149eac10c4: 0200 00e8 

  0x000002149eac10c8: ; ImmutableOopMap {[64]=Oop [72]=Oop }
                      ;*invokevirtual getBean {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.beans.property.ObjectPropertyBase::set@26 (line 143)
  0x000002149eac10c8: 94dc 2407 

  0x000002149eac10cc: ;   {post_call_nop}
  0x000002149eac10cc: 0f1f 8400 | c408 0004 

  0x000002149eac10d4: ; implicit exception: dispatches to 0x000002149eac1484
  0x000002149eac10d4: 483b 0048 

  0x000002149eac10d8: ;   {metadata(method data for {method} {0x00000214f6442570} 'set' '(Ljava/lang/Object;)V' in 'javafx/beans/property/ObjectPropertyBase')}
  0x000002149eac10d8: 8bd0 48be | 0000 b7f6 | 1402 0000 | 8b52 0849 | ba00 0000 | b514 0200 | 0049 03d2 | 483b 9638 
  0x000002149eac10f8: 0200 0075 | 0d48 8386 | 4002 0000 | 01e9 6000 | 0000 483b | 9648 0200 | 0075 0d48 | 8386 5002 
  0x000002149eac1118: 0000 01e9 | 4a00 0000 | 4883 be38 | 0200 0000 | 7517 4889 | 9638 0200 | 0048 c786 | 4002 0000 
  0x000002149eac1138: 0100 0000 | e929 0000 | 0048 83be | 4802 0000 | 0075 1748 | 8996 4802 | 0000 48c7 | 8650 0200 
  0x000002149eac1158: 0001 0000 | 00e9 0800 | 0000 4883 | 8630 0200 | 0001 8b50 | 0849 ba00 | 0000 b514 | 0200 0049 
  0x000002149eac1178: 03d2 488b | 5270 488b | 1248 3b02 

  0x000002149eac1184: ;   {metadata(method data for {method} {0x00000214f6442570} 'set' '(Ljava/lang/Object;)V' in 'javafx/beans/property/ObjectPropertyBase')}
  0x000002149eac1184: 488b f248 | bf00 00b7 | f614 0200 | 008b 7608 | 49ba 0000 | 00b5 1402 | 0000 4903 | f248 3bb7 
  0x000002149eac11a4: 6802 0000 | 750d 4883 | 8770 0200 | 0001 e960 | 0000 0048 | 3bb7 7802 | 0000 750d | 4883 8780 
  0x000002149eac11c4: 0200 0001 | e94a 0000 | 0048 83bf | 6802 0000 | 0075 1748 | 89b7 6802 | 0000 48c7 | 8770 0200 
  0x000002149eac11e4: 0001 0000 | 00e9 2900 | 0000 4883 | bf78 0200 | 0000 7517 | 4889 b778 | 0200 0048 | c787 8002 
  0x000002149eac1204: 0000 0100 | 0000 e908 | 0000 0048 | 8387 6002 

  0x000002149eac1214: ;   {optimized virtual_call}
  0x000002149eac1214: 0000 01e8 

  0x000002149eac1218: ; ImmutableOopMap {[64]=Oop [72]=Oop }
                      ;*invokevirtual getSimpleName {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.beans.property.ObjectPropertyBase::set@32 (line 143)
  0x000002149eac1218: 44d8 2407 

  0x000002149eac121c: ;   {post_call_nop}
  0x000002149eac121c: 0f1f 8400 | 140a 0005 | 488b 5424 

  0x000002149eac1228: ;   {metadata(method data for {method} {0x00000214f6442570} 'set' '(Ljava/lang/Object;)V' in 'javafx/beans/property/ObjectPropertyBase')}
  0x000002149eac1228: 4048 be00 | 00b7 f614 | 0200 008b | 5208 49ba | 0000 00b5 | 1402 0000 | 4903 d248 | 3b96 9802 
  0x000002149eac1248: 0000 750d | 4883 86a0 | 0200 0001 | e960 0000 | 0048 3b96 | a802 0000 | 750d 4883 | 86b0 0200 
  0x000002149eac1268: 0001 e94a | 0000 0048 | 83be 9802 | 0000 0075 | 1748 8996 | 9802 0000 | 48c7 86a0 | 0200 0001 
  0x000002149eac1288: 0000 00e9 | 2900 0000 | 4883 bea8 | 0200 0000 | 7517 4889 | 96a8 0200 | 0048 c786 | b002 0000 
  0x000002149eac12a8: 0100 0000 | e908 0000 | 0048 8386 | 9002 0000 | 0148 8b54 | 2440 4889 | 4424 5066 | 9048 b848 
  0x000002149eac12c8: f050 fb14 

  0x000002149eac12cc: ;   {virtual_call}
  0x000002149eac12cc: 0200 00e8 

  0x000002149eac12d0: ; ImmutableOopMap {[72]=Oop [80]=Oop }
                      ;*invokevirtual getName {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.beans.property.ObjectPropertyBase::set@36 (line 143)
  0x000002149eac12d0: 8cda 2407 

  0x000002149eac12d4: ;   {post_call_nop}
  0x000002149eac12d4: 0f1f 8400 | cc0a 0006 | 0f1f 4000 

  0x000002149eac12e0: ;   {no_reloc}
  0x000002149eac12e0: e9b8 0100 | 0090 9090 | 9090 488b | 5424 504c | 8bc0 0f1f 

  0x000002149eac12f4: ;   {static_call}
  0x000002149eac12f4: 4400 00e8 

  0x000002149eac12f8: ; ImmutableOopMap {[72]=Oop }
                      ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.beans.property.ObjectPropertyBase::set@39 (line 143)
  0x000002149eac12f8: 64dd 2407 

  0x000002149eac12fc: ;   {post_call_nop}
  0x000002149eac12fc: 0f1f 8400 | f40a 0007 

  0x000002149eac1304: ;   {metadata(method data for {method} {0x00000214f6442570} 'set' '(Ljava/lang/Object;)V' in 'javafx/beans/property/ObjectPropertyBase')}
  0x000002149eac1304: 48ba 0000 | b7f6 1402 | 0000 488d | 92f0 0200 | 0048 85c0 | 750a f602 | 0175 05f0 | 4883 0a01 
  0x000002149eac1324: ;   {metadata(method data for {method} {0x00000214f6442570} 'set' '(Ljava/lang/Object;)V' in 'javafx/beans/property/ObjectPropertyBase')}
  0x000002149eac1324: 48ba 0000 | b7f6 1402 | 0000 ff82 | 0003 0000 | 488b f090 

  0x000002149eac1338: ;   {no_reloc}
  0x000002149eac1338: e979 0100 | 0090 9090 | 9090 488b 

  0x000002149eac1344: ;   {static_call}
  0x000002149eac1344: d666 90e8 

  0x000002149eac1348: ; ImmutableOopMap {[72]=Oop }
                      ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.beans.property.ObjectPropertyBase::set@49 (line 143)
  0x000002149eac1348: 14dd 2407 

  0x000002149eac134c: ;   {post_call_nop}
  0x000002149eac134c: 0f1f 8400 | 440b 0008 

  0x000002149eac1354: ;   {metadata(method data for {method} {0x00000214f6442570} 'set' '(Ljava/lang/Object;)V' in 'javafx/beans/property/ObjectPropertyBase')}
  0x000002149eac1354: 49b8 0000 | b7f6 1402 | 0000 4d8d | 8038 0300 | 0048 85c0 | 750b 41f6 | 0001 7505 | f049 8308 
  0x000002149eac1374: 014c 8b44 

  0x000002149eac1378: ;   {metadata(method data for {method} {0x00000214f6442570} 'set' '(Ljava/lang/Object;)V' in 'javafx/beans/property/ObjectPropertyBase')}
  0x000002149eac1378: 2448 48ba | 0000 b7f6 | 1402 0000 | 4883 8248 | 0300 0001 | 4c8b c048 | 8b54 2448 

  0x000002149eac1394: ;   {optimized virtual_call}
  0x000002149eac1394: 6666 90e8 

  0x000002149eac1398: ; ImmutableOopMap {[72]=Oop }
                      ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.beans.property.ObjectPropertyBase::set@54 (line 143)
  0x000002149eac1398: c4d6 2407 

  0x000002149eac139c: ;   {post_call_nop}
  0x000002149eac139c: 0f1f 8400 | 940b 0009 | 488b 4424 | 48e9 2f01 

  0x000002149eac13ac: ;   {metadata({method} {0x00000214f6442570} 'set' '(Ljava/lang/Object;)V' in 'javafx/beans/property/ObjectPropertyBase')}
  0x000002149eac13ac: 0000 49ba | 6825 44f6 | 1402 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000002149eac13c4: ;   {runtime_call C1 Runtime counter_overflow_blob}
  0x000002149eac13c4: ffe8 9617 

  0x000002149eac13c8: ; ImmutableOopMap {rdx=Oop r8=Oop [64]=Oop }
                      ;*synchronization entry
                      ; - javafx.beans.property.ObjectPropertyBase::set@-1 (line 141)
  0x000002149eac13c8: 3107 e998 

  0x000002149eac13cc: ;   {metadata({method} {0x00000214f6442650} 'isBound' '()Z' in 'javafx/beans/property/ObjectPropertyBase')}
  0x000002149eac13cc: f6ff ff49 | ba48 2644 | f614 0200 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000002149eac13e4: ;   {runtime_call C1 Runtime counter_overflow_blob}
  0x000002149eac13e4: ffff e875 

  0x000002149eac13e8: ; ImmutableOopMap {rdx=Oop r8=Oop [64]=Oop }
                      ;*synchronization entry
                      ; - javafx.beans.property.ObjectPropertyBase::isBound@-1 (line 156)
                      ; - javafx.beans.property.ObjectPropertyBase::set@1 (line 141)
  0x000002149eac13e8: 1731 07e9 | 31f7 ffff 

  0x000002149eac13f0: ;   {metadata(nullptr)}
  0x000002149eac13f0: 48ba 0000 | 0000 0000 | 0000 b800 

  0x000002149eac13fc: ;   {runtime_call C1 Runtime load_klass_patching_blob}
  0x000002149eac13fc: 0f05 0ae8 

  0x000002149eac1400: ; ImmutableOopMap {rbx=Oop [64]=Oop }
                      ;*new {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) javafx.beans.property.ObjectPropertyBase::set@7 (line 142)
  0x000002149eac1400: 5cfe 3007 | e99f f7ff | ff48 8bd2 

  0x000002149eac140c: ;   {runtime_call C1 Runtime fast_new_instance_blob}
  0x000002149eac140c: e84f c330 

  0x000002149eac1410: ; ImmutableOopMap {rbx=Oop [64]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.beans.property.ObjectPropertyBase::set@7 (line 142)
  0x000002149eac1410: 07e9 eaf7 | ffff 8b72 | 1048 c1e6 | 0348 83fe | 000f 84dc | f9ff ff48 

  0x000002149eac1428: ;   {runtime_call g1_pre_barrier_slow}
  0x000002149eac1428: 8934 24e8 | 301d 3107 | e9ce f9ff | ff49 83f8 | 000f 84e3 | f9ff ff48 

  0x000002149eac1440: ;   {runtime_call g1_post_barrier_slow}
  0x000002149eac1440: 8914 24e8 | 1820 3107 | e9d5 f9ff 

  0x000002149eac144c: ;   {metadata({method} {0x00000214f6442320} 'markInvalid' '()V' in 'javafx/beans/property/ObjectPropertyBase')}
  0x000002149eac144c: ff49 ba18 | 2344 f614 | 0200 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000002149eac1464: ;   {runtime_call C1 Runtime counter_overflow_blob}
  0x000002149eac1464: e8f7 1631 

  0x000002149eac1468: ; ImmutableOopMap {rdx=Oop [64]=Oop }
                      ;*synchronization entry
                      ; - javafx.beans.property.ObjectPropertyBase::markInvalid@-1 (line 110)
                      ; - javafx.beans.property.ObjectPropertyBase::set@72 (line 147)
  0x000002149eac1468: 07e9 f0f9 

  0x000002149eac146c: ;   {internal_word}
  0x000002149eac146c: ffff 49ba | 0110 ac9e | 1402 0000 | 4d89 9760 

  0x000002149eac147c: ;   {runtime_call SafepointBlob}
  0x000002149eac147c: 0400 00e9 | 5c48 2507 

  0x000002149eac1484: ;   {runtime_call C1 Runtime throw_null_pointer_exception_blob}
  0x000002149eac1484: e8d7 b930 

  0x000002149eac1488: ; ImmutableOopMap {rax=Oop [64]=Oop [72]=Oop }
                      ;*invokevirtual getClass {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.beans.property.ObjectPropertyBase::set@29 (line 143)
                      ;   {runtime_call C1 Runtime throw_null_pointer_exception_blob}
  0x000002149eac1488: 07e8 d2b9 

  0x000002149eac148c: ; ImmutableOopMap {rdx=Oop [64]=Oop [72]=Oop }
                      ;*invokevirtual getSimpleName {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.beans.property.ObjectPropertyBase::set@32 (line 143)
  0x000002149eac148c: 3007 49b9 | 0000 0000 | 0000 0000 | b800 0f05 

  0x000002149eac149c: ;   {runtime_call C1 Runtime load_appendix_patching_blob}
  0x000002149eac149c: 0ae8 3e0b 

  0x000002149eac14a0: ; ImmutableOopMap {rax=Oop [72]=Oop [80]=Oop }
                      ;*invokedynamic {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) javafx.beans.property.ObjectPropertyBase::set@39 (line 143)
  0x000002149eac14a0: 3107 e939 | feff ff49 | b800 0000 | 0000 0000 | 00b8 000f 

  0x000002149eac14b4: ;   {runtime_call C1 Runtime load_appendix_patching_blob}
  0x000002149eac14b4: 050a e825 

  0x000002149eac14b8: ; ImmutableOopMap {rsi=Oop [72]=Oop }
                      ;*invokedynamic {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) javafx.beans.property.ObjectPropertyBase::set@49 (line 143)
  0x000002149eac14b8: 0b31 07e9 | 78fe ffff | 498b 8708 | 0500 0049 | c787 0805 | 0000 0000 | 0000 49c7 | 8710 0500 
  0x000002149eac14d8: 0000 0000 | 0048 83c4 

  0x000002149eac14e0: ;   {runtime_call C1 Runtime unwind_exception_blob}
  0x000002149eac14e0: 605d e9f9 | a630 07f4 
[Stub Code]
  0x000002149eac14e8: ;   {no_reloc}
  0x000002149eac14e8: 0f1f 4400 

  0x000002149eac14ec: ;   {static_stub}
  0x000002149eac14ec: 0048 bb00 | 0000 0000 

  0x000002149eac14f4: ;   {runtime_call nmethod}
  0x000002149eac14f4: 0000 00e9 | fbff ffff 

  0x000002149eac14fc: ;   {static_stub}
  0x000002149eac14fc: 9048 bb00 | 0000 0000 

  0x000002149eac1504: ;   {runtime_call nmethod}
  0x000002149eac1504: 0000 00e9 | fbff ffff 

  0x000002149eac150c: ;   {static_stub}
  0x000002149eac150c: 9048 bb00 | 0000 0000 

  0x000002149eac1514: ;   {runtime_call nmethod}
  0x000002149eac1514: 0000 00e9 | fbff ffff 

  0x000002149eac151c: ;   {static_stub}
  0x000002149eac151c: 9048 bb00 | 0000 0000 

  0x000002149eac1524: ;   {runtime_call nmethod}
  0x000002149eac1524: 0000 00e9 | fbff ffff 

  0x000002149eac152c: ;   {static_stub}
  0x000002149eac152c: 9048 bb00 | 0000 0000 

  0x000002149eac1534: ;   {runtime_call nmethod}
  0x000002149eac1534: 0000 00e9 | fbff ffff 

  0x000002149eac153c: ;   {static_stub}
  0x000002149eac153c: 9048 bb00 | 0000 0000 

  0x000002149eac1544: ;   {runtime_call nmethod}
  0x000002149eac1544: 0000 00e9 | fbff ffff 

  0x000002149eac154c: ;   {static_stub}
  0x000002149eac154c: 9048 bb00 | 0000 0000 

  0x000002149eac1554: ;   {runtime_call nmethod}
  0x000002149eac1554: 0000 00e9 | fbff ffff 

  0x000002149eac155c: ;   {static_stub}
  0x000002149eac155c: 9048 bb00 | 0000 0000 

  0x000002149eac1564: ;   {runtime_call nmethod}
  0x000002149eac1564: 0000 00e9 | fbff ffff 

  0x000002149eac156c: ;   {static_stub}
  0x000002149eac156c: 48bb 0000 | 0000 0000 

  0x000002149eac1574: ;   {runtime_call nmethod}
  0x000002149eac1574: 0000 e9fb 

  0x000002149eac1578: ;   {static_stub}
  0x000002149eac1578: ffff ff48 | bb00 0000 | 0000 0000 

  0x000002149eac1584: ;   {runtime_call nmethod}
  0x000002149eac1584: 00e9 fbff 

  0x000002149eac1588: ;   {runtime_call C1 Runtime handle_exception_from_callee_blob}
  0x000002149eac1588: ffff e8d1 

  0x000002149eac158c: ;   {external_word}
  0x000002149eac158c: d630 0748 | b908 ec0a | bdf9 7f00 | 0048 83e4 

  0x000002149eac159c: ;   {runtime_call}
  0x000002149eac159c: f048 b830 | a8d1 bcf9 | 7f00 00ff 

  0x000002149eac15a8: ;   {section_word}
  0x000002149eac15a8: d0f4 49ba | aa15 ac9e | 1402 0000 

  0x000002149eac15b4: ;   {runtime_call DeoptimizationBlob}
  0x000002149eac15b4: 4152 e9c5 | 3c25 07f4 | f4f4 f4f4 
[/MachCode]


Compiled method (c1) 59411 4231       3       javafx.beans.property.IntegerPropertyBase::set (76 bytes)
 total in heap  [0x000002149eec0988,0x000002149eec1638] = 3248
 relocation     [0x000002149eec0a60,0x000002149eec0b40] = 224
 main code      [0x000002149eec0b40,0x000002149eec1540] = 2560
 stub code      [0x000002149eec1540,0x000002149eec15c8] = 136
 oops           [0x000002149eec15c8,0x000002149eec15d0] = 8
 metadata       [0x000002149eec15d0,0x000002149eec1638] = 104
 immutable data [0x00000214fe1d5880,0x00000214fe1d5af0] = 624
 dependencies   [0x00000214fe1d5880,0x00000214fe1d58b0] = 48
 nul chk table  [0x00000214fe1d58b0,0x00000214fe1d58d8] = 40
 scopes pcs     [0x00000214fe1d58d8,0x00000214fe1d5a28] = 336
 scopes data    [0x00000214fe1d5a28,0x00000214fe1d5af0] = 200

[Constant Pool (empty)]

[MachCode]
[Instructions begin]
  0x000002149eec0b40: 6666 660f | 1f84 0000 | 0000 0066 | 6666 9066 | 6690 448b | 5208 443b 

  0x000002149eec0b58: ;   {runtime_call Shared Runtime ic_miss_blob}
  0x000002149eec0b58: 5008 0f85 | 00dc e406 
[Verified Entry Point]
  0x000002149eec0b60: 8984 2400 | 80ff ff55 | 4881 ec80 | 0000 0090 | 4181 7f20 | 0100 0000 

  0x000002149eec0b78: ;   {runtime_call StubRoutines (final stubs)}
  0x000002149eec0b78: 7405 e881 

  0x000002149eec0b7c: ;   {metadata(method data for {method} {0x00000214f666c978} 'set' '(I)V' in 'javafx/beans/property/IntegerPropertyBase')}
  0x000002149eec0b7c: 4ee3 0648 | beb8 45d6 | f614 0200 | 008b becc | 0000 0083 | c702 89be | cc00 0000 | 81e7 fe07 
  0x000002149eec0b9c: 0000 85ff | 0f84 2808 | 0000 488b 

  0x000002149eec0ba8: ;   {metadata(method data for {method} {0x00000214f666c978} 'set' '(I)V' in 'javafx/beans/property/IntegerPropertyBase')}
  0x000002149eec0ba8: f248 bfb8 | 45d6 f614 | 0200 008b | 7608 49ba | 0000 00b5 | 1402 0000 | 4903 f248 | 3bb7 1801 
  0x000002149eec0bc8: 0000 750d | 4883 8720 | 0100 0001 | e960 0000 | 0048 3bb7 | 2801 0000 | 750d 4883 | 8730 0100 
  0x000002149eec0be8: 0001 e94a | 0000 0048 | 83bf 1801 | 0000 0075 | 1748 89b7 | 1801 0000 | 48c7 8720 | 0100 0001 
  0x000002149eec0c08: 0000 00e9 | 2900 0000 | 4883 bf28 | 0100 0000 | 7517 4889 | b728 0100 | 0048 c787 | 3001 0000 
  0x000002149eec0c28: 0100 0000 | e908 0000 | 0048 8387 | 1001 0000 

  0x000002149eec0c38: ;   {metadata(method data for {method} {0x00000214f666ca50} 'isBound' '()Z' in 'javafx/beans/property/IntegerPropertyBase')}
  0x000002149eec0c38: 0148 be58 | 4be0 f614 | 0200 008b | becc 0000 | 0083 c702 | 89be cc00 | 0000 81e7 | feff 1f00 
  0x000002149eec0c58: 85ff 0f84 | 8f07 0000 | 8b72 1448 | c1e6 0348 

  0x000002149eec0c68: ;   {metadata(method data for {method} {0x00000214f666ca50} 'isBound' '()Z' in 'javafx/beans/property/IntegerPropertyBase')}
  0x000002149eec0c68: 85f6 48be | 584b e0f6 | 1402 0000 | bf10 0100 | 0074 05bf | 2001 0000 | 488b 043e | 488d 4001 
  0x000002149eec0c88: 4889 043e | 0f84 1a00 

  0x000002149eec0c90: ;   {metadata(method data for {method} {0x00000214f666ca50} 'isBound' '()Z' in 'javafx/beans/property/IntegerPropertyBase')}
  0x000002149eec0c90: 0000 48be | 584b e0f6 | 1402 0000 | ff86 3001 | 0000 be01 | 0000 00e9 | 0500 0000 | be00 0000 
  0x000002149eec0cb0: 0083 e601 

  0x000002149eec0cb4: ;   {metadata(method data for {method} {0x00000214f666c978} 'set' '(I)V' in 'javafx/beans/property/IntegerPropertyBase')}
  0x000002149eec0cb4: 85f6 48be | b845 d6f6 | 1402 0000 | bf40 0100 | 0074 05bf | 5001 0000 | 488b 043e | 488d 4001 
  0x000002149eec0cd4: 4889 043e | 488b da0f | 8419 0100 | 000f 1f80 | 0000 0000 

  0x000002149eec0ce8: ;   {no_reloc}
  0x000002149eec0ce8: e932 0700 | 0000 0000 | 0000 498b | 87c8 0100 | 0048 8d78 | 2849 3bbf | d801 0000 | 0f87 1f07 
  0x000002149eec0d08: 0000 4989 | bfc8 0100 | 0048 c700 | 0100 0000 | 488b ca49 | ba00 0000 | b514 0200 | 0049 2bca 
  0x000002149eec0d28: 8948 0848 | 33c9 8948 | 0c48 33c9 | 4889 4810 | 4889 4818 | 4889 4820 | 4889 4424 | 6848 8bd3 
  0x000002149eec0d48: ;   {metadata(method data for {method} {0x00000214f666c978} 'set' '(I)V' in 'javafx/beans/property/IntegerPropertyBase')}
  0x000002149eec0d48: 48be b845 | d6f6 1402 

  0x000002149eec0d50: ;   {metadata('javafx/beans/property/SimpleIntegerProperty')}
  0x000002149eec0d50: 0000 49ba | 78c4 03b6 | 1402 0000 | 4c89 9668 | 0100 0048 | 8386 7001 | 0000 018b | 7320 48c1 
  0x000002149eec0d70: e603 4885 

  0x000002149eec0d74: ;   {metadata(method data for {method} {0x00000214f666c978} 'set' '(I)V' in 'javafx/beans/property/IntegerPropertyBase')}
  0x000002149eec0d74: f648 bab8 | 45d6 f614 | 0200 00bf | 9001 0000 | 7405 bfa0 | 0100 0048 | 8b0c 3a48 | 8d49 0148 
  0x000002149eec0d94: 890c 3a0f | 84a2 0300 | 0048 8bd3 

  0x000002149eec0da0: ;   {metadata(method data for {method} {0x00000214f666c978} 'set' '(I)V' in 'javafx/beans/property/IntegerPropertyBase')}
  0x000002149eec0da0: 48bf b845 | d6f6 1402 

  0x000002149eec0da8: ;   {metadata('javafx/beans/property/SimpleIntegerProperty')}
  0x000002149eec0da8: 0000 49ba | 78c4 03b6 | 1402 0000 | 4c89 97b8 | 0100 0048 | 8387 c001 | 0000 018b | 5324 48c1 
  0x000002149eec0dc8: e203 4885 

  0x000002149eec0dcc: ;   {metadata(method data for {method} {0x00000214f666c978} 'set' '(I)V' in 'javafx/beans/property/IntegerPropertyBase')}
  0x000002149eec0dcc: d248 bab8 | 45d6 f614 | 0200 00bf | e001 0000 | 7405 bff0 | 0100 0048 | 8b0c 3a48 | 8d49 0148 
  0x000002149eec0dec: 890c 3a0f | 844a 0300 | 00e9 5403 | 0000 8b53 | 0c41 3bd0 

  0x000002149eec0e00: ;   {metadata(method data for {method} {0x00000214f666c978} 'set' '(I)V' in 'javafx/beans/property/IntegerPropertyBase')}
  0x000002149eec0e00: 48ba b845 | d6f6 1402 | 0000 be58 | 0300 0074 | 05be 6803 | 0000 488b | 3c32 488d | 7f01 4889 
  0x000002149eec0e20: 3c32 0f84 | 0403 0000 | 4489 430c 

  0x000002149eec0e2c: ;   {metadata(method data for {method} {0x00000214f666c978} 'set' '(I)V' in 'javafx/beans/property/IntegerPropertyBase')}
  0x000002149eec0e2c: 488b d348 | beb8 45d6 | f614 0200 | 0048 8386 | 7803 0000 

  0x000002149eec0e40: ;   {metadata(method data for {method} {0x00000214f666c738} 'markInvalid' '()V' in 'javafx/beans/property/IntegerPropertyBase')}
  0x000002149eec0e40: 0148 ba20 | 53e0 f614 | 0200 008b | b2cc 0000 | 0083 c602 | 89b2 cc00 | 0000 81e6 | feff 1f00 
  0x000002149eec0e60: 85f6 0f84 | ce05 0000 | 0fbe 5310 

  0x000002149eec0e6c: ;   {metadata(method data for {method} {0x00000214f666c738} 'markInvalid' '()V' in 'javafx/beans/property/IntegerPropertyBase')}
  0x000002149eec0e6c: 85d2 48ba | 2053 e0f6 | 1402 0000 | be10 0100 | 0074 05be | 2001 0000 | 488b 3c32 | 488d 7f01 
  0x000002149eec0e8c: 4889 3c32 | 0f84 9602 | 0000 c643 | 1000 488b 

  0x000002149eec0e9c: ;   {metadata(method data for {method} {0x00000214f666c738} 'markInvalid' '()V' in 'javafx/beans/property/IntegerPropertyBase')}
  0x000002149eec0e9c: d348 be20 | 53e0 f614 | 0200 008b | 5208 49ba | 0000 00b5 | 1402 0000 | 4903 d248 | 3b96 3801 
  0x000002149eec0ebc: 0000 750d | 4883 8640 | 0100 0001 | e960 0000 | 0048 3b96 | 4801 0000 | 750d 4883 | 8650 0100 
  0x000002149eec0edc: 0001 e94a | 0000 0048 | 83be 3801 | 0000 0075 | 1748 8996 | 3801 0000 | 48c7 8640 | 0100 0001 
  0x000002149eec0efc: 0000 00e9 | 2900 0000 | 4883 be48 | 0100 0000 | 7517 4889 | 9648 0100 | 0048 c786 | 5001 0000 
  0x000002149eec0f1c: 0100 0000 | e908 0000 | 0048 8386 | 3001 0000 

  0x000002149eec0f2c: ;   {metadata(method data for {method} {0x00000214f666c7d0} 'invalidated' '()V' in 'javafx/beans/property/IntegerPropertyBase')}
  0x000002149eec0f2c: 0148 baf0 | 54e0 f614 | 0200 008b | b2cc 0000 | 0083 c602 | 89b2 cc00 | 0000 81e6 | feff 1f00 
  0x000002149eec0f4c: 85f6 0f84 | 0305 0000 

  0x000002149eec0f54: ;   {metadata(method data for {method} {0x00000214f666c738} 'markInvalid' '()V' in 'javafx/beans/property/IntegerPropertyBase')}
  0x000002149eec0f54: 488b d348 | be20 53e0 | f614 0200 | 008b 5208 | 49ba 0000 | 00b5 1402 | 0000 4903 | d248 3b96 
  0x000002149eec0f74: 6801 0000 | 750d 4883 | 8670 0100 | 0001 e960 | 0000 0048 | 3b96 7801 | 0000 750d | 4883 8680 
  0x000002149eec0f94: 0100 0001 | e94a 0000 | 0048 83be | 6801 0000 | 0075 1748 | 8996 6801 | 0000 48c7 | 8670 0100 
  0x000002149eec0fb4: 0001 0000 | 00e9 2900 | 0000 4883 | be78 0100 | 0000 7517 | 4889 9678 | 0100 0048 | c786 8001 
  0x000002149eec0fd4: 0000 0100 | 0000 e908 | 0000 0048 | 8386 6001 

  0x000002149eec0fe4: ;   {metadata(method data for {method} {0x00000214f666c688} 'fireValueChangedEvent' '()V' in 'javafx/beans/property/IntegerPropertyBase')}
  0x000002149eec0fe4: 0000 0148 | ba18 56e0 | f614 0200 | 008b b2cc | 0000 0083 | c602 89b2 | cc00 0000 | 81e6 feff 
  0x000002149eec1004: 1f00 85f6 | 0f84 6a04 | 0000 8b53 | 1c48 c1e2 

  0x000002149eec1014: ;   {metadata(method data for {method} {0x00000214f666c688} 'fireValueChangedEvent' '()V' in 'javafx/beans/property/IntegerPropertyBase')}
  0x000002149eec1014: 0348 be18 | 56e0 f614 | 0200 0048 | 8386 1001 

  0x000002149eec1024: ;   {metadata(method data for {method} {0x00000214f65a9908} 'fireValueChangedEvent' '(Lcom/sun/javafx/binding/ExpressionHelper;)V' in 'com/sun/javafx/binding/ExpressionHelper')}
  0x000002149eec1024: 0000 0148 | be78 72a7 | f614 0200 | 008b becc | 0000 0083 | c702 89be | cc00 0000 | 81e7 feff 
  0x000002149eec1044: 1f00 85ff | 0f84 4b04 | 0000 4885 

  0x000002149eec1050: ;   {metadata(method data for {method} {0x00000214f65a9908} 'fireValueChangedEvent' '(Lcom/sun/javafx/binding/ExpressionHelper;)V' in 'com/sun/javafx/binding/ExpressionHelper')}
  0x000002149eec1050: d248 be78 | 72a7 f614 | 0200 00bf | 1001 0000 | 7405 bf20 | 0100 0048 | 8b1c 3e48 | 8d5b 0148 
  0x000002149eec1070: 891c 3e0f | 84b3 0000 | 0048 3b02 

  0x000002149eec107c: ;   {metadata(method data for {method} {0x00000214f65a9908} 'fireValueChangedEvent' '(Lcom/sun/javafx/binding/ExpressionHelper;)V' in 'com/sun/javafx/binding/ExpressionHelper')}
  0x000002149eec107c: 488b f248 | bf78 72a7 | f614 0200 | 008b 7608 | 49ba 0000 | 00b5 1402 | 0000 4903 | f248 3bb7 
  0x000002149eec109c: 3801 0000 | 750d 4883 | 8740 0100 | 0001 e960 | 0000 0048 | 3bb7 4801 | 0000 750d | 4883 8750 
  0x000002149eec10bc: 0100 0001 | e94a 0000 | 0048 83bf | 3801 0000 | 0075 1748 | 89b7 3801 | 0000 48c7 | 8740 0100 
  0x000002149eec10dc: 0001 0000 | 00e9 2900 | 0000 4883 | bf48 0100 | 0000 7517 | 4889 b748 | 0100 0048 | c787 5001 
  0x000002149eec10fc: 0000 0100 | 0000 e908 | 0000 0048 | 8387 3001 | 0000 0166 | 0f1f 4400 | 0048 b8a0 | 1cbc b414 
  0x000002149eec111c: ;   {virtual_call}
  0x000002149eec111c: 0200 00e8 

  0x000002149eec1120: ; ImmutableOopMap {}
                      ;*invokevirtual fireValueChangedEvent {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.binding.ExpressionHelper::fireValueChangedEvent@5 (line 91)
                      ; - javafx.beans.property.IntegerPropertyBase::fireValueChangedEvent@4 (line 107)
                      ; - javafx.beans.property.IntegerPropertyBase::markInvalid@17 (line 114)
                      ; - javafx.beans.property.IntegerPropertyBase::set@72 (line 148)
  0x000002149eec1120: ccd9 f106 

  0x000002149eec1124: ;   {post_call_nop}
  0x000002149eec1124: 0f1f 8400 | 9c07 0000 | 4881 c480 | 0000 005d 

  0x000002149eec1134: ;   {poll_return}
  0x000002149eec1134: 493b 6728 | 0f87 8103 

  0x000002149eec113c: ;   {oop(""{0x00000007ffe027c8})}
  0x000002149eec113c: 0000 c348 | bec8 27e0 | ff07 0000 | 00e9 0902 | 0000 488b 

  0x000002149eec1150: ;   {metadata(method data for {method} {0x00000214f666c978} 'set' '(I)V' in 'javafx/beans/property/IntegerPropertyBase')}
  0x000002149eec1150: d348 bfb8 | 45d6 f614 

  0x000002149eec1158: ;   {metadata('javafx/beans/property/SimpleIntegerProperty')}
  0x000002149eec1158: 0200 0049 | ba78 c403 | b614 0200 | 004c 8997 | 0802 0000 | 4883 8710 | 0200 0001 

  0x000002149eec1174: ; implicit exception: dispatches to 0x000002149eec14d5
  0x000002149eec1174: 483b 0648 

  0x000002149eec1178: ;   {metadata(method data for {method} {0x00000214f666c978} 'set' '(I)V' in 'javafx/beans/property/IntegerPropertyBase')}
  0x000002149eec1178: 8bd6 48bf | b845 d6f6 | 1402 0000 | 8b52 0849 | ba00 0000 | b514 0200 | 0049 03d2 | 483b 9738 
  0x000002149eec1198: 0200 0075 | 0d48 8387 | 4002 0000 | 01e9 6000 | 0000 483b | 9748 0200 | 0075 0d48 | 8387 5002 
  0x000002149eec11b8: 0000 01e9 | 4a00 0000 | 4883 bf38 | 0200 0000 | 7517 4889 | 9738 0200 | 0048 c787 | 4002 0000 
  0x000002149eec11d8: 0100 0000 | e929 0000 | 0048 83bf | 4802 0000 | 0075 1748 | 8997 4802 | 0000 48c7 | 8750 0200 
  0x000002149eec11f8: 0001 0000 | 00e9 0800 | 0000 4883 | 8730 0200 | 0001 8b56 | 0849 ba00 | 0000 b514 | 0200 0049 
  0x000002149eec1218: 03d2 488b | 5270 488b | 1248 3b02 

  0x000002149eec1224: ;   {metadata(method data for {method} {0x00000214f666c978} 'set' '(I)V' in 'javafx/beans/property/IntegerPropertyBase')}
  0x000002149eec1224: 488b f248 | bfb8 45d6 | f614 0200 | 008b 7608 | 49ba 0000 | 00b5 1402 | 0000 4903 | f248 3bb7 
  0x000002149eec1244: 6802 0000 | 750d 4883 | 8770 0200 | 0001 e960 | 0000 0048 | 3bb7 7802 | 0000 750d | 4883 8780 
  0x000002149eec1264: 0200 0001 | e94a 0000 | 0048 83bf | 6802 0000 | 0075 1748 | 89b7 6802 | 0000 48c7 | 8770 0200 
  0x000002149eec1284: 0001 0000 | 00e9 2900 | 0000 4883 | bf78 0200 | 0000 7517 | 4889 b778 | 0200 0048 | c787 8002 
  0x000002149eec12a4: 0000 0100 | 0000 e908 | 0000 0048 | 8387 6002 | 0000 0148 | 895c 2460 

  0x000002149eec12bc: ;   {optimized virtual_call}
  0x000002149eec12bc: 6666 90e8 

  0x000002149eec12c0: ; ImmutableOopMap {[96]=Oop [104]=Oop }
                      ;*invokevirtual getSimpleName {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.beans.property.IntegerPropertyBase::set@32 (line 144)
  0x000002149eec12c0: 9cd7 e406 

  0x000002149eec12c4: ;   {post_call_nop}
  0x000002149eec12c4: 0f1f 8400 | 3c09 0001 | 488b 5424 

  0x000002149eec12d0: ;   {metadata(method data for {method} {0x00000214f666c978} 'set' '(I)V' in 'javafx/beans/property/IntegerPropertyBase')}
  0x000002149eec12d0: 6049 b8b8 | 45d6 f614 

  0x000002149eec12d8: ;   {metadata('javafx/beans/property/SimpleIntegerProperty')}
  0x000002149eec12d8: 0200 0049 | ba78 c403 | b614 0200 | 004d 8990 | 9802 0000 | 4983 80a0 | 0200 0001 | 488b 5424 
  0x000002149eec12f8: 6044 8b42 | 2449 c1e0 | 030f 1f80 | 0000 0000 

  0x000002149eec1308: ;   {no_reloc}
  0x000002149eec1308: e9e6 0100 | 0090 9090 | 9090 488b 

  0x000002149eec1314: ;   {static_call}
  0x000002149eec1314: d066 90e8 

  0x000002149eec1318: ; ImmutableOopMap {[104]=Oop }
                      ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.beans.property.IntegerPropertyBase::set@39 (line 144)
  0x000002149eec1318: 44dd e406 

  0x000002149eec131c: ;   {post_call_nop}
  0x000002149eec131c: 0f1f 8400 | 9409 0002 

  0x000002149eec1324: ;   {metadata(method data for {method} {0x00000214f666c978} 'set' '(I)V' in 'javafx/beans/property/IntegerPropertyBase')}
  0x000002149eec1324: 48ba b845 | d6f6 1402 | 0000 488d | 92f0 0200 | 0048 85c0 | 750a f602 | 0175 05f0 | 4883 0a01 
  0x000002149eec1344: ;   {metadata(method data for {method} {0x00000214f666c978} 'set' '(I)V' in 'javafx/beans/property/IntegerPropertyBase')}
  0x000002149eec1344: 48ba b845 | d6f6 1402 | 0000 ff82 | 0003 0000 | 488b f090 

  0x000002149eec1358: ;   {no_reloc}
  0x000002149eec1358: e9af 0100 | 0090 9090 | 9090 488b 

  0x000002149eec1364: ;   {static_call}
  0x000002149eec1364: d666 90e8 

  0x000002149eec1368: ; ImmutableOopMap {[104]=Oop }
                      ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.beans.property.IntegerPropertyBase::set@49 (line 144)
  0x000002149eec1368: f4dc e406 

  0x000002149eec136c: ;   {post_call_nop}
  0x000002149eec136c: 0f1f 8400 | e409 0003 

  0x000002149eec1374: ;   {metadata(method data for {method} {0x00000214f666c978} 'set' '(I)V' in 'javafx/beans/property/IntegerPropertyBase')}
  0x000002149eec1374: 49b8 b845 | d6f6 1402 | 0000 4d8d | 8038 0300 | 0048 85c0 | 750b 41f6 | 0001 7505 | f049 8308 
  0x000002149eec1394: 014c 8b44 

  0x000002149eec1398: ;   {metadata(method data for {method} {0x00000214f666c978} 'set' '(I)V' in 'javafx/beans/property/IntegerPropertyBase')}
  0x000002149eec1398: 2468 48ba | b845 d6f6 | 1402 0000 | 4883 8248 | 0300 0001 | 4c8b c048 | 8b54 2468 

  0x000002149eec13b4: ;   {optimized virtual_call}
  0x000002149eec13b4: 6666 90e8 

  0x000002149eec13b8: ; ImmutableOopMap {[104]=Oop }
                      ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.beans.property.IntegerPropertyBase::set@54 (line 144)
  0x000002149eec13b8: a4d6 e406 

  0x000002149eec13bc: ;   {post_call_nop}
  0x000002149eec13bc: 0f1f 8400 | 340a 0004 | 488b 4424 | 68e9 6501 

  0x000002149eec13cc: ;   {metadata({method} {0x00000214f666c978} 'set' '(I)V' in 'javafx/beans/property/IntegerPropertyBase')}
  0x000002149eec13cc: 0000 49ba | 70c9 66f6 | 1402 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000002149eec13e4: ;   {runtime_call C1 Runtime counter_overflow_blob}
  0x000002149eec13e4: ffe8 7617 

  0x000002149eec13e8: ; ImmutableOopMap {rdx=Oop }
                      ;*synchronization entry
                      ; - javafx.beans.property.IntegerPropertyBase::set@-1 (line 142)
  0x000002149eec13e8: f106 e9b7 

  0x000002149eec13ec: ;   {metadata({method} {0x00000214f666ca50} 'isBound' '()Z' in 'javafx/beans/property/IntegerPropertyBase')}
  0x000002149eec13ec: f7ff ff49 | ba48 ca66 | f614 0200 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000002149eec1404: ;   {runtime_call C1 Runtime counter_overflow_blob}
  0x000002149eec1404: ffff e855 

  0x000002149eec1408: ; ImmutableOopMap {rdx=Oop }
                      ;*synchronization entry
                      ; - javafx.beans.property.IntegerPropertyBase::isBound@-1 (line 157)
                      ; - javafx.beans.property.IntegerPropertyBase::set@1 (line 142)
  0x000002149eec1408: 17f1 06e9 | 50f8 ffff 

  0x000002149eec1410: ;   {metadata(nullptr)}
  0x000002149eec1410: 48ba 0000 | 0000 0000 | 0000 b800 

  0x000002149eec141c: ;   {runtime_call C1 Runtime load_klass_patching_blob}
  0x000002149eec141c: 0f05 0ae8 

  0x000002149eec1420: ; ImmutableOopMap {rbx=Oop }
                      ;*new {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) javafx.beans.property.IntegerPropertyBase::set@7 (line 143)
  0x000002149eec1420: 3cfe f006 | e9bf f8ff | ff48 8bd2 

  0x000002149eec142c: ;   {runtime_call C1 Runtime fast_new_instance_blob}
  0x000002149eec142c: e82f c3f0 

  0x000002149eec1430: ; ImmutableOopMap {rbx=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.beans.property.IntegerPropertyBase::set@7 (line 143)
  0x000002149eec1430: 06e9 0af9 

  0x000002149eec1434: ;   {metadata({method} {0x00000214f666c738} 'markInvalid' '()V' in 'javafx/beans/property/IntegerPropertyBase')}
  0x000002149eec1434: ffff 49ba | 30c7 66f6 | 1402 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000002149eec144c: ;   {runtime_call C1 Runtime counter_overflow_blob}
  0x000002149eec144c: ffe8 0e17 

  0x000002149eec1450: ; ImmutableOopMap {rbx=Oop }
                      ;*synchronization entry
                      ; - javafx.beans.property.IntegerPropertyBase::markInvalid@-1 (line 111)
                      ; - javafx.beans.property.IntegerPropertyBase::set@72 (line 148)
  0x000002149eec1450: f106 e911 

  0x000002149eec1454: ;   {metadata({method} {0x00000214f666c7d0} 'invalidated' '()V' in 'javafx/beans/property/IntegerPropertyBase')}
  0x000002149eec1454: faff ff49 | bac8 c766 | f614 0200 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000002149eec146c: ;   {runtime_call C1 Runtime counter_overflow_blob}
  0x000002149eec146c: ffff e8ed 

  0x000002149eec1470: ; ImmutableOopMap {rbx=Oop }
                      ;*synchronization entry
                      ; - javafx.beans.property.IntegerPropertyBase::invalidated@-1 (line 126)
                      ; - javafx.beans.property.IntegerPropertyBase::markInvalid@13 (line 113)
                      ; - javafx.beans.property.IntegerPropertyBase::set@72 (line 148)
  0x000002149eec1470: 16f1 06e9 | dcfa ffff 

  0x000002149eec1478: ;   {metadata({method} {0x00000214f666c688} 'fireValueChangedEvent' '()V' in 'javafx/beans/property/IntegerPropertyBase')}
  0x000002149eec1478: 49ba 80c6 | 66f6 1402 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000002149eec148c: ;   {runtime_call C1 Runtime counter_overflow_blob}
  0x000002149eec148c: ffff ffe8 

  0x000002149eec1490: ; ImmutableOopMap {rbx=Oop }
                      ;*synchronization entry
                      ; - javafx.beans.property.IntegerPropertyBase::fireValueChangedEvent@-1 (line 107)
                      ; - javafx.beans.property.IntegerPropertyBase::markInvalid@17 (line 114)
                      ; - javafx.beans.property.IntegerPropertyBase::set@72 (line 148)
  0x000002149eec1490: cc16 f106 | e975 fbff 

  0x000002149eec1498: ;   {metadata({method} {0x00000214f65a9908} 'fireValueChangedEvent' '(Lcom/sun/javafx/binding/ExpressionHelper;)V' in 'com/sun/javafx/binding/ExpressionHelper')}
  0x000002149eec1498: ff49 ba00 | 995a f614 | 0200 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000002149eec14b0: ;   {runtime_call C1 Runtime counter_overflow_blob}
  0x000002149eec14b0: e8ab 16f1 

  0x000002149eec14b4: ; ImmutableOopMap {rdx=Oop }
                      ;*synchronization entry
                      ; - com.sun.javafx.binding.ExpressionHelper::fireValueChangedEvent@-1 (line 90)
                      ; - javafx.beans.property.IntegerPropertyBase::fireValueChangedEvent@4 (line 107)
                      ; - javafx.beans.property.IntegerPropertyBase::markInvalid@17 (line 114)
                      ; - javafx.beans.property.IntegerPropertyBase::set@72 (line 148)
  0x000002149eec14b4: 06e9 94fb 

  0x000002149eec14b8: ;   {runtime_call C1 Runtime throw_null_pointer_exception_blob}
  0x000002149eec14b8: ffff e8a1 

  0x000002149eec14bc: ; ImmutableOopMap {rdx=Oop }
                      ;*invokevirtual fireValueChangedEvent {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.binding.ExpressionHelper::fireValueChangedEvent@5 (line 91)
                      ; - javafx.beans.property.IntegerPropertyBase::fireValueChangedEvent@4 (line 107)
                      ; - javafx.beans.property.IntegerPropertyBase::markInvalid@17 (line 114)
                      ; - javafx.beans.property.IntegerPropertyBase::set@72 (line 148)
                      ;   {internal_word}
  0x000002149eec14bc: b9f0 0649 | ba34 11ec | 9e14 0200 | 004d 8997 | 6004 0000 

  0x000002149eec14d0: ;   {runtime_call SafepointBlob}
  0x000002149eec14d0: e90b 48e5 

  0x000002149eec14d4: ;   {runtime_call C1 Runtime throw_null_pointer_exception_blob}
  0x000002149eec14d4: 06e8 86b9 

  0x000002149eec14d8: ; ImmutableOopMap {rsi=Oop rbx=Oop [104]=Oop }
                      ;*invokevirtual getClass {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.beans.property.IntegerPropertyBase::set@29 (line 144)
                      ;   {runtime_call C1 Runtime throw_null_pointer_exception_blob}
  0x000002149eec14d8: f006 e881 

  0x000002149eec14dc: ; ImmutableOopMap {rbx=Oop [104]=Oop }
                      ;*invokevirtual getClass {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.beans.property.IntegerPropertyBase::set@29 (line 144)
                      ;   {runtime_call C1 Runtime throw_null_pointer_exception_blob}
  0x000002149eec14dc: b9f0 06e8 

  0x000002149eec14e0: ; ImmutableOopMap {rbx=Oop rdx=Oop [104]=Oop }
                      ;*invokevirtual getSimpleName {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.beans.property.IntegerPropertyBase::set@32 (line 144)
  0x000002149eec14e0: 7cb9 f006 | 49b9 0000 | 0000 0000 | 0000 b800 

  0x000002149eec14f0: ;   {runtime_call C1 Runtime load_appendix_patching_blob}
  0x000002149eec14f0: 0f05 0ae8 

  0x000002149eec14f4: ; ImmutableOopMap {rax=Oop r8=Oop [104]=Oop }
                      ;*invokedynamic {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) javafx.beans.property.IntegerPropertyBase::set@39 (line 144)
  0x000002149eec14f4: e80a f106 | e90b feff | ff49 b800 | 0000 0000 | 0000 00b8 | 000f 050a 

  0x000002149eec150c: ;   {runtime_call C1 Runtime load_appendix_patching_blob}
  0x000002149eec150c: e8cf 0af1 

  0x000002149eec1510: ; ImmutableOopMap {rsi=Oop [104]=Oop }
                      ;*invokedynamic {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) javafx.beans.property.IntegerPropertyBase::set@49 (line 144)
  0x000002149eec1510: 06e9 42fe | ffff 498b | 8708 0500 | 0049 c787 | 0805 0000 | 0000 0000 | 49c7 8710 | 0500 0000 
  0x000002149eec1530: 0000 0048 | 81c4 8000 

  0x000002149eec1538: ;   {runtime_call C1 Runtime unwind_exception_blob}
  0x000002149eec1538: 0000 5de9 | a0a6 f006 
[Stub Code]
  0x000002149eec1540: ;   {no_reloc}
  0x000002149eec1540: 0f1f 4400 

  0x000002149eec1544: ;   {static_stub}
  0x000002149eec1544: 0048 bb00 | 0000 0000 

  0x000002149eec154c: ;   {runtime_call nmethod}
  0x000002149eec154c: 0000 00e9 | fbff ffff 

  0x000002149eec1554: ;   {static_stub}
  0x000002149eec1554: 9048 bb00 | 0000 0000 

  0x000002149eec155c: ;   {runtime_call nmethod}
  0x000002149eec155c: 0000 00e9 | fbff ffff 

  0x000002149eec1564: ;   {static_stub}
  0x000002149eec1564: 9048 bb00 | 0000 0000 

  0x000002149eec156c: ;   {runtime_call nmethod}
  0x000002149eec156c: 0000 00e9 | fbff ffff 

  0x000002149eec1574: ;   {static_stub}
  0x000002149eec1574: 48bb 0000 | 0000 0000 

  0x000002149eec157c: ;   {runtime_call nmethod}
  0x000002149eec157c: 0000 e9fb 

  0x000002149eec1580: ;   {static_stub}
  0x000002149eec1580: ffff ff48 | bb00 0000 | 0000 0000 

  0x000002149eec158c: ;   {runtime_call nmethod}
  0x000002149eec158c: 00e9 fbff 

  0x000002149eec1590: ;   {runtime_call C1 Runtime handle_exception_from_callee_blob}
  0x000002149eec1590: ffff e8c9 

  0x000002149eec1594: ;   {external_word}
  0x000002149eec1594: d6f0 0648 | b908 ec0a | bdf9 7f00 | 0048 83e4 

  0x000002149eec15a4: ;   {runtime_call}
  0x000002149eec15a4: f048 b830 | a8d1 bcf9 | 7f00 00ff 

  0x000002149eec15b0: ;   {section_word}
  0x000002149eec15b0: d0f4 49ba | b215 ec9e | 1402 0000 

  0x000002149eec15bc: ;   {runtime_call DeoptimizationBlob}
  0x000002149eec15bc: 4152 e9bd | 3ce5 06f4 | f4f4 f4f4 
[/MachCode]


Compiled method (c2) 59452 4181       4       Alastor$1::handle (2747 bytes)
 total in heap  [0x00000214a6412908,0x00000214a64254f8] = 76784
 relocation     [0x00000214a64129e0,0x00000214a6414078] = 5784
 constants      [0x00000214a6414080,0x00000214a6414140] = 192
 main code      [0x00000214a6414140,0x00000214a6424538] = 66552
 stub code      [0x00000214a6424538,0x00000214a6424d08] = 2000
 oops           [0x00000214a6424d08,0x00000214a6424db8] = 176
 metadata       [0x00000214a6424db8,0x00000214a64254f8] = 1856
 immutable data [0x00000214868c9d30,0x00000214868d2568] = 34872
 dependencies   [0x00000214868c9d30,0x00000214868c9f30] = 512
 nul chk table  [0x00000214868c9f30,0x00000214868ca208] = 728
 handler table  [0x00000214868ca208,0x00000214868cbfc0] = 7608
 scopes pcs     [0x00000214868cbfc0,0x00000214868ce2d0] = 8976
 scopes data    [0x00000214868ce2d0,0x00000214868d2568] = 17048


[Constant Pool]
             Address          hex4                    hex8      
  0x00000214a6414080:   0x00000000      0x0000000000000000      
  0x00000214a6414084:   0x00000000                              
  0x00000214a6414088:   0x00000000      0x3ff8000000000000      
  0x00000214a641408c:   0x3ff80000                              
  0x00000214a6414090:   0x00000000      0x402e000000000000      
  0x00000214a6414094:   0x402e0000                              
  0x00000214a6414098:   0x00000000      0x41cdcd6500000000      
  0x00000214a641409c:   0x41cdcd65                              
  0x00000214a64140a0:   0x00000000      0x4049000000000000      
  0x00000214a64140a4:   0x40490000                              
  0x00000214a64140a8:   0x00000000      0x4020000000000000      
  0x00000214a64140ac:   0x40200000                              
  0x00000214a64140b0:   0x00000000      0x3ff0000000000000      
  0x00000214a64140b4:   0x3ff00000                              
  0x00000214a64140b8:   0x00000000      0x404e000000000000      
  0x00000214a64140bc:   0x404e0000                              
  0x00000214a64140c0:   0x00000000      0x4038000000000000      
  0x00000214a64140c4:   0x40380000                              
  0x00000214a64140c8:   0x00000000      0x4024000000000000      
  0x00000214a64140cc:   0x40240000                              
  0x00000214a64140d0:   0x00000000      0x4010000000000000      
  0x00000214a64140d4:   0x40100000                              
  0x00000214a64140d8:   0x00000000      0x4030000000000000      
  0x00000214a64140dc:   0x40300000                              
  0x00000214a64140e0:   0x00000000      0xc038000000000000      
  0x00000214a64140e4:   0xc0380000                              
  0x00000214a64140e8:   0x00000000      0x3fe0000000000000      
  0x00000214a64140ec:   0x3fe00000                              
  0x00000214a64140f0:   0x00000000      0x4034000000000000      
  0x00000214a64140f4:   0x40340000                              
  0x00000214a64140f8:   0x00000000      0x4008000000000000      
  0x00000214a64140fc:   0x40080000                              
  0x00000214a6414100:   0x54442d18      0x400921fb54442d18      
  0x00000214a6414104:   0x400921fb                              
  0x00000214a6414108:   0x33333333      0x3fd3333333333333      
  0x00000214a641410c:   0x3fd33333                              
  0x00000214a6414110:   0x00000000      0x4069000000000000      
  0x00000214a6414114:   0x40690000                              
  0x00000214a6414118:   0x00000000      0x4044000000000000      
  0x00000214a641411c:   0x40440000                              
  0x00000214a6414120:   0x00000000      0x4054000000000000      
  0x00000214a6414124:   0x40540000                              
  0x00000214a6414128:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x00000214a641412c:   0xf4f4f4f4                              
  0x00000214a6414130:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x00000214a6414134:   0xf4f4f4f4                              
  0x00000214a6414138:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x00000214a641413c:   0xf4f4f4f4                              

[MachCode]
[Instructions begin]
  0x00000214a6414140: ;   {no_reloc}
  0x00000214a6414140: 6690 448b | 5208 443b 

  0x00000214a6414148: ;   {runtime_call Shared Runtime ic_miss_blob}
  0x00000214a6414148: 5008 0f85 | 10a6 8fff 
[Verified Entry Point]
  0x00000214a6414150: e90b 358b | ffff ff55 | 4881 ecf0 | 0000 0090 | 4181 7f20 | 0100 0000 | 0f85 c003 | 0100 488b 
  0x00000214a6414170: ea4c 8b52 | 184d 85d2 | 0f84 f366 | 0000 4d8b | d84d 2bda | c5f9 efc0 | c4c1 fb2a 

  0x00000214a641418c: ;   {section_word}
  0x00000214a641418c: c3c5 fb5e | 0503 ffff | ffc5 fb58 | 4a20 4c89 | 4218 c5fb | 114a 2044 | 8b52 4044 | 8954 2438 
  0x00000214a64141ac: 4585 d20f | 84e5 7f00 | 00c5 fb11 | 4424 284b | 8d14 d448 | 8954 2430 

  0x00000214a64141c4: ;   {optimized virtual_call}
  0x00000214a64141c4: 6666 90e8 

  0x00000214a64141c8: ; ImmutableOopMap {rbp=Oop [48]=Oop [56]=NarrowOop }
                      ;*invokevirtual boundsInLocalProperty {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::getBoundsInLocal@1 (line 3498)
                      ; - Alastor$1::handle@49 (line 228)
  0x00000214a64141c8: 5460 aaf8 

  0x00000214a64141cc: ;   {post_call_nop}
  0x00000214a64141cc: 0f1f 8400 | c418 0000 | 488b d066 | 9048 b850 | e5d7 b414 

  0x00000214a64141e0: ;   {virtual_call}
  0x00000214a64141e0: 0200 00e8 

  0x00000214a64141e4: ; ImmutableOopMap {rbp=Oop [48]=Oop [56]=NarrowOop }
                      ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::getBoundsInLocal@4 (line 3498)
                      ; - Alastor$1::handle@49 (line 228)
  0x00000214a64141e4: eaa8 74f8 

  0x00000214a64141e8: ;   {post_call_nop}
  0x00000214a64141e8: 0f1f 8400 | e018 0001 

  0x00000214a64141f0: ; implicit exception: dispatches to 0x00000214a641ea10
  0x00000214a64141f0: 448b 5008 

  0x00000214a64141f4: ;   {metadata('javafx/geometry/BoundingBox')}
  0x00000214a64141f4: 4181 fa70 | a300 010f | 85ab 7f00 | 0048 896c | 2420 488b | e848 8b54 

  0x00000214a641420c: ;   {optimized virtual_call}
  0x00000214a641420c: 2430 90e8 

  0x00000214a6414210: ; ImmutableOopMap {rbp=Oop [32]=Oop [48]=Oop [56]=NarrowOop }
                      ;*invokevirtual updateLocalToParentTransform {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.scene.Node::localToScene@1 (line 4844)
                      ; - Alastor$1::handle@52 (line 228)
  0x00000214a6414210: 1c08 f6ff 

  0x00000214a6414214: ;   {post_call_nop}
  0x00000214a6414214: 0f1f 8400 | 0c19 0002 | 448b 5c24 | 3847 8b54 | dc70 498b | d248 c1e2 | 0348 b878 | e5d7 b414 
  0x00000214a6414234: ;   {virtual_call}
  0x00000214a6414234: 0200 00e8 

  0x00000214a6414238: ; ImmutableOopMap {rbp=Oop [32]=Oop [48]=Oop }
                      ;*invokevirtual is2D {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.scene.Node::localToScene@8 (line 4845)
                      ; - Alastor$1::handle@52 (line 228)
  0x00000214a6414238: d654 f4ff 

  0x00000214a641423c: ;   {post_call_nop}
  0x00000214a641423c: 0f1f 8400 | 3419 0003 | c5fb 1055 | 20c5 fb10 | 4d18 c5fb | 1045 1085 

  0x00000214a6414254: ;   {section_word}
  0x00000214a6414254: c074 10c5 | f92e 1521 | feff ff7a | 060f 8498 | 1400 0048 | 8b54 2430 

  0x00000214a641426c: ;   {optimized virtual_call}
  0x00000214a641426c: 6666 90e8 

  0x00000214a6414270: ; ImmutableOopMap {rbp=Oop [32]=Oop [48]=Oop }
                      ;*invokevirtual localToScene {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::localToScene@109 (line 4853)
                      ; - Alastor$1::handle@52 (line 228)
  0x00000214a6414270: eca7 8fff 

  0x00000214a6414274: ;   {post_call_nop}
  0x00000214a6414274: 0f1f 8400 | 6c19 0004 | 4889 4424 | 38c5 fb10 | 4510 c5fb | 104d 18c5 | fb10 5550 | 488b 5424 
  0x00000214a6414294: ;   {optimized virtual_call}
  0x00000214a6414294: 3066 90e8 

  0x00000214a6414298: ; ImmutableOopMap {rbp=Oop [32]=Oop [48]=Oop [56]=Oop }
                      ;*invokevirtual localToScene {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::localToScene@126 (line 4854)
                      ; - Alastor$1::handle@52 (line 228)
  0x00000214a6414298: c4a7 8fff 

  0x00000214a641429c: ;   {post_call_nop}
  0x00000214a641429c: 0f1f 8400 | 9419 0005 | 4889 4424 | 40c5 fb10 | 4510 c5fb | 104d 48c5 | fb10 5520 | 488b 5424 
  0x00000214a64142bc: ;   {optimized virtual_call}
  0x00000214a64142bc: 3066 90e8 

  0x00000214a64142c0: ; ImmutableOopMap {rbp=Oop [32]=Oop [48]=Oop [56]=Oop [64]=Oop }
                      ;*invokevirtual localToScene {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::localToScene@143 (line 4855)
                      ; - Alastor$1::handle@52 (line 228)
  0x00000214a64142c0: 9ca7 8fff 

  0x00000214a64142c4: ;   {post_call_nop}
  0x00000214a64142c4: 0f1f 8400 | bc19 0006 | 4889 4424 | 48c5 fb10 | 4510 c5fb | 104d 48c5 | fb10 5550 | 488b 5424 
  0x00000214a64142e4: ;   {optimized virtual_call}
  0x00000214a64142e4: 3066 90e8 

  0x00000214a64142e8: ; ImmutableOopMap {rbp=Oop [32]=Oop [48]=Oop [56]=Oop [64]=Oop [72]=Oop }
                      ;*invokevirtual localToScene {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::localToScene@161 (line 4856)
                      ; - Alastor$1::handle@52 (line 228)
  0x00000214a64142e8: 74a7 8fff 

  0x00000214a64142ec: ;   {post_call_nop}
  0x00000214a64142ec: 0f1f 8400 | e419 0007 | 4889 4424 | 50c5 fb10 | 4540 c5fb | 104d 48c5 | fb10 5520 | 488b 5424 
  0x00000214a641430c: ;   {optimized virtual_call}
  0x00000214a641430c: 3066 90e8 

  0x00000214a6414310: ; ImmutableOopMap {rbp=Oop [32]=Oop [48]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop }
                      ;*invokevirtual localToScene {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::localToScene@179 (line 4857)
                      ; - Alastor$1::handle@52 (line 228)
  0x00000214a6414310: 4ca7 8fff 

  0x00000214a6414314: ;   {post_call_nop}
  0x00000214a6414314: 0f1f 8400 | 0c1a 0008 | 4889 4424 | 58c5 fb10 | 4540 c5fb | 104d 48c5 | fb10 5550 | 488b 5424 
  0x00000214a6414334: ;   {optimized virtual_call}
  0x00000214a6414334: 3066 90e8 

  0x00000214a6414338: ; ImmutableOopMap {rbp=Oop [32]=Oop [48]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop }
                      ;*invokevirtual localToScene {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::localToScene@197 (line 4858)
                      ; - Alastor$1::handle@52 (line 228)
  0x00000214a6414338: 24a7 8fff 

  0x00000214a641433c: ;   {post_call_nop}
  0x00000214a641433c: 0f1f 8400 | 341a 0009 | 4889 4424 | 60c5 fb10 | 4540 c5fb | 104d 18c5 | fb10 5520 | 488b 5424 
  0x00000214a641435c: ;   {optimized virtual_call}
  0x00000214a641435c: 3066 90e8 

  0x00000214a6414360: ; ImmutableOopMap {rbp=Oop [32]=Oop [48]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop }
                      ;*invokevirtual localToScene {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::localToScene@215 (line 4859)
                      ; - Alastor$1::handle@52 (line 228)
  0x00000214a6414360: fca6 8fff 

  0x00000214a6414364: ;   {post_call_nop}
  0x00000214a6414364: 0f1f 8400 | 5c1a 000a | 4889 4424 | 68c5 fb10 | 4540 c5fb | 104d 18c5 | fb10 5550 | 488b 5424 
  0x00000214a6414384: ;   {optimized virtual_call}
  0x00000214a6414384: 3066 90e8 

  0x00000214a6414388: ; ImmutableOopMap {[32]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [104]=Oop }
                      ;*invokevirtual localToScene {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::localToScene@233 (line 4860)
                      ; - Alastor$1::handle@52 (line 228)
  0x00000214a6414388: d4a6 8fff 

  0x00000214a641438c: ;   {post_call_nop}
  0x00000214a641438c: 0f1f 8400 | 841a 000b | 488b 5424 | 384c 8b44 | 2440 4c8b | 4c24 4848 | 8b7c 2450 | 488b 7424 
  0x00000214a64143ac: 5848 8b4c | 2460 4c8b | 5424 684c | 8914 2448 | 8944 2408 

  0x00000214a64143c0: ;   {static_call}
  0x00000214a64143c0: 6666 90e8 

  0x00000214a64143c4: ; ImmutableOopMap {[32]=Oop }
                      ;*invokestatic createBoundingBox {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::localToScene@252 (line 4861)
                      ; - Alastor$1::handle@52 (line 228)
  0x00000214a64143c4: 98ac 8fff 

  0x00000214a64143c8: ;   {post_call_nop}
  0x00000214a64143c8: 0f1f 8400 | c01a 000c 

  0x00000214a64143d0: ; implicit exception: dispatches to 0x00000214a641ea30
  0x00000214a64143d0: c5fb 1048 | 104c 8b54 | 2420 c4c1 | 7b10 4220 

  0x00000214a64143e0: ;   {section_word}
  0x00000214a64143e0: c5f9 2e05 | a8fc ffff | 0f83 9064 | 0000 458b | 5260 478b | 44d4 08c5 | fb10 5848 | c5fb 1050 
  0x00000214a6414400: 40c5 fb10 

  0x00000214a6414404: ;   {metadata('java/util/HashSet')}
  0x00000214a6414404: 6018 4181 | f888 6e21 | 000f 85b1 | 7d00 0049 | c1e2 0345 | 8b52 0c47 | 8b5c d408 

  0x00000214a6414420: ;   {metadata('java/util/HashMap')}
  0x00000214a6414420: 4181 fb38 | 0a1e 000f | 85d7 7d00 | 0049 c1e2 | 0345 8b42 | 2445 85c0 | 0f84 cb01 | 0000 478b 
  0x00000214a6414440: 5cc4 0c45 | 85db 0f86 | c882 0000 | 4f8d 14c4 | 41ff cb41 | b85c a588 | 1441 81f0 | 8814 0000 
  0x00000214a6414460: 4523 d847 | 8b54 9a10 | 4585 d20f | 8498 0100 | 0047 8b4c | d40c 453b | c874 7647 | 8b4c d418 
  0x00000214a6414480: 4585 c90f | 8480 0100 | 0043 8b4c 

  0x00000214a641448c: ;   {metadata('java/util/HashMap$TreeNode')}
  0x00000214a641448c: d408 81f9 | 1037 2a00 | 0f85 5c21 | 0000 c5fb | 1164 2440 | c5fb 1154 | 2438 c5fb | 115c 2430 
  0x00000214a64144ac: c4e1 f97e | cd4b 8d14 

  0x00000214a64144b4: ;   {oop(a 'javafx/scene/input/KeyCode'{0x000000070d5088e8})}
  0x00000214a64144b4: d449 b9e8 | 8850 0d07 

  0x00000214a64144bc: ;   {optimized virtual_call}
  0x00000214a64144bc: 0000 00e8 

  0x00000214a64144c0: ; ImmutableOopMap {[32]=Oop }
                      ;*invokevirtual getTreeNode {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.HashMap::getNode@95 (line 583)
                      ; - java.util.HashMap::containsKey@2 (line 603)
                      ; - java.util.HashSet::contains@5 (line 214)
                      ; - Alastor$1::handle@221 (line 248)
  0x00000214a64144c0: 9ca5 8fff 

  0x00000214a64144c4: ;   {post_call_nop}
  0x00000214a64144c4: 0f1f 8400 | bc1b 000d | 4885 c00f | 8590 1500 | 00c4 e1f9 | 6ecd c5fb | 105c 2430 | c5fb 1054 
  0x00000214a64144e4: 2438 c5fb | 1064 2440 | e918 0100 | 0047 8b4c 

  0x00000214a64144f4: ;   {oop(a 'javafx/scene/input/KeyCode'{0x000000070d5088e8})}
  0x00000214a64144f4: d410 4181 | f91d 11aa | e10f 85d1 | 8200 004c | 8b54 2420 | 418b 4a64 

  0x00000214a641450c: ; implicit exception: dispatches to 0x00000214a641eb5c
  0x00000214a641450c: 458b 54cc | 644c 8b5c | 2420 c4c1 | 7b10 4328 | 498d 2ccc | 4585 d20f | 8412 6700 | 0047 8b44 
  0x00000214a641452c: d408 49bb | 0000 00b5 | 1402 0000 | 4d03 d84d 

  0x00000214a641453c: ;   {metadata('javafx/beans/property/DoublePropertyBase')}
  0x00000214a641453c: 8b5b 5849 | b800 006a | f614 0200 | 004d 3bd8 | 0f85 b280 | 0000 4f8d | 1cd4 458b | 4318 41c6 
  0x00000214a641455c: 430c 0145 | 85c0 0f85 | 4369 0000 | c4c1 7b10 | 6b10 c5d3 | 5ce8 498b | c248 c1e0 | 0344 8b58 
  0x00000214a641457c: ;   {metadata('javafx/scene/Node$11')}
  0x00000214a641457c: 0841 81fb | f014 0801 | 0f85 3380 | 0000 448b | 5818 4585 | db0f 8565 | 8400 00c5 | fb10 4010 
  0x00000214a641459c: c5f9 2ec5 | 7a02 7465 | c5fb 1168 | 1044 0fb6 | 580c 4585 | db74 56c5 | fb11 6424 | 48c5 fb11 
  0x00000214a64145bc: 5424 40c5 | fb11 5c24 | 38c5 fb11 | 4c24 3044 | 8860 0c48 | 8be8 488b 

  0x00000214a64145d4: ;   {optimized virtual_call}
  0x00000214a64145d4: d066 90e8 

  0x00000214a64145d8: ; ImmutableOopMap {rbp=Oop [32]=Oop }
                      ;*invokevirtual invalidated {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.beans.property.DoublePropertyBase::markInvalid@13 (line 113)
                      ; - javafx.beans.property.DoublePropertyBase::set@73 (line 148)
                      ; - javafx.scene.Node::setLayoutX@5 (line 2805)
                      ; - Alastor$1::handle@245 (line 248)
  0x00000214a64145d8: d43d fbff 

  0x00000214a64145dc: ;   {post_call_nop}
  0x00000214a64145dc: 0f1f 8400 | d41c 000e | 448b 5d20 | 4585 db0f | 859e 5d00 | 00c5 fb10 | 4c24 30c5 | fb10 5c24 
  0x00000214a64145fc: 38c5 fb10 | 5424 40c5 | fb10 6424 | 484c 8b54 | 2420 458b | 5260 478b 

  0x00000214a6414614: ;   {metadata('java/util/HashSet')}
  0x00000214a6414614: 44d4 0841 | 81f8 886e | 2100 0f85 | 207c 0000 | 49c1 e203 | 458b 520c 

  0x00000214a641462c: ; implicit exception: dispatches to 0x00000214a641ea80
  0x00000214a641462c: 478b 5cd4 

  0x00000214a6414630: ;   {metadata('java/util/HashMap')}
  0x00000214a6414630: 0841 81fb | 380a 1e00 | 0f85 467c | 0000 49c1 | e203 458b | 4224 4585 | c00f 84ce | 0100 0047 
  0x00000214a6414650: 8b5c c40c | 4585 db0f | 86f7 8000 | 004f 8d14 | c441 ffcb | 41b8 0edd | bf72 4181 | f0bf 7200 
  0x00000214a6414670: 0045 23d8 | 478b 5c9a | 1045 85db | 0f84 9b01 | 0000 478b | 4cdc 0c45 | 3bc8 7479 | 478b 4cdc 
  0x00000214a6414690: 1845 85c9 | 0f84 8301 | 0000 438b 

  0x00000214a641469c: ;   {metadata('java/util/HashMap$TreeNode')}
  0x00000214a641469c: 4cdc 0881 | f910 372a | 000f 85b5 | 1f00 00c5 | fb11 6424 | 40c5 fb11 | 5424 38c5 | fb11 5c24 
  0x00000214a64146bc: 30c4 e1f9 | 7ecd 4b8d 

  0x00000214a64146c4: ;   {oop(a 'javafx/scene/input/KeyCode'{0x000000070d5087e0})}
  0x00000214a64146c4: 14dc 49b9 | e087 500d | 0700 0000 

  0x00000214a64146d0: ;   {optimized virtual_call}
  0x00000214a64146d0: 6666 90e8 

  0x00000214a64146d4: ; ImmutableOopMap {[32]=Oop }
                      ;*invokevirtual getTreeNode {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.HashMap::getNode@95 (line 583)
                      ; - java.util.HashMap::containsKey@2 (line 603)
                      ; - java.util.HashSet::contains@5 (line 214)
                      ; - Alastor$1::handle@255 (line 249)
  0x00000214a64146d4: 88a3 8fff 

  0x00000214a64146d8: ;   {post_call_nop}
  0x00000214a64146d8: 0f1f 8400 | d01d 000f | 4885 c00f | 853b 2000 | 00c4 e1f9 | 6ecd c5fb | 105c 2430 | c5fb 1054 
  0x00000214a64146f8: 2438 c5fb | 1064 2440 | e918 0100 | 0047 8b4c 

  0x00000214a6414708: ;   {oop(a 'javafx/scene/input/KeyCode'{0x000000070d5087e0})}
  0x00000214a6414708: dc10 4181 | f9fc 10aa | e10f 8505 | 8100 004c | 8b54 2420 | 418b 4a64 

  0x00000214a6414720: ; implicit exception: dispatches to 0x00000214a641eb84
  0x00000214a6414720: 458b 54cc | 644c 8b5c | 2420 c4c1 | 7b10 4328 | 498d 2ccc | 4585 d20f | 84a1 6500 | 0047 8b44 
  0x00000214a6414740: d408 49bb | 0000 00b5 | 1402 0000 | 4d03 d84d 

  0x00000214a6414750: ;   {metadata('javafx/beans/property/DoublePropertyBase')}
  0x00000214a6414750: 8b5b 5849 | b800 006a | f614 0200 | 004d 3bd8 | 0f85 6a7f | 0000 4f8d | 1cd4 458b | 4318 41c6 
  0x00000214a6414770: 430c 0145 | 85c0 0f85 | a667 0000 | c4c1 7b10 | 6b10 c5d3 | 58e8 498b | c248 c1e0 | 0344 8b58 
  0x00000214a6414790: ;   {metadata('javafx/scene/Node$11')}
  0x00000214a6414790: 0841 81fb | f014 0801 | 0f85 ea7e | 0000 448b | 5818 4585 | db0f 859d | 8200 00c5 | fb10 4010 
  0x00000214a64147b0: c5f9 2ec5 | 7a02 7465 | c5fb 1168 | 1044 0fb6 | 580c 4585 | db74 56c5 | fb11 6424 | 48c5 fb11 
  0x00000214a64147d0: 5424 40c5 | fb11 5c24 | 38c5 fb11 | 4c24 3044 | 8860 0c48 | 8be8 488b 

  0x00000214a64147e8: ;   {optimized virtual_call}
  0x00000214a64147e8: d066 90e8 

  0x00000214a64147ec: ; ImmutableOopMap {rbp=Oop [32]=Oop }
                      ;*invokevirtual invalidated {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.beans.property.DoublePropertyBase::markInvalid@13 (line 113)
                      ; - javafx.beans.property.DoublePropertyBase::set@73 (line 148)
                      ; - javafx.scene.Node::setLayoutX@5 (line 2805)
                      ; - Alastor$1::handle@279 (line 249)
  0x00000214a64147ec: c0d0 0100 

  0x00000214a64147f0: ;   {post_call_nop}
  0x00000214a64147f0: 0f1f 8400 | e81e 0010 | 448b 5d20 | 4585 db0f | 85ac 5b00 | 00c5 fb10 | 4c24 30c5 | fb10 5c24 
  0x00000214a6414810: 38c5 fb10 | 5424 40c5 | fb10 6424 | 484c 8b54 | 2420 458b | 5260 478b 

  0x00000214a6414828: ;   {metadata('java/util/HashSet')}
  0x00000214a6414828: 44d4 0841 | 81f8 886e | 2100 0f85 | 8c7a 0000 | 49c1 e203 | 458b 520c 

  0x00000214a6414840: ; implicit exception: dispatches to 0x00000214a641eaa8
  0x00000214a6414840: 478b 5cd4 

  0x00000214a6414844: ;   {metadata('java/util/HashMap')}
  0x00000214a6414844: 0841 81fb | 380a 1e00 | 0f85 b27a | 0000 4c8b | 5c24 2041 | 8b4b 6c49 | c1e2 0345 | 8b42 2445 
  0x00000214a6414864: 85c0 0f84 | b900 0000 | 478b 5cc4 | 0c45 85db | 0f86 1a7f | 0000 4f8d | 14c4 41ff | cb41 b820 
  0x00000214a6414884: 1c61 7341 | 81f0 6173 | 0000 4523 | d847 8b54 | 9a10 4585 | d20f 8486 | 0000 0047 | 8b4c d40c 
  0x00000214a64148a4: 453b c80f | 848f 0000 | 0047 8b4c | d418 4585 | c974 6e43 | 8b5c d408 

  0x00000214a64148bc: ;   {metadata('java/util/HashMap$TreeNode')}
  0x00000214a64148bc: 81fb 1037 | 2a00 0f85 | ec1d 0000 | c5fb 1164 | 2440 c5fb | 1154 2438 | c5fb 115c | 2430 c4e1 
  0x00000214a64148dc: f97e cd4b 

  0x00000214a64148e0: ;   {oop(a 'javafx/scene/input/KeyCode'{0x000000070d506338})}
  0x00000214a64148e0: 8d14 d449 | b938 6350 | 0d07 0000 

  0x00000214a64148ec: ;   {optimized virtual_call}
  0x00000214a64148ec: 0066 90e8 

  0x00000214a64148f0: ; ImmutableOopMap {[32]=Oop }
                      ;*invokevirtual getTreeNode {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.HashMap::getNode@95 (line 583)
                      ; - java.util.HashMap::containsKey@2 (line 603)
                      ; - java.util.HashSet::contains@5 (line 214)
                      ; - Alastor$1::handle@289 (line 250)
  0x00000214a64148f0: 6ca1 8fff 

  0x00000214a64148f4: ;   {post_call_nop}
  0x00000214a64148f4: 0f1f 8400 | ec1f 0011 | 4c8b 5424 | 2041 8b4a | 6c48 85c0 | 0f85 fa1d | 0000 c4e1 | f96e cdc5 
  0x00000214a6414914: fb10 5c24 | 30c5 fb10 | 5424 38c5 | fb10 6424 | 4085 c975 | 4fba f6ff 

  0x00000214a641492c: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641492c: ffff 90e8 

  0x00000214a6414930: ; ImmutableOopMap {}
                      ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@329 (line 255)
  0x00000214a6414930: 2cf7 9bff 

  0x00000214a6414934: ;   {post_call_nop}
  0x00000214a6414934: 0f1f 8400 | 2c20 0012 | 478b 4cd4 

  0x00000214a6414940: ;   {oop(a 'javafx/scene/input/KeyCode'{0x000000070d506338})}
  0x00000214a6414940: 1041 81f9 | 670c aae1 | 0f85 167f | 0000 4c8b | 5424 2045 | 8b5a 6847 | 8b44 dc0c | 4585 c00f 
  0x00000214a6414960: 86e3 7c00 | 0047 0fb6 | 44dc 1045 | 85c0 0f85 | 4d0e 0000 | 85c9 74b1 | 458b 5ccc | 0c45 85db 
  0x00000214a6414980: 0f86 be79 | 0000 c4c1 | 7b10 44cc | 104c 8b54 | 2420 c4c1 | 7b10 6a38 | 458b 4a64 | c5fb 58c5 
  0x00000214a64149a0: c4c1 7b11 | 44cc 1047 | 8b54 cc68 | 4b8d 2ccc | 4585 d20f | 84c3 5a00 | 0047 8b44 | d408 49bb 
  0x00000214a64149c0: 0000 00b5 | 1402 0000 | 4d03 d84d 

  0x00000214a64149cc: ;   {metadata('javafx/beans/property/DoublePropertyBase')}
  0x00000214a64149cc: 8b5b 5849 | b800 006a | f614 0200 | 004d 3bd8 | 0f85 5a7b | 0000 4f8d | 1cd4 458b | 5318 41c6 
  0x00000214a64149ec: 430c 0145 | 85d2 0f85 | d461 0000 | c4c1 7b10 | 4310 458b | 54cc 0c45 | 85d2 0f86 | 7879 0000 
  0x00000214a6414a0c: c4c1 7b58 | 6ccc 1047 | 8b54 cc68 | 4585 d20f | 844f 2600 | 0049 8bc2 | 48c1 e003 | 448b 5008 
  0x00000214a6414a2c: ;   {metadata('javafx/scene/Node$12')}
  0x00000214a6414a2c: 4181 fa98 | 0a08 010f | 8597 7900 | 0044 8b50 | 1845 85d2 | 0f85 667e | 0000 c5fb | 1040 10c5 
  0x00000214a6414a4c: f92e c57a | 0274 66c5 | fb11 6810 | 440f b650 | 0c45 85d2 | 7457 c5fb | 1164 2448 | c5fb 1154 
  0x00000214a6414a6c: 2440 c5fb | 115c 2438 | c5fb 114c | 2430 4488 | 600c 488b | e848 8bd0 

  0x00000214a6414a84: ;   {optimized virtual_call}
  0x00000214a6414a84: 6666 90e8 

  0x00000214a6414a88: ; ImmutableOopMap {rbp=Oop [32]=Oop }
                      ;*invokevirtual invalidated {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.beans.property.DoublePropertyBase::markInvalid@13 (line 113)
                      ; - javafx.beans.property.DoublePropertyBase::set@73 (line 148)
                      ; - javafx.scene.Node::setLayoutY@5 (line 2879)
                      ; - Alastor$1::handle@354 (line 256)
  0x00000214a6414a88: a4b5 0100 

  0x00000214a6414a8c: ;   {post_call_nop}
  0x00000214a6414a8c: 0f1f 8400 | 8421 0013 | 448b 5520 | 4585 d20f | 8551 2700 | 00c5 fb10 | 4c24 30c5 | fb10 5c24 
  0x00000214a6414aac: 38c5 fb10 | 5424 40c5 | fb10 6424 | 484c 8b54 | 2420 458b | 5264 4489 | 5424 5047 | 8b9c d490 
  0x00000214a6414acc: 0000 0045 | 85db 0f84 | 495a 0000 | 4d8b cb49 | c1e1 0345 | 8b51 0c45 | 85d2 0f84 | 9959 0000 
  0x00000214a6414aec: 4d8b c249 | c1e0 0345 | 0fb6 5810 | 4585 db0f | 85b5 0000 | 0045 8b58 

  0x00000214a6414b04: ;   {metadata('javafx/scene/Node$MiscProperties$2')}
  0x00000214a6414b04: 0841 81fb | f83a 1e01 | 0f85 9680 | 0000 c5fb | 1164 2448 | c5fb 1154 | 2440 c5fb | 115c 2438 
  0x00000214a6414b24: c5fb 114c | 2430 4c89 | 4424 5049 | 8be8 498b 

  0x00000214a6414b34: ;   {optimized virtual_call}
  0x00000214a6414b34: d066 90e8 

  0x00000214a6414b38: ; ImmutableOopMap {rbp=Oop [32]=Oop [80]=Oop }
                      ;*invokevirtual computeBounds {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node$LazyBoundsProperty::get@9 (line 10191)
                      ; - javafx.scene.Node$LazyBoundsProperty::get@1 (line 10182)
                      ; - javafx.scene.Node::getBoundsInParent@4 (line 3457)
                      ; - Alastor$1::handle@361 (line 258)
  0x00000214a6414b38: d418 faff 

  0x00000214a6414b3c: ;   {post_call_nop}
  0x00000214a6414b3c: 0f1f 8400 | 3422 0014 | c645 1001 | 4c8d 5d14 | 4180 7f48 | 000f 85c1 | ad00 004c | 8bc0 49c1 
  0x00000214a6414b5c: e803 4589 | 034d 8bd3 | 4c33 d049 | c1ea 150f | 8428 0000 | 0048 83f8 | 000f 841e | 0000 004d 
  0x00000214a6414b7c: 8bd3 49c1 | ea09 49b8 | 00c0 6caa | 1402 0000 | 4d03 d041 | 803a 020f | 85e7 ad00 | 00c5 fb10 
  0x00000214a6414b9c: 4c24 30c5 | fb10 5c24 | 38c5 fb10 | 5424 40c5 | fb10 6424 | 484c 8b44 | 2450 458b | 5814 c481 
  0x00000214a6414bbc: 7b10 44dc | 10c5 f92e | c80f 872d | 7d00 00c4 | 817b 106c | dc40 c5f9 | 2eea 0f87 | 6c7d 0000 
  0x00000214a6414bdc: c481 7b10 | 44dc 18c5 | f92e e00f | 87a7 7d00 | 00c4 817b | 1044 dc48 | c5f9 2ec3 | 0f86 3401 
  0x00000214a6414bfc: 0000 4c8b | 5424 2045 | 8b4a 6447 | 8b54 cc68 | c5e3 5cc0 | 4b8d 2ccc | 4585 d20f | 84ea 6100 
  0x00000214a6414c1c: 0047 8b5c | d408 49b8 | 0000 00b5 | 1402 0000 | 4d03 c34d 

  0x00000214a6414c30: ;   {metadata('javafx/beans/property/DoublePropertyBase')}
  0x00000214a6414c30: 8b58 5849 | b800 006a | f614 0200 | 004d 3bd8 | 0f85 167f | 0000 4f8d | 04d4 458b | 5818 41c6 
  0x00000214a6414c50: 400c 0145 | 85db 0f85 | 7163 0000 | c4c1 7b58 | 6810 498b | c248 c1e0 | 0344 8b50 

  0x00000214a6414c6c: ;   {metadata('javafx/scene/Node$12')}
  0x00000214a6414c6c: 0841 81fa | 980a 0801 | 0f85 1a7e | 0000 488b | e844 8b55 | 1845 85d2 | 0f85 5e83 | 0000 c5fb 
  0x00000214a6414c8c: 1045 10c5 | f92e c57a | 0274 62c5 | fb11 6d10 | 440f b655 | 0c45 85d2 | 7453 c5fb | 1164 2448 
  0x00000214a6414cac: c5fb 1154 | 2440 c5fb | 115c 2438 | c5fb 114c | 2430 4488 | 650c 488b 

  0x00000214a6414cc4: ;   {optimized virtual_call}
  0x00000214a6414cc4: d566 90e8 

  0x00000214a6414cc8: ; ImmutableOopMap {rbp=Oop [32]=Oop }
                      ;*invokevirtual invalidated {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.beans.property.DoublePropertyBase::markInvalid@13 (line 113)
                      ; - javafx.beans.property.DoublePropertyBase::set@73 (line 148)
                      ; - javafx.scene.Node::setLayoutY@5 (line 2879)
                      ; - Alastor$1::handle@519 (line 268)
  0x00000214a6414cc8: 64b3 0100 

  0x00000214a6414ccc: ;   {post_call_nop}
  0x00000214a6414ccc: 0f1f 8400 | c423 0015 | 448b 5520 | 4585 d20f | 85f6 5800 | 00c5 fb10 | 4c24 30c5 | fb10 5c24 
  0x00000214a6414cec: 38c5 fb10 | 5424 40c5 | fb10 6424 | 484c 8b54 | 2420 458b | 526c 478b | 44d4 0c45 | 85c0 0f86 
  0x00000214a6414d0c: cc7d 0000 | 4f89 64d4 | 104c 8b54 | 2420 458b | 5268 478b | 44d4 0c45 | 85c0 0f86 | f07d 0000 
  0x00000214a6414d2c: 43c6 44d4 | 1001 4c8b | 5424 2045 | 8b42 7047 | 8b5c c40c | 4585 db0f | 86cf 7600 | 0043 ff44 
  0x00000214a6414d4c: c410 458b | 5274 478b | 5cd4 0c45 | 85db 0f86 | f876 0000 | 43ff 44d4 | 1047 8b5c | c410 458b 
  0x00000214a6414d6c: d341 c1fa | 1f4d 63c3 | 4d69 c089 | 8888 8849 | c1f8 2045 | 8bc0 4503 | c341 c1f8 | 0445 2bc2 
  0x00000214a6414d8c: 456b d01e | 453b da0f | 84f9 0c00 | 004c 8b54 | 2420 458b | 5274 478b | 44d4 0c45 | 85c0 0f86 
  0x00000214a6414dac: e876 0000 | 478b 5cd4 | 104d 63d3 | 458b c341 | c1f8 1f4d | 69d2 b581 | 4e1b 49c1 

  0x00000214a6414dc8: ;   {no_reloc}
  0x00000214a6414dc8: fa26 458b | d245 2bd0 | 4569 d258 | 0200 0045 | 3bda 0f84 | 1958 0000 | 498b 87c8 | 0100 004c 
  0x00000214a6414de8: 8bd0 4983 | c218 4d3b | 97d8 0100 | 000f 839b | 6100 004d | 8997 c801 | 0000 410f | 1882 c000 
  0x00000214a6414e08: 0000 48c7 | 0001 0000 

  0x00000214a6414e10: ;   {metadata('java/util/ArrayList')}
  0x00000214a6414e10: 00c7 4008 | 38e9 1f00 | 4489 600c | 4c89 6010 | c5fb 114c | 2430 c5fb | 115c 2448 | c5fb 1154 
  0x00000214a6414e30: 2438 c5fb | 1164 2440 | 4889 4424 | 5048 8bd0 

  0x00000214a6414e40: ;   {optimized virtual_call}
  0x00000214a6414e40: 6666 90e8 

  0x00000214a6414e44: ; ImmutableOopMap {[32]=Oop [80]=Oop }
                      ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2052 (line 381)
  0x00000214a6414e44: 4856 eeff 

  0x00000214a6414e48: ;   {post_call_nop}
  0x00000214a6414e48: 0f1f 8400 | 4025 0016 | 4c8b 5c24 | 2045 8b53 | 4447 8b44 

  0x00000214a6414e5c: ;   {metadata('java/util/ArrayList')}
  0x00000214a6414e5c: d408 4181 | f838 e91f | 000f 856d | 7600 004b 

  0x00000214a6414e6c: ;   {optimized virtual_call}
  0x00000214a6414e6c: 8d14 d4e8 

  0x00000214a6414e70: ; ImmutableOopMap {[32]=Oop [80]=Oop }
                      ;*invokeinterface size {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2066 (line 382)
  0x00000214a6414e70: 2c4f e6ff 

  0x00000214a6414e74: ;   {post_call_nop}
  0x00000214a6414e74: 0f1f 8400 | 6c25 0017 | 85c0 0f8e | c407 0000 | c5fb 1044 

  0x00000214a6414e88: ;   {section_word}
  0x00000214a6414e88: 2438 c5fb | 580d 0ef2 | ffff 4533 | dbe9 3901 | 0000 660f | 1f44 0000 | 488b 5424 

  0x00000214a6414ea4: ;   {optimized virtual_call}
  0x00000214a6414ea4: 6866 90e8 

  0x00000214a6414ea8: ; ImmutableOopMap {[80]=Oop [96]=Oop [112]=Oop }
                      ;*invokevirtual getMaxY {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2449 (line 407)
  0x00000214a6414ea8: 748f f4ff 

  0x00000214a6414eac: ;   {post_call_nop}
  0x00000214a6414eac: 0f1f 8400 | a425 0018 | c5fb 1144 | 2420 488b 

  0x00000214a6414ebc: ;   {optimized virtual_call}
  0x00000214a6414ebc: 5424 60e8 

  0x00000214a6414ec0: ; ImmutableOopMap {[80]=Oop [96]=Oop [112]=Oop }
                      ;*invokevirtual getLayoutY {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2454 (line 407)
  0x00000214a6414ec0: 4c99 f8ff 

  0x00000214a6414ec4: ;   {post_call_nop}
  0x00000214a6414ec4: 0f1f 8400 | bc25 0019 | c5fb 104c | 2420 c5f3 | 5cc0 c5fb | 104c 2448 | c5f3 5cc0 | c4e1 f96e 
  0x00000214a6414ee4: d5c5 fb11 | 5424 40c5 | fb11 4c24 | 4848 8b54 

  0x00000214a6414ef4: ;   {optimized virtual_call}
  0x00000214a6414ef4: 2460 90e8 

  0x00000214a6414ef8: ; ImmutableOopMap {[80]=Oop [96]=Oop [112]=Oop }
                      ;*invokevirtual setLayoutY {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2465 (line 409)
  0x00000214a6414ef8: d422 0100 

  0x00000214a6414efc: ;   {post_call_nop}
  0x00000214a6414efc: 0f1f 8400 | f425 001a | 488b 5424 

  0x00000214a6414f08: ;   {optimized virtual_call}
  0x00000214a6414f08: 6066 90e8 

  0x00000214a6414f0c: ; ImmutableOopMap {[80]=Oop [96]=Oop [112]=Oop }
                      ;*invokevirtual getLayoutX {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2470 (line 412)
  0x00000214a6414f0c: 00f2 f7ff 

  0x00000214a6414f10: ;   {post_call_nop}
  0x00000214a6414f10: 0f1f 8400 | 0826 001b | c5f9 2e44 | 2458 0f87 | c865 0000 | 488b 5424 

  0x00000214a6414f28: ;   {optimized virtual_call}
  0x00000214a6414f28: 6066 90e8 

  0x00000214a6414f2c: ; ImmutableOopMap {[80]=Oop [112]=Oop }
                      ;*invokevirtual getBoundsInParent {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@2498 (line 417)
  0x00000214a6414f2c: 200a 0100 

  0x00000214a6414f30: ;   {post_call_nop}
  0x00000214a6414f30: 0f1f 8400 | 2826 001c | 488b e84c | 8b54 2470 | 458b 5a64 | 4585 db0f | 840b 6100 | 004c 8954 
  0x00000214a6414f50: 2420 4b8d 

  0x00000214a6414f54: ;   {optimized virtual_call}
  0x00000214a6414f54: 14dc 90e8 

  0x00000214a6414f58: ; ImmutableOopMap {rbp=Oop [32]=Oop [80]=Oop }
                      ;*invokevirtual getBoundsInParent {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@2505 (line 417)
  0x00000214a6414f58: f409 0100 

  0x00000214a6414f5c: ;   {post_call_nop}
  0x00000214a6414f5c: 0f1f 8400 | 5426 001d | 4c8b c048 | 8bd5 4885 | d20f 84f9 

  0x00000214a6414f70: ;   {optimized virtual_call}
  0x00000214a6414f70: 6000 00e8 

  0x00000214a6414f74: ; ImmutableOopMap {[32]=Oop [80]=Oop }
                      ;*invokevirtual intersects {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2508 (line 417)
  0x00000214a6414f74: 5887 fbff 

  0x00000214a6414f78: ;   {post_call_nop}
  0x00000214a6414f78: 0f1f 8400 | 7026 001e | 85c0 0f85 | 5e08 0000 | 4c8b 4424 | 2045 8b58 | 4447 8b54 | dc08 8b6c 
  0x00000214a6414f98: 2478 ffc5 

  0x00000214a6414f9c: ;   {metadata('java/util/ArrayList')}
  0x00000214a6414f9c: 4181 fa38 | e91f 000f | 85a3 6200 | 004b 8d14 

  0x00000214a6414fac: ;   {optimized virtual_call}
  0x00000214a6414fac: dc66 90e8 

  0x00000214a6414fb0: ; ImmutableOopMap {[32]=Oop [80]=Oop }
                      ;*invokeinterface size {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2066 (line 382)
  0x00000214a6414fb0: ec4d e6ff 

  0x00000214a6414fb4: ;   {post_call_nop}
  0x00000214a6414fb4: 0f1f 8400 | ac26 001f | 3be8 0f8d | 8406 0000 | c5fb 1044 | 2438 c5fb | 104c 2458 | 448b dd48 
  0x00000214a6414fd4: 8b6c 2420 | 448b 5544 

  0x00000214a6414fdc: ; implicit exception: dispatches to 0x00000214a641e52c
  0x00000214a6414fdc: 478b 44d4 

  0x00000214a6414fe0: ;   {metadata('java/util/ArrayList')}
  0x00000214a6414fe0: 0841 81f8 | 38e9 1f00 | 0f85 9660 | 0000 4489 | 5c24 78c5 | fb11 4c24 | 58c5 fb11 | 4424 384b 
  0x00000214a6415000: 8d14 d445 

  0x00000214a6415004: ;   {optimized virtual_call}
  0x00000214a6415004: 8bc3 90e8 

  0x00000214a6415008: ; ImmutableOopMap {rbp=Oop [32]=Oop [80]=Oop }
                      ;*invokeinterface get {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@2080 (line 383)
  0x00000214a6415008: a4d4 eaff 

  0x00000214a641500c: ;   {post_call_nop}
  0x00000214a641500c: 0f1f 8400 | 0427 0020 

  0x00000214a6415014: ; implicit exception: dispatches to 0x00000214a641e544
  0x00000214a6415014: 448b 5808 

  0x00000214a6415018: ;   {metadata('javafx/scene/Group')}
  0x00000214a6415018: 4181 fb38 | d81c 010f | 858b 9000 | 0044 8b55 | 5c47 8b5c 

  0x00000214a641502c: ;   {metadata('java/util/ArrayList')}
  0x00000214a641502c: d408 4181 | fb38 e91f | 000f 85a5 | 6000 0048 | 8944 2460 | 49c1 e203 | 4c89 5424 | 6849 8bd2 
  0x00000214a641504c: 448b 4424 | 7841 8be8 

  0x00000214a6415054: ;   {optimized virtual_call}
  0x00000214a6415054: 6666 90e8 

  0x00000214a6415058: ; ImmutableOopMap {[32]=Oop [80]=Oop [96]=Oop [104]=Oop }
                      ;*invokeinterface get {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@2102 (line 384)
  0x00000214a6415058: 54d4 eaff 

  0x00000214a641505c: ;   {post_call_nop}
  0x00000214a641505c: 0f1f 8400 | 5427 0021 

  0x00000214a6415064: ; implicit exception: dispatches to 0x00000214a641e5b4
  0x00000214a6415064: 448b 5808 

  0x00000214a6415068: ;   {metadata('java/lang/Double')}
  0x00000214a6415068: 4181 fb38 | 0519 000f | 859b 9000 | 0048 8bd0 

  0x00000214a6415078: ;   {optimized virtual_call}
  0x00000214a6415078: 6666 90e8 

  0x00000214a641507c: ; ImmutableOopMap {[32]=Oop [80]=Oop [96]=Oop [104]=Oop }
                      ;*invokevirtual doubleValue {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2110 (line 384)
  0x00000214a641507c: a094 f4ff 

  0x00000214a6415080: ;   {post_call_nop}
  0x00000214a6415080: 0f1f 8400 | 7827 0022 | c5fb 5844 

  0x00000214a641508c: ;   {static_call}
  0x00000214a641508c: 2428 90e8 

  0x00000214a6415090: ; ImmutableOopMap {[32]=Oop [80]=Oop [96]=Oop [104]=Oop }
                      ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@2115 (line 384)
  0x00000214a6415090: ec1d 0100 

  0x00000214a6415094: ;   {post_call_nop}
  0x00000214a6415094: 0f1f 8400 | 8c27 0023 | 488b 5424 | 6844 8bc5 

  0x00000214a64150a4: ;   {optimized virtual_call}
  0x00000214a64150a4: 4c8b c8e8 

  0x00000214a64150a8: ; ImmutableOopMap {[32]=Oop [80]=Oop [96]=Oop }
                      ;*invokeinterface set {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@2118 (line 384)
  0x00000214a64150a8: 04fc f9ff 

  0x00000214a64150ac: ;   {post_call_nop}
  0x00000214a64150ac: 0f1f 8400 | a427 0024 | 488b 5424 

  0x00000214a64150b8: ;   {optimized virtual_call}
  0x00000214a64150b8: 6066 90e8 

  0x00000214a64150bc: ; ImmutableOopMap {[32]=Oop [80]=Oop [96]=Oop }
                      ;*invokevirtual getBoundsInParent {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@2126 (line 386)
  0x00000214a64150bc: 9008 0100 

  0x00000214a64150c0: ;   {post_call_nop}
  0x00000214a64150c0: 0f1f 8400 | b827 0025 | 4889 4424 | 6848 8b54 

  0x00000214a64150d0: ;   {optimized virtual_call}
  0x00000214a64150d0: 2460 90e8 

  0x00000214a64150d4: ; ImmutableOopMap {[32]=Oop [80]=Oop [96]=Oop [104]=Oop }
                      ;*invokevirtual getLayoutX {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2133 (line 389)
  0x00000214a64150d4: 38f0 f7ff 

  0x00000214a64150d8: ;   {post_call_nop}
  0x00000214a64150d8: 0f1f 8400 | d027 0026 | 4c8b 5424 | 2045 8b9a | 8000 0000 

  0x00000214a64150ec: ; implicit exception: dispatches to 0x00000214a641e628
  0x00000214a64150ec: 478b 44dc | 0c45 85c0 | 0f86 5a60 | 0000 4c8b | 4424 684d | 85c0 0f84 | 3e5f 0000 | c481 7b58 
  0x00000214a641510c: 44dc 10c5 | fb11 4424 | 7049 8bd0 | c4e1 f97e 

  0x00000214a641511c: ;   {optimized virtual_call}
  0x00000214a641511c: c566 90e8 

  0x00000214a6415120: ; ImmutableOopMap {[32]=Oop [80]=Oop [96]=Oop [104]=Oop }
                      ;*invokevirtual getMinX {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2149 (line 390)
  0x00000214a6415120: fc0b f2ff 

  0x00000214a6415124: ;   {post_call_nop}
  0x00000214a6415124: 0f1f 8400 | 1c28 0027 | c4e1 f97e | c548 8b54 

  0x00000214a6415134: ;   {optimized virtual_call}
  0x00000214a6415134: 2460 90e8 

  0x00000214a6415138: ; ImmutableOopMap {[32]=Oop [80]=Oop [96]=Oop [104]=Oop }
                      ;*invokevirtual getLayoutX {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2154 (line 390)
  0x00000214a6415138: d4ef f7ff 

  0x00000214a641513c: ;   {post_call_nop}
  0x00000214a641513c: 0f1f 8400 | 3428 0028 | c4e1 f96e | cdc5 f35c | c0c5 fb58 | 4424 70c5 | fb10 4c24 | 30c5 f92e 
  0x00000214a641515c: c80f 874c | 0500 0048 | 8b6c 2430 | 488b 5424 | 68c5 fb10 | 4424 70c5 | fb11 4424 

  0x00000214a6415178: ;   {optimized virtual_call}
  0x00000214a6415178: 3066 90e8 

  0x00000214a641517c: ; ImmutableOopMap {[32]=Oop [80]=Oop [96]=Oop [104]=Oop }
                      ;*invokevirtual getMaxX {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2188 (line 392)
  0x00000214a641517c: a096 f4ff 

  0x00000214a6415180: ;   {post_call_nop}
  0x00000214a6415180: 0f1f 8400 | 7828 0029 | c5fb 1144 | 2430 488b 

  0x00000214a6415190: ;   {optimized virtual_call}
  0x00000214a6415190: 5424 60e8 

  0x00000214a6415194: ; ImmutableOopMap {[32]=Oop [80]=Oop [96]=Oop [104]=Oop }
                      ;*invokevirtual getLayoutX {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2193 (line 392)
  0x00000214a6415194: 78ef f7ff 

  0x00000214a6415198: ;   {post_call_nop}
  0x00000214a6415198: 0f1f 8400 | 9028 002a | c5fb 104c | 2430 c5f3 | 5cc0 c5fb | 5844 2470 | c5f9 2e44 | 2438 7713 
  0x00000214a64151b8: c5fb 1044 | 2470 c4e1 | f96e d5c5 | fb10 4c24 | 38eb 5248 | 8b54 2468 | c5fb 1044 | 2438 c5fb 
  0x00000214a64151d8: 1144 2430 

  0x00000214a64151dc: ;   {optimized virtual_call}
  0x00000214a64151dc: 6666 90e8 

  0x00000214a64151e0: ; ImmutableOopMap {[32]=Oop [80]=Oop [96]=Oop [104]=Oop }
                      ;*invokevirtual getMaxX {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2208 (line 393)
  0x00000214a64151e0: 3c96 f4ff 

  0x00000214a64151e4: ;   {post_call_nop}
  0x00000214a64151e4: 0f1f 8400 | dc28 002b | c5fb 1144 | 2430 488b 

  0x00000214a64151f4: ;   {optimized virtual_call}
  0x00000214a64151f4: 5424 60e8 

  0x00000214a64151f8: ; ImmutableOopMap {[32]=Oop [80]=Oop [96]=Oop [104]=Oop }
                      ;*invokevirtual getLayoutX {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2213 (line 393)
  0x00000214a64151f8: 14ef f7ff 

  0x00000214a64151fc: ;   {post_call_nop}
  0x00000214a64151fc: 0f1f 8400 | f428 002c | c5fb 104c | 2430 c5f3 | 5cc0 c5fb | 104c 2438 | c5f3 5cc0 | c4e1 f96e 
  0x00000214a641521c: d5c5 fb11 | 4c24 38c5 | fb11 5424 | 3048 8b54 

  0x00000214a641522c: ;   {optimized virtual_call}
  0x00000214a641522c: 2460 90e8 

  0x00000214a6415230: ; ImmutableOopMap {[32]=Oop [80]=Oop [96]=Oop [104]=Oop }
                      ;*invokevirtual setLayoutX {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2224 (line 395)
  0x00000214a6415230: 9c17 0100 

  0x00000214a6415234: ;   {post_call_nop}
  0x00000214a6415234: 0f1f 8400 | 2c29 002d | 488b 6c24 | 2044 8b55 | 5047 8b5c 

  0x00000214a6415248: ;   {metadata('java/util/ArrayList')}
  0x00000214a6415248: d408 4181 | fb38 e91f | 000f 8579 | 5f00 004b | 8d14 d444 | 8b44 2478 

  0x00000214a6415260: ;   {optimized virtual_call}
  0x00000214a6415260: 6666 90e8 

  0x00000214a6415264: ; ImmutableOopMap {rbp=Oop [32]=Oop [80]=Oop [96]=Oop [104]=Oop }
                      ;*invokeinterface get {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@2233 (line 399)
  0x00000214a6415264: 48d2 eaff 

  0x00000214a6415268: ;   {post_call_nop}
  0x00000214a6415268: 0f1f 8400 | 6029 002e 

  0x00000214a6415270: ; implicit exception: dispatches to 0x00000214a641e654
  0x00000214a6415270: 448b 5808 

  0x00000214a6415274: ;   {metadata('java/lang/Double')}
  0x00000214a6415274: 4181 fb38 | 0519 000f | 850f 8f00 | 0048 8bd0 

  0x00000214a6415284: ;   {optimized virtual_call}
  0x00000214a6415284: 6666 90e8 

  0x00000214a6415288: ; ImmutableOopMap {rbp=Oop [32]=Oop [80]=Oop [96]=Oop [104]=Oop }
                      ;*invokevirtual doubleValue {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2241 (line 399)
  0x00000214a6415288: 9492 f4ff 

  0x00000214a641528c: ;   {post_call_nop}
  0x00000214a641528c: 0f1f 8400 | 8429 002f 

  0x00000214a6415294: ;   {section_word}
  0x00000214a6415294: c5f9 2e05 | e4ed ffff | 7a06 0f84 | ee02 0000 | 448b 554c 

  0x00000214a64152a8: ; implicit exception: dispatches to 0x00000214a641e6cc
  0x00000214a64152a8: 478b 5cd4 

  0x00000214a64152ac: ;   {metadata('java/util/ArrayList')}
  0x00000214a64152ac: 0841 81fb | 38e9 1f00 | 0f85 aa5f | 0000 4b8d | 14d4 448b 

  0x00000214a64152c0: ;   {optimized virtual_call}
  0x00000214a64152c0: 4424 78e8 

  0x00000214a64152c4: ; ImmutableOopMap {rbp=Oop [32]=Oop [80]=Oop [96]=Oop [104]=Oop }
                      ;*invokeinterface get {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@2298 (line 402)
  0x00000214a64152c4: e8d1 eaff 

  0x00000214a64152c8: ;   {post_call_nop}
  0x00000214a64152c8: 0f1f 8400 | c029 0030 

  0x00000214a64152d0: ; implicit exception: dispatches to 0x00000214a641e6e4
  0x00000214a64152d0: 448b 5808 

  0x00000214a64152d4: ;   {metadata('java/lang/Double')}
  0x00000214a64152d4: 4181 fb38 | 0519 000f | 859b 8f00 | 0048 8bd0 

  0x00000214a64152e4: ;   {optimized virtual_call}
  0x00000214a64152e4: 6666 90e8 

  0x00000214a64152e8: ; ImmutableOopMap {rbp=Oop [32]=Oop [80]=Oop [96]=Oop [104]=Oop }
                      ;*invokevirtual doubleValue {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2306 (line 402)
  0x00000214a64152e8: 3492 f4ff 

  0x00000214a64152ec: ;   {post_call_nop}
  0x00000214a64152ec: 0f1f 8400 | e429 0031 | c5fb 1144 | 2470 448b | 555c 478b 

  0x00000214a6415300: ;   {metadata('java/util/ArrayList')}
  0x00000214a6415300: 44d4 0841 | 81f8 38e9 | 1f00 0f85 | d05f 0000 | 4b8d 14d4 | 448b 4424 

  0x00000214a6415318: ;   {optimized virtual_call}
  0x00000214a6415318: 7866 90e8 

  0x00000214a641531c: ; ImmutableOopMap {rbp=Oop [32]=Oop [80]=Oop [96]=Oop [104]=Oop }
                      ;*invokeinterface get {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@2315 (line 402)
  0x00000214a641531c: 90d1 eaff 

  0x00000214a6415320: ;   {post_call_nop}
  0x00000214a6415320: 0f1f 8400 | 182a 0032 

  0x00000214a6415328: ; implicit exception: dispatches to 0x00000214a641e760
  0x00000214a6415328: 448b 5008 

  0x00000214a641532c: ;   {metadata('java/lang/Double')}
  0x00000214a641532c: 4181 fa38 | 0519 000f | 85b7 8f00 | 0048 8bd0 

  0x00000214a641533c: ;   {optimized virtual_call}
  0x00000214a641533c: 6666 90e8 

  0x00000214a6415340: ; ImmutableOopMap {rbp=Oop [32]=Oop [80]=Oop [96]=Oop [104]=Oop }
                      ;*invokevirtual doubleValue {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2323 (line 402)
  0x00000214a6415340: dc91 f4ff 

  0x00000214a6415344: ;   {post_call_nop}
  0x00000214a6415344: 0f1f 8400 | 3c2a 0033 | c5fb 1184 | 2480 0000 | 0044 8b55 | 5447 8b5c 

  0x00000214a641535c: ;   {metadata('java/util/ArrayList')}
  0x00000214a641535c: d408 4181 | fb38 e91f | 000f 85fd | 5f00 004b | 8d14 d444 | 8b44 2478 

  0x00000214a6415374: ;   {optimized virtual_call}
  0x00000214a6415374: 6666 90e8 

  0x00000214a6415378: ; ImmutableOopMap {rbp=Oop [32]=Oop [80]=Oop [96]=Oop [104]=Oop }
                      ;*invokeinterface get {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@2332 (line 402)
  0x00000214a6415378: 34d1 eaff 

  0x00000214a641537c: ;   {post_call_nop}
  0x00000214a641537c: 0f1f 8400 | 742a 0034 

  0x00000214a6415384: ; implicit exception: dispatches to 0x00000214a641e7e4
  0x00000214a6415384: 448b 5808 

  0x00000214a6415388: ;   {metadata('java/lang/Double')}
  0x00000214a6415388: 4181 fb38 | 0519 000f | 85db 8f00 | 0048 8bd0 

  0x00000214a6415398: ;   {optimized virtual_call}
  0x00000214a6415398: 6666 90e8 

  0x00000214a641539c: ; ImmutableOopMap {rbp=Oop [32]=Oop [80]=Oop [96]=Oop [104]=Oop }
                      ;*invokevirtual doubleValue {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2340 (line 402)
  0x00000214a641539c: 8091 f4ff 

  0x00000214a64153a0: ;   {post_call_nop}
  0x00000214a64153a0: 0f1f 8400 | 982a 0035 | 448b 5d58 

  0x00000214a64153ac: ; implicit exception: dispatches to 0x00000214a641e85c
  0x00000214a64153ac: 478b 44dc | 08c5 fb59 | 8424 8000 

  0x00000214a64153b8: ;   {metadata('java/util/ArrayList')}
  0x00000214a64153b8: 0000 4181 | f838 e91f | 000f 8521 | 6000 00c5 | fb11 8424 | 8000 0000 | 4b8d 14dc | 448b 4424 
  0x00000214a64153d8: ;   {optimized virtual_call}
  0x00000214a64153d8: 7866 90e8 

  0x00000214a64153dc: ; ImmutableOopMap {rbp=Oop [32]=Oop [80]=Oop [96]=Oop [104]=Oop }
                      ;*invokeinterface get {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@2350 (line 402)
  0x00000214a64153dc: d0d0 eaff 

  0x00000214a64153e0: ;   {post_call_nop}
  0x00000214a64153e0: 0f1f 8400 | d82a 0036 

  0x00000214a64153e8: ; implicit exception: dispatches to 0x00000214a641e874
  0x00000214a64153e8: 448b 5008 

  0x00000214a64153ec: ;   {metadata('java/lang/Double')}
  0x00000214a64153ec: 4181 fa38 | 0519 000f | 8523 9000 | 0048 8bd0 

  0x00000214a64153fc: ;   {optimized virtual_call}
  0x00000214a64153fc: 6666 90e8 

  0x00000214a6415400: ; ImmutableOopMap {rbp=Oop [32]=Oop [80]=Oop [96]=Oop [104]=Oop }
                      ;*invokevirtual doubleValue {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2358 (line 402)
  0x00000214a6415400: 1c91 f4ff 

  0x00000214a6415404: ;   {post_call_nop}
  0x00000214a6415404: 0f1f 8400 | fc2a 0037 | c5fb 5884 | 2480 0000 | 0049 ba9f | 17cc a514 | 0200 0041 

  0x00000214a6415420: ;   {post_call_nop}
  0x00000214a6415420: ffd2 0f1f | 8400 0000 | 0000 c5fb | 1184 2480 | 0000 0044 | 8b55 5047 | 8b5c d408 

  0x00000214a641543c: ;   {metadata('java/util/ArrayList')}
  0x00000214a641543c: 4181 fb38 | e91f 000f | 8523 6000 | 004b 8d14 | d444 8b44 

  0x00000214a6415450: ;   {optimized virtual_call}
  0x00000214a6415450: 2478 90e8 

  0x00000214a6415454: ; ImmutableOopMap {rbp=Oop [32]=Oop [80]=Oop [96]=Oop [104]=Oop }
                      ;*invokeinterface get {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@2371 (line 402)
  0x00000214a6415454: 58d0 eaff 

  0x00000214a6415458: ;   {post_call_nop}
  0x00000214a6415458: 0f1f 8400 | 502b 0038 

  0x00000214a6415460: ; implicit exception: dispatches to 0x00000214a641e904
  0x00000214a6415460: 448b 5808 

  0x00000214a6415464: ;   {metadata('java/lang/Double')}
  0x00000214a6415464: 4181 fb38 | 0519 000f | 8533 9000 | 0048 8bd0 

  0x00000214a6415474: ;   {optimized virtual_call}
  0x00000214a6415474: 6666 90e8 

  0x00000214a6415478: ; ImmutableOopMap {rbp=Oop [32]=Oop [80]=Oop [96]=Oop [104]=Oop }
                      ;*invokevirtual doubleValue {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2379 (line 402)
  0x00000214a6415478: a490 f4ff 

  0x00000214a641547c: ;   {post_call_nop}
  0x00000214a641547c: 0f1f 8400 | 742b 0039 | c5fb 5984 | 2480 0000 | 00c5 fb58 | 4424 70c5 | fb11 4424 | 2048 896c 
  0x00000214a641549c: 2470 488b 

  0x00000214a64154a0: ;   {optimized virtual_call}
  0x00000214a64154a0: 5424 68e8 

  0x00000214a64154a4: ; ImmutableOopMap {rbp=Oop [80]=Oop [96]=Oop [104]=Oop [112]=Oop }
                      ;*invokevirtual getMinY {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2390 (line 404)
  0x00000214a64154a4: 780b f2ff 

  0x00000214a64154a8: ;   {post_call_nop}
  0x00000214a64154a8: 0f1f 8400 | a02b 003a | c4e1 f97e | c548 8b54 

  0x00000214a64154b8: ;   {optimized virtual_call}
  0x00000214a64154b8: 2460 90e8 

  0x00000214a64154bc: ; ImmutableOopMap {[80]=Oop [96]=Oop [104]=Oop [112]=Oop }
                      ;*invokevirtual getLayoutY {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2395 (line 404)
  0x00000214a64154bc: 5093 f8ff 

  0x00000214a64154c0: ;   {post_call_nop}
  0x00000214a64154c0: 0f1f 8400 | b82b 003b | c4e1 f96e | cdc5 f35c | c0c5 fb58 | 4424 20c5 | fb10 4c24 | 40c5 f92e 
  0x00000214a64154e0: c876 4c48 | 8b54 2468 

  0x00000214a64154e8: ;   {optimized virtual_call}
  0x00000214a64154e8: 6666 90e8 

  0x00000214a64154ec: ; ImmutableOopMap {[80]=Oop [96]=Oop [112]=Oop }
                      ;*invokevirtual getMinY {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2410 (line 405)
  0x00000214a64154ec: 300b f2ff 

  0x00000214a64154f0: ;   {post_call_nop}
  0x00000214a64154f0: 0f1f 8400 | e82b 003c | c5fb 1144 | 2420 488b 

  0x00000214a6415500: ;   {optimized virtual_call}
  0x00000214a6415500: 5424 60e8 

  0x00000214a6415504: ; ImmutableOopMap {[80]=Oop [96]=Oop [112]=Oop }
                      ;*invokevirtual getLayoutY {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2415 (line 405)
  0x00000214a6415504: 0893 f8ff 

  0x00000214a6415508: ;   {post_call_nop}
  0x00000214a6415508: 0f1f 8400 | 002c 003d | c5fb 104c | 2420 c5f3 | 5cc0 c5fb | 1054 2440 | c5eb 5cc0 | c5fb 104c 
  0x00000214a6415528: 2448 e9b6 | f9ff ff48 | 8b6c 2440 | 488b 5424 

  0x00000214a6415538: ;   {optimized virtual_call}
  0x00000214a6415538: 6866 90e8 

  0x00000214a641553c: ; ImmutableOopMap {[80]=Oop [96]=Oop [104]=Oop [112]=Oop }
                      ;*invokevirtual getMaxY {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2429 (line 406)
  0x00000214a641553c: e088 f4ff 

  0x00000214a6415540: ;   {post_call_nop}
  0x00000214a6415540: 0f1f 8400 | 382c 003e | c5fb 1144 | 2440 488b 

  0x00000214a6415550: ;   {optimized virtual_call}
  0x00000214a6415550: 5424 60e8 

  0x00000214a6415554: ; ImmutableOopMap {[80]=Oop [96]=Oop [104]=Oop [112]=Oop }
                      ;*invokevirtual getLayoutY {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2434 (line 406)
  0x00000214a6415554: b892 f8ff 

  0x00000214a6415558: ;   {post_call_nop}
  0x00000214a6415558: 0f1f 8400 | 502c 003f | c5fb 104c | 2440 c5f3 | 5cc0 c5fb | 5844 2420 | c5f9 2e44 | 2448 0f87 
  0x00000214a6415578: 24f9 ffff | c5fb 1044 | 2420 c5fb | 104c 2448 | c4e1 f96e | d5e9 53f9 | ffff 448b | 5554 478b 
  0x00000214a6415598: ;   {metadata('java/util/ArrayList')}
  0x00000214a6415598: 5cd4 0841 | 81fb 38e9 | 1f00 0f85 | 4d6a 0000 | 4b8d 14d4 | 448b 4424 | 7841 8be8 

  0x00000214a64155b4: ;   {optimized virtual_call}
  0x00000214a64155b4: 6666 90e8 

  0x00000214a64155b8: ; ImmutableOopMap {[32]=Oop [80]=Oop [96]=Oop [104]=Oop }
                      ;*invokeinterface get {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@2255 (line 399)
  0x00000214a64155b8: f4ce eaff 

  0x00000214a64155bc: ;   {post_call_nop}
  0x00000214a64155bc: 0f1f 8400 | b42c 0040 

  0x00000214a64155c4: ; implicit exception: dispatches to 0x00000214a641e994
  0x00000214a64155c4: 448b 5808 

  0x00000214a64155c8: ;   {metadata('java/lang/Double')}
  0x00000214a64155c8: 4181 fb38 | 0519 000f | 852f 8c00 | 0048 8bd0 

  0x00000214a64155d8: ;   {optimized virtual_call}
  0x00000214a64155d8: 6666 90e8 

  0x00000214a64155dc: ; ImmutableOopMap {[32]=Oop [80]=Oop [96]=Oop [104]=Oop }
                      ;*invokevirtual doubleValue {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2263 (line 399)
  0x00000214a64155dc: 408f f4ff 

  0x00000214a64155e0: ;   {post_call_nop}
  0x00000214a64155e0: 0f1f 8400 | d82c 0041 

  0x00000214a64155e8: ;   {section_word}
  0x00000214a64155e8: c5f9 2e05 | 90ea ffff | 0f8a fa6a | 0000 0f85 | f46a 0000 | 488b 5424 

  0x00000214a6415600: ;   {optimized virtual_call}
  0x00000214a6415600: 6066 90e8 

  0x00000214a6415604: ; ImmutableOopMap {[32]=Oop [80]=Oop [96]=Oop [104]=Oop }
                      ;*invokevirtual getLayoutY {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2273 (line 400)
  0x00000214a6415604: 0892 f8ff 

  0x00000214a6415608: ;   {post_call_nop}
  0x00000214a6415608: 0f1f 8400 | 002d 0042 | 488b 6c24 | 2044 8b95 | 8000 0000 

  0x00000214a641561c: ; implicit exception: dispatches to 0x00000214a641e9fc
  0x00000214a641561c: 478b 5cd4 | 0c45 85db | 0f86 466a 

  0x00000214a6415628: ;   {section_word}
  0x00000214a6415628: 0000 c5fb | 100d 56ea | ffff c481 | 7359 4cd4 | 10c5 f358 | c0c5 fb11 | 4424 20e9 | 51fe ffff 
  0x00000214a6415648: 488b 5424 

  0x00000214a641564c: ;   {static_call}
  0x00000214a641564c: 5066 90e8 

  0x00000214a6415650: ; ImmutableOopMap {[32]=Oop [80]=Oop }
                      ;*invokestatic reverse {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2610 (line 430)
  0x00000214a6415650: 8cdb 9af8 

  0x00000214a6415654: ;   {post_call_nop}
  0x00000214a6415654: 0f1f 8400 | 4c2d 0043 | 488b 5424 

  0x00000214a6415660: ;   {optimized virtual_call}
  0x00000214a6415660: 5066 90e8 

  0x00000214a6415664: ; ImmutableOopMap {[32]=Oop }
                      ;*invokeinterface iterator {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@2615 (line 431)
  0x00000214a6415664: a873 f9ff 

  0x00000214a6415668: ;   {post_call_nop}
  0x00000214a6415668: 0f1f 8400 | 602d 0044 

  0x00000214a6415670: ; implicit exception: dispatches to 0x00000214a641eb48
  0x00000214a6415670: 448b 5808 

  0x00000214a6415674: ;   {metadata('java/util/ArrayList$Itr')}
  0x00000214a6415674: 4181 fbb8 | f728 000f | 8503 6f00 | 0048 8be8 

  0x00000214a6415684: ;   {optimized virtual_call}
  0x00000214a6415684: 488b d5e8 

  0x00000214a6415688: ; ImmutableOopMap {rbp=Oop [32]=Oop }
                      ;*invokeinterface hasNext {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2624 (line 431)
  0x00000214a6415688: 04af f2ff 

  0x00000214a641568c: ;   {post_call_nop}
  0x00000214a641568c: 0f1f 8400 | 842d 0045 | 85c0 0f85 | 4873 0000 | 4881 c4f0 | 0000 005d 

  0x00000214a64156a4: ;   {poll_return}
  0x00000214a64156a4: 493b 6728 | 0f87 6aee | 0000 c348 | 8b54 2468 | 8b6c 2478 

  0x00000214a64156b8: ;   {optimized virtual_call}
  0x00000214a64156b8: 6666 90e8 

  0x00000214a64156bc: ; ImmutableOopMap {[32]=Oop [80]=Oop [96]=Oop [104]=Oop }
                      ;*invokevirtual getMinX {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2169 (line 391)
  0x00000214a64156bc: 6006 f2ff 

  0x00000214a64156c0: ;   {post_call_nop}
  0x00000214a64156c0: 0f1f 8400 | b82d 0046 | c5fb 1144 | 2470 488b 

  0x00000214a64156d0: ;   {optimized virtual_call}
  0x00000214a64156d0: 5424 60e8 

  0x00000214a64156d4: ; ImmutableOopMap {[32]=Oop [80]=Oop [96]=Oop [104]=Oop }
                      ;*invokevirtual getLayoutX {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2174 (line 391)
  0x00000214a64156d4: 38ea f7ff 

  0x00000214a64156d8: ;   {post_call_nop}
  0x00000214a64156d8: 0f1f 8400 | d02d 0047 | c5fb 104c | 2470 c5f3 | 5cc0 c5fb | 1054 2430 | c5eb 5cc0 | c5fb 104c 
  0x00000214a64156f8: 2438 e91e | fbff ffc5 | fb10 5d50 

  0x00000214a6415704: ;   {section_word}
  0x00000214a6415704: c5f9 2e1d | 74e9 ffff | 0f8a 55eb | ffff 0f85 | 4feb ffff | 488b 5424 

  0x00000214a641571c: ;   {optimized virtual_call}
  0x00000214a641571c: 3066 90e8 

  0x00000214a6415720: ; ImmutableOopMap {rbp=Oop [32]=Oop [48]=Oop }
                      ;*invokevirtual localToScene {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::localToScene@41 (line 4846)
                      ; - Alastor$1::handle@52 (line 228)
  0x00000214a6415720: 7c5e 8cf8 

  0x00000214a6415724: ;   {post_call_nop}
  0x00000214a6415724: 0f1f 8400 | 1c2e 0048 | 4889 4424 | 38c5 fb10 | 4540 c5fb | 104d 1848 | 8b54 2430 

  0x00000214a6415740: ;   {optimized virtual_call}
  0x00000214a6415740: 6666 90e8 

  0x00000214a6415744: ; ImmutableOopMap {rbp=Oop [32]=Oop [48]=Oop [56]=Oop }
                      ;*invokevirtual localToScene {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::localToScene@54 (line 4847)
                      ; - Alastor$1::handle@52 (line 228)
  0x00000214a6415744: 585e 8cf8 

  0x00000214a6415748: ;   {post_call_nop}
  0x00000214a6415748: 0f1f 8400 | 402e 0049 | 4889 4424 | 40c5 fb10 | 4540 c5fb | 104d 4848 | 8b54 2430 

  0x00000214a6415764: ;   {optimized virtual_call}
  0x00000214a6415764: 6666 90e8 

  0x00000214a6415768: ; ImmutableOopMap {rbp=Oop [32]=Oop [48]=Oop [56]=Oop [64]=Oop }
                      ;*invokevirtual localToScene {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::localToScene@67 (line 4848)
                      ; - Alastor$1::handle@52 (line 228)
  0x00000214a6415768: 345e 8cf8 

  0x00000214a641576c: ;   {post_call_nop}
  0x00000214a641576c: 0f1f 8400 | 642e 004a | 4889 4424 | 48c5 fb10 | 4510 c5fb | 104d 4848 | 8b54 2430 | 488b 6c24 
  0x00000214a641578c: ;   {optimized virtual_call}
  0x00000214a641578c: 2066 90e8 

  0x00000214a6415790: ; ImmutableOopMap {rbp=Oop [32]=Oop [56]=Oop [64]=Oop [72]=Oop }
                      ;*invokevirtual localToScene {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::localToScene@81 (line 4849)
                      ; - Alastor$1::handle@52 (line 228)
  0x00000214a6415790: 0c5e 8cf8 

  0x00000214a6415794: ;   {post_call_nop}
  0x00000214a6415794: 0f1f 8400 | 8c2e 004b | 488b 5424 | 384c 8b44 | 2440 4c8b | 4c24 4848 

  0x00000214a64157ac: ;   {static_call}
  0x00000214a64157ac: 8bf8 90e8 

  0x00000214a64157b0: ; ImmutableOopMap {rbp=Oop [32]=Oop }
                      ;*invokestatic createBoundingBox {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::localToScene@92 (line 4851)
                      ; - Alastor$1::handle@52 (line 228)
  0x00000214a64157b0: ec2e 97f8 

  0x00000214a64157b4: ;   {post_call_nop}
  0x00000214a64157b4: 0f1f 8400 | ac2e 004c | e90f ecff | ffc4 c17b | 1042 3045 | 8b54 cc0c | 4585 d20f | 8658 7e00 
  0x00000214a64157d4: 00c4 c17b | 1144 cc10 | 4788 64dc | 10e9 92f1 

  0x00000214a64157e4: ;   {oop(a 'java/lang/Class'{0x00000007ffe7c4e8} = 'java/lang/System')}
  0x00000214a64157e4: ffff 49ba | e8c4 e7ff | 0700 0000 | 458b 5a74 | 4585 db0f | 8477 7e00 | 004b 8d14 

  0x00000214a6415800: ;   {oop("Hit by spear!"{0x000000070d99ed10})}
  0x00000214a6415800: dc49 b810 | ed99 0d07 | 0000 0048 | 8b6c 2420 

  0x00000214a6415810: ;   {optimized virtual_call}
  0x00000214a6415810: 6666 90e8 

  0x00000214a6415814: ; ImmutableOopMap {rbp=Oop [80]=Oop }
                      ;*invokevirtual println {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2520 (line 418)
  0x00000214a6415814: 0fef 0000 

  0x00000214a6415818: ;   {post_call_nop}
  0x00000214a6415818: 0f1f 8400 | 102f 004d | 448b 9584 | 0000 0047 | 8b5c d418 | 4585 db0f | 8453 7e00 | 004b 8d14 
  0x00000214a6415838: dc41 b801 

  0x00000214a641583c: ;   {optimized virtual_call}
  0x00000214a641583c: 0000 00e8 

  0x00000214a6415840: ; ImmutableOopMap {rbp=Oop [80]=Oop }
                      ;*invokevirtual getdmg {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2531 (line 419)
  0x00000214a6415840: f2ee 0000 

  0x00000214a6415844: ;   {post_call_nop}
  0x00000214a6415844: 0f1f 8400 | 3c2f 004e | 498b 87c8 | 0100 004c | 8bd0 4983 | c240 4d3b | 97d8 0100 | 000f 8371 
  0x00000214a6415864: 6400 004d | 8997 c801 | 0000 410f | 1882 c000 | 0000 48c7 | 0001 0000 

  0x00000214a641587c: ;   {metadata('javafx/scene/effect/DropShadow')}
  0x00000214a641587c: 00c7 4008 | d82b 0c01 | 4489 600c | 4c89 6010 | 4c89 6018 | 4c89 6020 | 4c89 6028 | 4c89 6030 
  0x00000214a641589c: 4c89 6038 | 4c8b d04c | 8954 2420 

  0x00000214a64158a8: ;   {optimized virtual_call}
  0x00000214a64158a8: 498b d2e8 

  0x00000214a64158ac: ; ImmutableOopMap {rbp=Oop [32]=Oop [80]=Oop }
                      ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2538 (line 420)
  0x00000214a64158ac: 28f2 0000 

  0x00000214a64158b0: ;   {post_call_nop}
  0x00000214a64158b0: 0f1f 8400 | a82f 004f 

  0x00000214a64158b8: ;   {oop(a 'javafx/scene/paint/Color'{0x000000070d2c6818})}
  0x00000214a64158b8: 49b8 1868 | 2c0d 0700 | 0000 488b 

  0x00000214a64158c4: ;   {optimized virtual_call}
  0x00000214a64158c4: 5424 20e8 

  0x00000214a64158c8: ; ImmutableOopMap {rbp=Oop [32]=Oop [80]=Oop }
                      ;*invokevirtual setColor {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2548 (line 421)
  0x00000214a64158c8: 1bf2 0000 

  0x00000214a64158cc: ;   {post_call_nop}
  0x00000214a64158cc: 0f1f 8400 | c42f 0050 

  0x00000214a64158d4: ;   {section_word}
  0x00000214a64158d4: c5fb 1005 | ece7 ffff | 488b 5424 

  0x00000214a64158e0: ;   {optimized virtual_call}
  0x00000214a64158e0: 2066 90e8 

  0x00000214a64158e4: ; ImmutableOopMap {rbp=Oop [32]=Oop [80]=Oop }
                      ;*invokevirtual setRadius {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2556 (line 422)
  0x00000214a64158e4: 0ef2 0000 

  0x00000214a64158e8: ;   {post_call_nop}
  0x00000214a64158e8: 0f1f 8400 | e02f 0051 | 448b 5564 | 4585 d20f | 849f 7d00 | 004b 8d14 | d44c 8b44 

  0x00000214a6415904: ;   {optimized virtual_call}
  0x00000214a6415904: 2420 90e8 

  0x00000214a6415908: ; ImmutableOopMap {rbp=Oop [80]=Oop }
                      ;*invokevirtual setEffect {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2565 (line 423)
  0x00000214a6415908: f9f1 0000 

  0x00000214a641590c: ;   {post_call_nop}
  0x00000214a641590c: 0f1f 8400 | 0430 0052 | 4d8b 9fc8 | 0100 004d | 8bd3 4981 | c290 0000 | 004d 3b97 | d801 0000 
  0x00000214a641592c: 0f83 c363 | 0000 4d89 | 97c8 0100 | 0041 0f18 | 82c0 0000 | 0049 c703 | 0100 0000 | 498b fb48 
  0x00000214a641594c: ;   {metadata('javafx/animation/PauseTransition')}
  0x00000214a641594c: 83c7 1041 | c743 08b0 | c823 0145 | 8963 0cb9 | 1000 0000 | c5fd 57c0 | e90d 0000 | 00c5 fe7f 
  0x00000214a641596c: 07c5 fe7f | 4720 4883 | c740 4883 | e908 7ded | 4883 c104 | 7c0c c5fe | 7f07 4883 | c720 4883 
  0x00000214a641598c: e904 4883 | c104 7e10 | 48ff c9c5 | f9d6 0748 | 83c7 0848 | ffc9 7df3 | 4d8b d34c | 8954 2460 
  0x00000214a64159ac: ;   {section_word}
  0x00000214a64159ac: c5fb 1005 | 5ce7 ffff 

  0x00000214a64159b4: ;   {static_call}
  0x00000214a64159b4: 6666 90e8 

  0x00000214a64159b8: ; ImmutableOopMap {rbp=Oop [80]=Oop [96]=Oop }
                      ;*invokestatic millis {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@2575 (line 424)
  0x00000214a64159b8: a4d7 0200 

  0x00000214a64159bc: ;   {post_call_nop}
  0x00000214a64159bc: 0f1f 8400 | b430 0053 | 488b 5424 | 604c 8bc0 

  0x00000214a64159cc: ;   {optimized virtual_call}
  0x00000214a64159cc: 6666 90e8 

  0x00000214a64159d0: ; ImmutableOopMap {rbp=Oop [80]=Oop [96]=Oop }
                      ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2578 (line 424)
  0x00000214a64159d0: 4ff1 0000 

  0x00000214a64159d4: ;   {post_call_nop}
  0x00000214a64159d4: 0f1f 8400 | cc30 0054 | 49ba 74d9 | 34bd f97f | 0000 458b | 124c 8bdd | 8b6d 6445 | 85d2 0f85 
  0x00000214a64159f4: bc7c 0000 | 4d8b 87c8 | 0100 004d | 8bd0 4983 | c210 4d3b | 97d8 0100 | 000f 8301 | 6300 004d 
  0x00000214a6415a14: 8997 c801 | 0000 410f | 1882 c000 | 0000 49c7 | 0001 0000 

  0x00000214a6415a28: ;   {metadata('Alastor$1$$Lambda+0x00000214b623a9e0')}
  0x00000214a6415a28: 0041 c740 | 08e0 a923 | 014c 895c | 2420 4189 | 680c 488b 

  0x00000214a6415a3c: ;   {optimized virtual_call}
  0x00000214a6415a3c: 5424 60e8 

  0x00000214a6415a40: ; ImmutableOopMap {[32]=Oop [80]=Oop [96]=Oop }
                      ;*invokevirtual setOnFinished {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2594 (line 425)
  0x00000214a6415a40: eef0 0000 

  0x00000214a6415a44: ;   {post_call_nop}
  0x00000214a6415a44: 0f1f 8400 | 3c31 0055 | 488b 5424 

  0x00000214a6415a50: ;   {optimized virtual_call}
  0x00000214a6415a50: 6066 90e8 

  0x00000214a6415a54: ; ImmutableOopMap {[32]=Oop [80]=Oop }
                      ;*invokevirtual play {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2599 (line 426)
  0x00000214a6415a54: edec 0000 

  0x00000214a6415a58: ;   {post_call_nop}
  0x00000214a6415a58: 0f1f 8400 | 5031 0056 | e923 f5ff | ffc4 e1f9 | 6ecd c5fb | 105c 2430 | c5fb 1054 | 2438 c5fb 
  0x00000214a6415a78: 1064 2440 | e982 eaff | ffc5 fb10 | 4424 40c5 | fb10 4c24 | 48e9 7001 | 0000 4c8b | 5424 2045 
  0x00000214a6415a98: 8b5a 7847 | 8b44 dc0c 

  0x00000214a6415aa0: ;   {section_word}
  0x00000214a6415aa0: c5f3 5c2d | 70e6 ffff | 4585 c00f | 86a4 8200 | 0047 8b44 

  0x00000214a6415ab4: ;   {section_word}
  0x00000214a6415ab4: dc10 c5db | 5835 0ae6 | ffff 418b | e8ff c543 | 896c dc10 | 448b dd41 | c1fb 1f4c | 63d5 4d69 
  0x00000214a6415ad4: d267 6666 | 6649 c1fa | 2145 8bca | 452b cb47 | 8d1c 8945 | 2bc3 4183 | f8ff 0f84 | 7817 0000 
  0x00000214a6415af4: 4c8b 5424 | 2045 8b52 | 7c45 85d2 | 0f84 9682 | 0000 c5fb | 1174 2468 | c5fb 116c | 2450 c5fb 
  0x00000214a6415b14: 1164 2440 | c5fb 1154 | 2438 c5fb | 115c 2460 | c5fb 114c | 2430 4b8d | 14d4 4533 | d283 fd08 
  0x00000214a6415b34: 410f 9fc2 | 4489 5424 

  0x00000214a6415b3c: ;   {optimized virtual_call}
  0x00000214a6415b3c: 5866 90e8 

  0x00000214a6415b40: ; ImmutableOopMap {[32]=Oop }
                      ;*invokevirtual nextBoolean {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1120 (line 313)
  0x00000214a6415b40: 10ec 0000 

  0x00000214a6415b44: ;   {post_call_nop}
  0x00000214a6415b44: 0f1f 8400 | 3c32 0057 | 8944 2448 | 83fd 080f | 8edc 4700 | 004c 8b54 | 2420 458b | 5a7c 4585 
  0x00000214a6415b64: db0f 8445 | 8200 004b 

  0x00000214a6415b6c: ;   {optimized virtual_call}
  0x00000214a6415b6c: 8d14 dce8 

  0x00000214a6415b70: ; ImmutableOopMap {[32]=Oop }
                      ;*invokevirtual nextBoolean {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1142 (line 314)
  0x00000214a6415b70: efeb 0000 

  0x00000214a6415b74: ;   {post_call_nop}
  0x00000214a6415b74: 0f1f 8400 | 6c32 0058 | 85c0 0f84 | b647 0000 | 41ba 0100 | 0000 4489 | 9424 b000 | 0000 4c8b 
  0x00000214a6415b94: 5424 2045 | 8b52 7c44 | 8b5c 2448 | 4585 db0f | 84ab 4700 | 0045 85d2 | 0f84 2452 | 0000 4b8d 
  0x00000214a6415bb4: 14d4 41b8 | 0300 0000 

  0x00000214a6415bbc: ;   {optimized virtual_call}
  0x00000214a6415bbc: 6666 90e8 

  0x00000214a6415bc0: ; ImmutableOopMap {[32]=Oop }
                      ;*invokevirtual nextInt {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1217 (line 322)
  0x00000214a6415bc0: aeeb 0000 

  0x00000214a6415bc4: ;   {post_call_nop}
  0x00000214a6415bc4: 0f1f 8400 | bc32 0059 | 448b d041 | ffc2 4585 | d27f 0d44 | 8b9c 24b0 | 0000 00e9 | a609 0000 
  0x00000214a6415be4: 4489 5424 | 5cc5 fb10 

  0x00000214a6415bec: ;   {section_word}
  0x00000214a6415bec: 4424 40c5 | fb5c 0d29 | e5ff ff45 | 33db 4489 | 9c24 8400 | 0000 4c8b | 5424 2045 | 8b52 7c45 
  0x00000214a6415c0c: 85d2 0f84 | d57a 0000 | c5fb 114c | 2448 c5fb | 1144 2440 | 4b8d 14d4 | 448b 9c24 | 8400 0000 
  0x00000214a6415c2c: 41c1 e304 | 448b 8424 | 8400 0000 | 478d 1c83 | c5f9 efc0 | c4c1 7b2a | c3c5 fb10 | 4c24 50c5 
  0x00000214a6415c4c: f35c c0c5 | fb11 4424 

  0x00000214a6415c54: ;   {optimized virtual_call}
  0x00000214a6415c54: 7066 90e8 

  0x00000214a6415c58: ; ImmutableOopMap {[32]=Oop }
                      ;*invokevirtual nextDouble {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1256 (line 326)
  0x00000214a6415c58: 25eb 0000 

  0x00000214a6415c5c: ;   {post_call_nop}
  0x00000214a6415c5c: 0f1f 8400 | 5433 005a | c5fb 1144 

  0x00000214a6415c68: ;   {section_word}
  0x00000214a6415c68: 2478 c5fb | 1005 96e4 | ffff 4533 | d2c5 f92e | 4424 7841 | 0f97 c244 | 8994 2480 | 0000 004d 
  0x00000214a6415c88: 8b97 c801 | 0000 4d8b | da49 81c3 | 2001 0000 | 4d3b 9fd8 | 0100 000f | 8393 6000 | 004d 899f 
  0x00000214a6415ca8: c801 0000 | 410f 1883 | c000 0000 | 49c7 0201 | 0000 0049 | 8bfa 4883 

  0x00000214a6415cc0: ;   {metadata('javafx/scene/shape/Rectangle')}
  0x00000214a6415cc0: c710 41c7 | 4208 00d0 | 0201 4589 | 620c b922 | 0000 00c5 | fd57 c0e9 | 0d00 0000 | c5fe 7f07 
  0x00000214a6415ce0: c5fe 7f47 | 2048 83c7 | 4048 83e9 | 087d ed48 | 83c1 047c | 0cc5 fe7f | 0748 83c7 | 2048 83e9 
  0x00000214a6415d00: 0448 83c1 | 047e 1048 | ffc9 c5f9 | d607 4883 | c708 48ff | c97d f34c | 8994 2488 | 0000 0049 
  0x00000214a6415d20: ;   {section_word}
  0x00000214a6415d20: 8bd2 c5fb | 1005 7ee3 

  0x00000214a6415d28: ;   {section_word}
  0x00000214a6415d28: ffff c5fb | 100d 86e3 

  0x00000214a6415d30: ;   {optimized virtual_call}
  0x00000214a6415d30: ffff 90e8 

  0x00000214a6415d34: ; ImmutableOopMap {[32]=Oop [136]=Oop }
                      ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1283 (line 327)
  0x00000214a6415d34: 18ee 0000 

  0x00000214a6415d38: ;   {post_call_nop}
  0x00000214a6415d38: 0f1f 8400 | 3034 005b | 488b 9424 | 8800 0000 

  0x00000214a6415d48: ;   {oop(a 'javafx/scene/paint/Color'{0x000000070d218c30})}
  0x00000214a6415d48: 49b8 308c | 210d 0700 

  0x00000214a6415d50: ;   {optimized virtual_call}
  0x00000214a6415d50: 0000 90e8 

  0x00000214a6415d54: ; ImmutableOopMap {[32]=Oop [136]=Oop }
                      ;*invokevirtual setFill {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1293 (line 328)
  0x00000214a6415d54: 07ee 0000 

  0x00000214a6415d58: ;   {post_call_nop}
  0x00000214a6415d58: 0f1f 8400 | 5034 005c | 488b 9424 | 8800 0000 

  0x00000214a6415d68: ;   {section_word}
  0x00000214a6415d68: c5fb 1005 | 60e3 ffff 

  0x00000214a6415d70: ;   {optimized virtual_call}
  0x00000214a6415d70: 6666 90e8 

  0x00000214a6415d74: ; ImmutableOopMap {[32]=Oop [136]=Oop }
                      ;*invokevirtual setLayoutX {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1301 (line 329)
  0x00000214a6415d74: e88c 8fff 

  0x00000214a6415d78: ;   {post_call_nop}
  0x00000214a6415d78: 0f1f 8400 | 7034 005d | 4d8b 97c8 | 0100 004d | 8bda 4981 | c310 0100 | 004d 3b9f | d801 0000 
  0x00000214a6415d98: 0f83 ba5f | 0000 4d89 | 9fc8 0100 | 0041 0f18 | 83c0 0000 | 0049 c702 | 0100 0000 | 498b fa48 
  0x00000214a6415db8: ;   {metadata('javafx/scene/shape/Polygon')}
  0x00000214a6415db8: 83c7 1041 | c742 08b8 | e423 0145 | 8962 0cb9 | 2000 0000 | c5fd 57c0 | e90d 0000 | 00c5 fe7f 
  0x00000214a6415dd8: 07c5 fe7f | 4720 4883 | c740 4883 | e908 7ded | 4883 c104 | 7c0c c5fe | 7f07 4883 | c720 4883 
  0x00000214a6415df8: e904 4883 | c104 7e10 | 48ff c9c5 | f9d6 0748 | 83c7 0848 | ffc9 7df3 | 4c89 9424 | 9000 0000 
  0x00000214a6415e18: ;   {optimized virtual_call}
  0x00000214a6415e18: 498b d2e8 

  0x00000214a6415e1c: ; ImmutableOopMap {[32]=Oop [136]=Oop [144]=Oop }
                      ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1308 (line 330)
  0x00000214a6415e1c: 4eed 0000 

  0x00000214a6415e20: ;   {post_call_nop}
  0x00000214a6415e20: 0f1f 8400 | 1835 005e | 488b 9424 | 9000 0000 

  0x00000214a6415e30: ;   {optimized virtual_call}
  0x00000214a6415e30: 6666 90e8 

  0x00000214a6415e34: ; ImmutableOopMap {[32]=Oop [136]=Oop [144]=Oop }
                      ;*invokevirtual getPoints {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@1315 (line 331)
  0x00000214a6415e34: e8bf f6ff 

  0x00000214a6415e38: ;   {post_call_nop}
  0x00000214a6415e38: 0f1f 8400 | 3035 005f | 4889 8424 | 9800 0000 | 498b 87c8 | 0100 004c | 8bd0 4983 | c228 4d3b 
  0x00000214a6415e58: 97d8 0100 | 000f 8315 | 5f00 004d | 8997 c801 | 0000 410f | 1882 c000 | 0000 48c7 | 0001 0000 
  0x00000214a6415e78: 0041 0f18 | 8200 0100 

  0x00000214a6415e80: ;   {metadata('java/lang/Double'[])}
  0x00000214a6415e80: 00c7 4008 | 4864 0701 | 410f 1882 | 4001 0000 | c740 0c06 | 0000 0041 | 0f18 8280 | 0100 004c 
  0x00000214a6415ea0: 8960 104c | 8960 184c | 8960 204c | 8bd0 4c89 | 9424 a000 | 0000 c5f9 

  0x00000214a6415eb8: ;   {static_call}
  0x00000214a6415eb8: 57c0 90e8 

  0x00000214a6415ebc: ; ImmutableOopMap {[32]=Oop [136]=Oop [144]=Oop [152]=Oop [160]=Oop }
                      ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@1326 (line 331)
  0x00000214a6415ebc: a091 8fff 

  0x00000214a6415ec0: ;   {post_call_nop}
  0x00000214a6415ec0: 0f1f 8400 | b835 0060 | 4c8b 8c24 | a000 0000 | 4d8d 5110 | 4180 7f48 | 000f 85f8 | 9a00 004c 
  0x00000214a6415ee0: 8bc0 49c1 | e803 4589 | 024d 8bda | 4c33 d849 | c1eb 150f | 841e 0000 | 004d 8bda | 49c1 eb09 
  0x00000214a6415f00: 49b8 00c0 | 6caa 1402 | 0000 4d03 | d841 803b | 020f 8528 | 9b00 00c5 

  0x00000214a6415f18: ;   {static_call}
  0x00000214a6415f18: f957 c0e8 

  0x00000214a6415f1c: ; ImmutableOopMap {[32]=Oop [136]=Oop [144]=Oop [152]=Oop [160]=Oop }
                      ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@1333 (line 331)
  0x00000214a6415f1c: 4091 8fff 

  0x00000214a6415f20: ;   {post_call_nop}
  0x00000214a6415f20: 0f1f 8400 | 1836 0061 | 4c8b 8c24 | a000 0000 | 4d8d 4114 | 4180 7f48 | 000f 8557 | 9b00 004c 
  0x00000214a6415f40: 8bd0 49c1 | ea03 4589 | 104d 8bd8 | 4c33 d849 | c1eb 150f | 841e 0000 | 004d 8bd8 | 49c1 eb09 
  0x00000214a6415f60: 49ba 00c0 | 6caa 1402 | 0000 4d03 | da41 803b | 020f 8587 

  0x00000214a6415f74: ;   {section_word}
  0x00000214a6415f74: 9b00 00c5 | fb10 0559 

  0x00000214a6415f7c: ;   {static_call}
  0x00000214a6415f7c: e1ff ffe8 

  0x00000214a6415f80: ; ImmutableOopMap {[32]=Oop [136]=Oop [144]=Oop [152]=Oop [160]=Oop }
                      ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@1342 (line 331)
  0x00000214a6415f80: dc90 8fff 

  0x00000214a6415f84: ;   {post_call_nop}
  0x00000214a6415f84: 0f1f 8400 | 7c36 0062 | 4c8b 8c24 | a000 0000 | 4d8d 5118 | 4180 7f48 | 000f 85b2 | 9b00 004c 
  0x00000214a6415fa4: 8bc0 49c1 | e803 4589 | 024d 8bda | 4c33 d849 | c1eb 150f | 841e 0000 | 004d 8bda | 49c1 eb09 
  0x00000214a6415fc4: 49b8 00c0 | 6caa 1402 | 0000 4d03 | d841 803b | 020f 85e2 | 9b00 00c5 

  0x00000214a6415fdc: ;   {static_call}
  0x00000214a6415fdc: f957 c0e8 

  0x00000214a6415fe0: ; ImmutableOopMap {[32]=Oop [136]=Oop [144]=Oop [152]=Oop [160]=Oop }
                      ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@1349 (line 331)
  0x00000214a6415fe0: 7c90 8fff 

  0x00000214a6415fe4: ;   {post_call_nop}
  0x00000214a6415fe4: 0f1f 8400 | dc36 0063 | 4c8b 8c24 | a000 0000 | 4d8d 511c | 4180 7f48 | 000f 8511 | 9c00 004c 
  0x00000214a6416004: 8bc0 49c1 | e803 4589 | 024d 8bda | 4c33 d849 | c1eb 150f | 841e 0000 | 004d 8bda | 49c1 eb09 
  0x00000214a6416024: 49b8 00c0 | 6caa 1402 | 0000 4d03 | d841 803b | 020f 8541 

  0x00000214a6416038: ;   {section_word}
  0x00000214a6416038: 9c00 00c5 | fb10 0565 

  0x00000214a6416040: ;   {static_call}
  0x00000214a6416040: e0ff ffe8 

  0x00000214a6416044: ; ImmutableOopMap {[32]=Oop [136]=Oop [144]=Oop [152]=Oop [160]=Oop }
                      ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@1358 (line 331)
  0x00000214a6416044: 1890 8fff 

  0x00000214a6416048: ;   {post_call_nop}
  0x00000214a6416048: 0f1f 8400 | 4037 0064 | 4c8b 8c24 | a000 0000 | 4d8d 5120 | 4180 7f48 | 000f 856c | 9c00 004c 
  0x00000214a6416068: 8bc0 49c1 | e803 4589 | 024d 8bda | 4c33 d849 | c1eb 150f | 841e 0000 | 004d 8bda | 49c1 eb09 
  0x00000214a6416088: 49b8 00c0 | 6caa 1402 | 0000 4d03 | d841 803b | 020f 859c 

  0x00000214a641609c: ;   {section_word}
  0x00000214a641609c: 9c00 00c5 | fb10 0539 

  0x00000214a64160a4: ;   {static_call}
  0x00000214a64160a4: e0ff ffe8 

  0x00000214a64160a8: ; ImmutableOopMap {[32]=Oop [136]=Oop [144]=Oop [152]=Oop [160]=Oop }
                      ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@1367 (line 331)
  0x00000214a64160a8: b48f 8fff 

  0x00000214a64160ac: ;   {post_call_nop}
  0x00000214a64160ac: 0f1f 8400 | a437 0065 | 4c8b 8c24 | a000 0000 | 4d8d 5124 | 4180 7f48 | 000f 85c7 | 9c00 004c 
  0x00000214a64160cc: 8bd8 49c1 | eb03 4589 | 1a4d 8bc2 | 4c33 c049 | c1e8 150f | 841e 0000 | 004d 8bc2 | 49c1 e809 
  0x00000214a64160ec: 49bb 00c0 | 6caa 1402 | 0000 4d03 | c341 8038 | 020f 8501 | 9d00 004c | 8b94 2498 | 0000 0045 
  0x00000214a641610c: ;   {metadata('javafx/scene/shape/Polygon$2')}
  0x00000214a641610c: 8b52 0841 | 81fa 38f4 | 2301 0f85 | f475 0000 | 488b 9424 | 9800 0000 

  0x00000214a6416124: ;   {optimized virtual_call}
  0x00000214a6416124: 4d8b c1e8 

  0x00000214a6416128: ; ImmutableOopMap {[32]=Oop [136]=Oop [144]=Oop }
                      ;*invokeinterface addAll {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1371 (line 331)
  0x00000214a6416128: 64e6 0000 

  0x00000214a641612c: ;   {post_call_nop}
  0x00000214a641612c: 0f1f 8400 | 2438 0066 | 488b 9424 | 9000 0000 

  0x00000214a641613c: ;   {section_word}
  0x00000214a641613c: c5fb 1005 | 74df ffff 

  0x00000214a6416144: ;   {optimized virtual_call}
  0x00000214a6416144: 6666 90e8 

  0x00000214a6416148: ; ImmutableOopMap {[32]=Oop [136]=Oop [144]=Oop }
                      ;*invokevirtual setLayoutY {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1382 (line 332)
  0x00000214a6416148: 1489 8fff 

  0x00000214a641614c: ;   {post_call_nop}
  0x00000214a641614c: 0f1f 8400 | 4438 0067 | 488b 9424 | 9000 0000 | c5f9 57c0 

  0x00000214a6416160: ;   {optimized virtual_call}
  0x00000214a6416160: 6666 90e8 

  0x00000214a6416164: ; ImmutableOopMap {[32]=Oop [136]=Oop [144]=Oop }
                      ;*invokevirtual setLayoutX {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1388 (line 333)
  0x00000214a6416164: f888 8fff 

  0x00000214a6416168: ;   {post_call_nop}
  0x00000214a6416168: 0f1f 8400 | 6038 0068 | 488b 9424 | 9000 0000 

  0x00000214a6416178: ;   {oop(a 'javafx/scene/paint/Color'{0x000000070d218c30})}
  0x00000214a6416178: 49b8 308c | 210d 0700 

  0x00000214a6416180: ;   {optimized virtual_call}
  0x00000214a6416180: 0000 90e8 

  0x00000214a6416184: ; ImmutableOopMap {[32]=Oop [136]=Oop [144]=Oop }
                      ;*invokevirtual setFill {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1396 (line 334)
  0x00000214a6416184: d7e9 0000 

  0x00000214a6416188: ;   {post_call_nop}
  0x00000214a6416188: 0f1f 8400 | 8038 0069 | 4d8b 97c8 | 0100 004d | 8bda 4981 | c370 0100 | 004d 3b9f | d801 0000 
  0x00000214a64161a8: 0f83 ef5b | 0000 4d89 | 9fc8 0100 | 0041 0f18 | 83c0 0000 | 0049 c702 | 0100 0000 | 498b fa48 
  0x00000214a64161c8: ;   {metadata('javafx/scene/Group')}
  0x00000214a64161c8: 83c7 1041 | c742 0838 | d81c 0145 | 8962 0cb9 | 2c00 0000 | c5fd 57c0 | e90d 0000 | 00c5 fe7f 
  0x00000214a64161e8: 07c5 fe7f | 4720 4883 | c740 4883 | e908 7ded | 4883 c104 | 7c0c c5fe | 7f07 4883 | c720 4883 
  0x00000214a6416208: e904 4883 | c104 7e10 | 48ff c9c5 | f9d6 0748 | 83c7 0848 | ffc9 7df3 | 4c89 9424 | 9800 0000 
  0x00000214a6416228: 4d8b 87c8 | 0100 004d | 8bd0 4983 | c218 4d3b | 97d8 0100 | 000f 8379 | 5b00 004d | 8997 c801 
  0x00000214a6416248: 0000 410f | 1882 c000 | 0000 49c7 | 0001 0000 | 0041 0f18 | 8200 0100 

  0x00000214a6416260: ;   {metadata('javafx/scene/Node'[])}
  0x00000214a6416260: 0041 c740 | 08f0 ca17 | 0141 0f18 | 8240 0100 | 0041 c740 | 0c02 0000 | 0041 0f18 | 8280 0100 
  0x00000214a6416280: 004c 8b94 | 2488 0000 | 004d 8bda | 49c1 eb03 | 4589 5810 | 4c8b 9424 | 9000 0000 | 4d8b da49 
  0x00000214a64162a0: c1eb 0345 | 8958 1448 | 8b94 2498 

  0x00000214a64162ac: ;   {optimized virtual_call}
  0x00000214a64162ac: 0000 00e8 

  0x00000214a64162b0: ; ImmutableOopMap {[32]=Oop [152]=Oop }
                      ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1417 (line 335)
  0x00000214a64162b0: d8e8 0000 

  0x00000214a64162b4: ;   {post_call_nop}
  0x00000214a64162b4: 0f1f 8400 | ac39 006a | 488b 9424 | 9800 0000 | c5fb 1044 

  0x00000214a64162c8: ;   {optimized virtual_call}
  0x00000214a64162c8: 2470 90e8 

  0x00000214a64162cc: ; ImmutableOopMap {[32]=Oop [152]=Oop }
                      ;*invokevirtual setLayoutX {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1426 (line 336)
  0x00000214a64162cc: 9087 8fff 

  0x00000214a64162d0: ;   {post_call_nop}
  0x00000214a64162d0: 0f1f 8400 | c839 006b 

  0x00000214a64162d8: ;   {section_word}
  0x00000214a64162d8: c5fb 1005 | 28de ffff | c5f9 2e44 | 2478 0f86 | 200e 0000 | c5fb 1044 | 2448 448b | 9c24 8000 
  0x00000214a64162f8: 0000 4489 | 5c24 7048 | 8b94 2498 

  0x00000214a6416304: ;   {optimized virtual_call}
  0x00000214a6416304: 0000 00e8 

  0x00000214a6416308: ; ImmutableOopMap {[32]=Oop [152]=Oop }
                      ;*invokevirtual setLayoutY {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1447 (line 337)
  0x00000214a6416308: 5487 8fff 

  0x00000214a641630c: ;   {post_call_nop}
  0x00000214a641630c: 0f1f 8400 | 043a 006c | 4c8b 5424 | 2045 8b52 | 4845 85d2 | 0f84 d673 | 0000 4b8d 

  0x00000214a6416328: ;   {optimized virtual_call}
  0x00000214a6416328: 14d4 90e8 

  0x00000214a641632c: ; ImmutableOopMap {[32]=Oop [152]=Oop }
                      ;*invokevirtual getChildren {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@1454 (line 338)
  0x00000214a641632c: 6fe4 0000 

  0x00000214a6416330: ;   {post_call_nop}
  0x00000214a6416330: 0f1f 8400 | 283a 006d 

  0x00000214a6416338: ; implicit exception: dispatches to 0x00000214a641eddc
  0x00000214a6416338: 448b 5808 

  0x00000214a641633c: ;   {metadata('javafx/scene/Parent$3')}
  0x00000214a641633c: 4181 fb50 | 4b0c 010f | 8563 7400 | 0048 8bd0 | 4c8b 8424 | 9800 0000 

  0x00000214a6416354: ;   {optimized virtual_call}
  0x00000214a6416354: 6666 90e8 

  0x00000214a6416358: ; ImmutableOopMap {[32]=Oop [152]=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1459 (line 338)
  0x00000214a6416358: 52e4 0000 

  0x00000214a641635c: ;   {post_call_nop}
  0x00000214a641635c: 0f1f 8400 | 543a 006e | 4c8b 5424 | 2045 8b42 | 4447 8b5c 

  0x00000214a6416370: ;   {metadata('java/util/ArrayList')}
  0x00000214a6416370: c408 4181 | fb38 e91f | 000f 85c1 | 7400 004b | 8d14 c44c | 8b84 2498 

  0x00000214a6416388: ;   {optimized virtual_call}
  0x00000214a6416388: 0000 00e8 

  0x00000214a641638c: ; ImmutableOopMap {[32]=Oop [152]=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1471 (line 339)
  0x00000214a641638c: 2095 eaff 

  0x00000214a6416390: ;   {post_call_nop}
  0x00000214a6416390: 0f1f 8400 | 883a 006f | 4c8b 5424 | 2045 8b5a | 4c44 895c | 2474 448b | 5424 7045 | 85d2 0f84 
  0x00000214a64163b0: 660d 0000 | 488b 9424 | 9800 0000 

  0x00000214a64163bc: ;   {optimized virtual_call}
  0x00000214a64163bc: 6666 90e8 

  0x00000214a64163c0: ; ImmutableOopMap {[32]=Oop [116]=NarrowOop }
                      ;*invokevirtual getLayoutY {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1488 (line 340)
  0x00000214a64163c0: 4c84 f8ff 

  0x00000214a64163c4: ;   {post_call_nop}
  0x00000214a64163c4: 0f1f 8400 | bc3a 0070 | 448b 5c24 | 7044 895c 

  0x00000214a64163d4: ;   {static_call}
  0x00000214a64163d4: 2470 90e8 

  0x00000214a64163d8: ; ImmutableOopMap {[32]=Oop [116]=NarrowOop }
                      ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@1496 (line 340)
  0x00000214a64163d8: 848c 8fff 

  0x00000214a64163dc: ;   {post_call_nop}
  0x00000214a64163dc: 0f1f 8400 | d43a 0071 | 4c8b c044 | 8b5c 2474 

  0x00000214a64163ec: ; implicit exception: dispatches to 0x00000214a641ee14
  0x00000214a64163ec: 478b 5cdc 

  0x00000214a64163f0: ;   {metadata('java/util/ArrayList')}
  0x00000214a64163f0: 0841 81fb | 38e9 1f00 | 0f85 d674 | 0000 448b | 5424 744b 

  0x00000214a6416404: ;   {optimized virtual_call}
  0x00000214a6416404: 8d14 d4e8 

  0x00000214a6416408: ; ImmutableOopMap {[32]=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1499 (line 340)
  0x00000214a6416408: a494 eaff 

  0x00000214a641640c: ;   {post_call_nop}
  0x00000214a641640c: 0f1f 8400 | 043b 0072 | 4c8b 5424 | 2045 8b52 | 5044 8954 | 2474 448b | 5c24 7045 | 85db 0f84 
  0x00000214a641642c: f80c 0000 | c5f9 57c0 | 4489 5c24 

  0x00000214a6416438: ;   {static_call}
  0x00000214a6416438: 7066 90e8 

  0x00000214a641643c: ; ImmutableOopMap {[32]=Oop [116]=NarrowOop }
                      ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@1544 (line 341)
  0x00000214a641643c: 208c 8fff 

  0x00000214a6416440: ;   {post_call_nop}
  0x00000214a6416440: 0f1f 8400 | 383b 0073 | 4c8b c044 | 8b54 2474 

  0x00000214a6416450: ; implicit exception: dispatches to 0x00000214a641ee2c
  0x00000214a6416450: 478b 54d4 

  0x00000214a6416454: ;   {metadata('java/util/ArrayList')}
  0x00000214a6416454: 0841 81fa | 38e9 1f00 | 0f85 e274 | 0000 448b | 5c24 744b 

  0x00000214a6416468: ;   {optimized virtual_call}
  0x00000214a6416468: 8d14 dce8 

  0x00000214a641646c: ; ImmutableOopMap {[32]=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1547 (line 341)
  0x00000214a641646c: 4094 eaff 

  0x00000214a6416470: ;   {post_call_nop}
  0x00000214a6416470: 0f1f 8400 | 683b 0074 | 4c8b 5424 | 2045 8b5a | 5444 895c | 2474 448b | 5424 7045 | 85d2 0f84 
  0x00000214a6416490: f90c 0000 | c5f9 57c0 

  0x00000214a6416498: ;   {static_call}
  0x00000214a6416498: 6666 90e8 

  0x00000214a641649c: ; ImmutableOopMap {[32]=Oop [116]=NarrowOop }
                      ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@1590 (line 342)
  0x00000214a641649c: c08b 8fff 

  0x00000214a64164a0: ;   {post_call_nop}
  0x00000214a64164a0: 0f1f 8400 | 983b 0075 | 4c8b c044 | 8b5c 2474 

  0x00000214a64164b0: ; implicit exception: dispatches to 0x00000214a641ee44
  0x00000214a64164b0: 478b 5cdc 

  0x00000214a64164b4: ;   {metadata('java/util/ArrayList')}
  0x00000214a64164b4: 0841 81fb | 38e9 1f00 | 0f85 f274 | 0000 448b | 5424 744b 

  0x00000214a64164c8: ;   {optimized virtual_call}
  0x00000214a64164c8: 8d14 d4e8 

  0x00000214a64164cc: ; ImmutableOopMap {[32]=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1593 (line 342)
  0x00000214a64164cc: e093 eaff 

  0x00000214a64164d0: ;   {post_call_nop}
  0x00000214a64164d0: 0f1f 8400 | c83b 0076 | 4c8b 5424 | 2041 8b6a | 58c5 f957 

  0x00000214a64164e4: ;   {static_call}
  0x00000214a64164e4: c066 90e8 

  0x00000214a64164e8: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop }
                      ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@1604 (line 343)
  0x00000214a64164e8: 748b 8fff 

  0x00000214a64164ec: ;   {post_call_nop}
  0x00000214a64164ec: 0f1f 8400 | e43b 0077 | 4c8b c045 | 8b54 ec08 

  0x00000214a64164fc: ;   {metadata('java/util/ArrayList')}
  0x00000214a64164fc: 4181 fa38 | e91f 000f | 851b 7500 | 0049 8d14 

  0x00000214a641650c: ;   {optimized virtual_call}
  0x00000214a641650c: ec66 90e8 

  0x00000214a6416510: ; ImmutableOopMap {[32]=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1607 (line 343)
  0x00000214a6416510: 9c93 eaff 

  0x00000214a6416514: ;   {post_call_nop}
  0x00000214a6416514: 0f1f 8400 | 0c3c 0078 | 4c8b 5424 | 2041 8b6a 

  0x00000214a6416524: ;   {section_word}
  0x00000214a6416524: 5cc5 fb10 | 0583 dbff 

  0x00000214a641652c: ;   {static_call}
  0x00000214a641652c: ff66 90e8 

  0x00000214a6416530: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop }
                      ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@1618 (line 344)
  0x00000214a6416530: 2c8b 8fff 

  0x00000214a6416534: ;   {post_call_nop}
  0x00000214a6416534: 0f1f 8400 | 2c3c 0079 | 4c8b c045 | 8b5c ec08 

  0x00000214a6416544: ;   {metadata('java/util/ArrayList')}
  0x00000214a6416544: 4181 fb38 | e91f 000f | 85f7 7400 | 0049 8d14 

  0x00000214a6416554: ;   {optimized virtual_call}
  0x00000214a6416554: ec66 90e8 

  0x00000214a6416558: ; ImmutableOopMap {[32]=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1621 (line 344)
  0x00000214a6416558: 5493 eaff 

  0x00000214a641655c: ;   {post_call_nop}
  0x00000214a641655c: 0f1f 8400 | 543c 007a | 448b 9c24 | 8400 0000 | 41ff c344 | 899c 2484 | 0000 0044 | 3b5c 245c 
  0x00000214a641657c: 0f8c fff4 | ffff 448b | 9c24 b000 | 0000 4585 | db0f 84df | 3d00 004c | 8b54 2420 | 458b 5a7c 
  0x00000214a641659c: 4585 db0f | 841f 7800 | 004b 8d14 | dc41 b803 

  0x00000214a64165ac: ;   {optimized virtual_call}
  0x00000214a64165ac: 0000 00e8 

  0x00000214a64165b0: ; ImmutableOopMap {[32]=Oop }
                      ;*invokevirtual nextInt {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1644 (line 349)
  0x00000214a64165b0: 63e2 0000 

  0x00000214a64165b4: ;   {post_call_nop}
  0x00000214a64165b4: 0f1f 8400 | ac3c 007b | 448b d041 | ffc2 4585 | d27e 1245 | 33c0 4489 | 5424 7044 | 8944 2474 
  0x00000214a64165d4: e96c 0100 | 00c5 fb10 | 4c24 30c5 | fb10 5c24 | 60c5 fb10 | 5424 38c5 | fb10 6424 | 40e9 a3e7 
  0x00000214a64165f4: ffff 4f8d | 14cc 458b | 4a0c 453b | c80f 850e | 0c00 0045 

  0x00000214a6416608: ;   {oop(a 'javafx/scene/input/KeyCode'{0x000000070d5088e8})}
  0x00000214a6416608: 8b4a 1041 | 81f9 1d11 | aae1 0f84 | ebde ffff | ba4d ffff | ff48 8b6c | 2420 c5fb | 1044 2428 
  0x00000214a6416628: c5fb 1144 | 2420 c5fb | 114c 2428 | c5fb 1154 | 2430 c5fb | 1164 2438 | c5fb 115c | 2440 4c89 
  0x00000214a6416648: 5424 4844 | 8944 2450 

  0x00000214a6416650: ;   {runtime_call UncommonTrapBlob}
  0x00000214a6416650: 6666 90e8 

  0x00000214a6416654: ; ImmutableOopMap {rbp=Oop [72]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.HashMap::getNode@131 (line 586)
                      ; - java.util.HashMap::containsKey@2 (line 603)
                      ; - java.util.HashSet::contains@5 (line 214)
                      ; - Alastor$1::handle@221 (line 248)
  0x00000214a6416654: 08da 9bff 

  0x00000214a6416658: ;   {post_call_nop}
  0x00000214a6416658: 0f1f 8400 | 503d 007c | 4b8d 2ccc | 448b 550c | 453b d00f | 85c5 0b00 | 0044 8b55 

  0x00000214a6416674: ;   {oop(a 'javafx/scene/input/KeyCode'{0x000000070d5087e0})}
  0x00000214a6416674: 1041 81fa | fc10 aae1 | 0f84 95e0 | ffff ba4d | ffff ffc5 | fb11 4c24 | 30c5 fb11 | 5424 38c5 
  0x00000214a6416694: fb11 6424 | 40c5 fb11 | 5c24 4844 | 8944 2450 

  0x00000214a64166a4: ;   {runtime_call UncommonTrapBlob}
  0x00000214a64166a4: 6666 90e8 

  0x00000214a64166a8: ; ImmutableOopMap {rbp=Oop [32]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.HashMap::getNode@131 (line 586)
                      ; - java.util.HashMap::containsKey@2 (line 603)
                      ; - java.util.HashSet::contains@5 (line 214)
                      ; - Alastor$1::handle@255 (line 249)
  0x00000214a64166a8: b4d9 9bff 

  0x00000214a64166ac: ;   {post_call_nop}
  0x00000214a64166ac: 0f1f 8400 | a43d 007d | 4b8d 2ccc | 448b 550c | 453b d00f | 858d 0b00 | 0044 8b55 

  0x00000214a64166c8: ;   {oop(a 'javafx/scene/input/KeyCode'{0x000000070d506338})}
  0x00000214a64166c8: 1041 81fa | 670c aae1 | 0f84 78e2 | ffff ba4d | ffff ffc5 | fb11 4c24 | 30c5 fb11 | 5424 38c5 
  0x00000214a64166e8: fb11 6424 | 40c5 fb11 | 5c24 4844 | 8944 2450 

  0x00000214a64166f8: ;   {runtime_call UncommonTrapBlob}
  0x00000214a64166f8: 6666 90e8 

  0x00000214a64166fc: ; ImmutableOopMap {rbp=Oop [32]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.HashMap::getNode@131 (line 586)
                      ; - java.util.HashMap::containsKey@2 (line 603)
                      ; - java.util.HashSet::contains@5 (line 214)
                      ; - Alastor$1::handle@289 (line 250)
  0x00000214a64166fc: 60d9 9bff 

  0x00000214a6416700: ;   {post_call_nop}
  0x00000214a6416700: 0f1f 8400 | f83d 007e | c4e1 f96e | cdc5 fb10 | 5c24 30c5 | fb10 5424 | 38c5 fb10 | 6424 40e9 
  0x00000214a6416720: 2ae2 ffff | c4e1 f96e | cdc5 fb10 | 5c24 30c5 | fb10 5424 | 38c5 fb10 | 6424 40e9 | d7df ffff 
  0x00000214a6416740: 4489 5c24 | 744d 8b87 | c801 0000 | 4d8b d049 | 81c2 2001 | 0000 448b | 5c24 7441 | c1e3 048b 
  0x00000214a6416760: 4c24 7445 | 8d1c 8bc5 | f9ef c0c4 | c17b 2ac3 | c5fb 104c | 2450 c5f3 | 5cd0 4d3b | 97d8 0100 
  0x00000214a6416780: 000f 83b2 | 4d00 004d | 8997 c801 | 0000 410f | 1882 c000 | 0000 49c7 | 0001 0000 | 0049 8bf8 
  0x00000214a64167a0: 4883 c710 

  0x00000214a64167a4: ;   {metadata('javafx/scene/shape/Rectangle')}
  0x00000214a64167a4: 41c7 4008 | 00d0 0201 | 4589 600c | b922 0000 | 00c5 fd57 | c0e9 0d00 | 0000 c5fe | 7f07 c5fe 
  0x00000214a64167c4: 7f47 2048 | 83c7 4048 | 83e9 087d | ed48 83c1 | 047c 0cc5 | fe7f 0748 | 83c7 2048 | 83e9 0448 
  0x00000214a64167e4: 83c1 047e | 1048 ffc9 | c5f9 d607 | 4883 c708 | 48ff c97d | f3c5 fb11 | 5424 584c | 8944 2468 
  0x00000214a6416804: ;   {section_word}
  0x00000214a6416804: 498b d0c5 | fb10 0599 

  0x00000214a641680c: ;   {section_word}
  0x00000214a641680c: d8ff ffc5 | fb10 0da1 

  0x00000214a6416814: ;   {optimized virtual_call}
  0x00000214a6416814: d8ff ffe8 

  0x00000214a6416818: ; ImmutableOopMap {[32]=Oop [104]=Oop }
                      ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1685 (line 353)
  0x00000214a6416818: 34e3 0000 

  0x00000214a641681c: ;   {post_call_nop}
  0x00000214a641681c: 0f1f 8400 | 143f 007f | 488b 5424 

  0x00000214a6416828: ;   {oop(a 'javafx/scene/paint/Color'{0x000000070d218c30})}
  0x00000214a6416828: 6849 b830 | 8c21 0d07 

  0x00000214a6416830: ;   {optimized virtual_call}
  0x00000214a6416830: 0000 00e8 

  0x00000214a6416834: ; ImmutableOopMap {[32]=Oop [104]=Oop }
                      ;*invokevirtual setFill {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1695 (line 354)
  0x00000214a6416834: 27e3 0000 

  0x00000214a6416838: ;   {post_call_nop}
  0x00000214a6416838: 0f1f 8400 | 303f 0080 | 488b 5424 

  0x00000214a6416844: ;   {section_word}
  0x00000214a6416844: 68c5 fb10 | 0583 d8ff 

  0x00000214a641684c: ;   {optimized virtual_call}
  0x00000214a641684c: ff66 90e8 

  0x00000214a6416850: ; ImmutableOopMap {[32]=Oop [104]=Oop }
                      ;*invokevirtual setLayoutX {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1703 (line 355)
  0x00000214a6416850: 7c01 0100 

  0x00000214a6416854: ;   {post_call_nop}
  0x00000214a6416854: 0f1f 8400 | 4c3f 0081 | 4d8b 9fc8 | 0100 004d | 8bd3 4981 | c210 0100 | 004d 3b97 | d801 0000 
  0x00000214a6416874: 0f83 e64c | 0000 4d89 | 97c8 0100 | 0041 0f18 | 82c0 0000 | 0049 c703 | 0100 0000 | 498b fb48 
  0x00000214a6416894: ;   {metadata('javafx/scene/shape/Polygon')}
  0x00000214a6416894: 83c7 1041 | c743 08b8 | e423 0145 | 8963 0cb9 | 2000 0000 | c5fd 57c0 | e90d 0000 | 00c5 fe7f 
  0x00000214a64168b4: 07c5 fe7f | 4720 4883 | c740 4883 | e908 7ded | 4883 c104 | 7c0c c5fe | 7f07 4883 | c720 4883 
  0x00000214a64168d4: e904 4883 | c104 7e10 | 48ff c9c5 | f9d6 0748 | 83c7 0848 | ffc9 7df3 | 4c89 5c24 | 7849 8bd3 
  0x00000214a64168f4: ;   {optimized virtual_call}
  0x00000214a64168f4: 6666 90e8 

  0x00000214a64168f8: ; ImmutableOopMap {[32]=Oop [104]=Oop [120]=Oop }
                      ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1710 (line 356)
  0x00000214a64168f8: 72e2 0000 

  0x00000214a64168fc: ;   {post_call_nop}
  0x00000214a64168fc: 0f1f 8400 | f43f 0082 | 488b 5424 

  0x00000214a6416908: ;   {optimized virtual_call}
  0x00000214a6416908: 7866 90e8 

  0x00000214a641690c: ; ImmutableOopMap {[32]=Oop [104]=Oop [120]=Oop }
                      ;*invokevirtual getPoints {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@1717 (line 357)
  0x00000214a641690c: 10b5 f6ff 

  0x00000214a6416910: ;   {post_call_nop}
  0x00000214a6416910: 0f1f 8400 | 0840 0083 | 4889 8424 | 8000 0000 | 498b 87c8 | 0100 004c | 8bd0 4983 | c228 4d3b 
  0x00000214a6416930: 97d8 0100 | 000f 8345 | 4c00 004d | 8997 c801 | 0000 410f | 1882 c000 | 0000 48c7 | 0001 0000 
  0x00000214a6416950: 0041 0f18 | 8200 0100 

  0x00000214a6416958: ;   {metadata('java/lang/Double'[])}
  0x00000214a6416958: 00c7 4008 | 4864 0701 | 410f 1882 | 4001 0000 | c740 0c06 | 0000 0041 | 0f18 8280 | 0100 004c 
  0x00000214a6416978: 8960 104c | 8960 184c | 8960 2048 | 8984 2488 | 0000 00c5 | f957 c048 

  0x00000214a6416990: ;   {static_call}
  0x00000214a6416990: 8be8 90e8 

  0x00000214a6416994: ; ImmutableOopMap {rbp=Oop [32]=Oop [104]=Oop [120]=Oop [128]=Oop [136]=Oop }
                      ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@1728 (line 357)
  0x00000214a6416994: e804 0100 

  0x00000214a6416998: ;   {post_call_nop}
  0x00000214a6416998: 0f1f 8400 | 9040 0084 | 4c8d 4510 | 4180 7f48 | 000f 85b6 | 9400 004c | 8bd0 49c1 | ea03 4589 
  0x00000214a64169b8: 104d 8bd8 | 4c33 d849 | c1eb 150f | 841e 0000 | 004d 8bd8 | 49c1 eb09 | 49ba 00c0 | 6caa 1402 
  0x00000214a64169d8: 0000 4d03 | da41 803b | 020f 85e6 

  0x00000214a64169e4: ;   {section_word}
  0x00000214a64169e4: 9400 00c5 | fb10 05d1 

  0x00000214a64169ec: ;   {static_call}
  0x00000214a64169ec: d6ff ffe8 

  0x00000214a64169f0: ; ImmutableOopMap {rbp=Oop [32]=Oop [104]=Oop [120]=Oop [128]=Oop [136]=Oop }
                      ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@1737 (line 357)
  0x00000214a64169f0: 8c04 0100 

  0x00000214a64169f4: ;   {post_call_nop}
  0x00000214a64169f4: 0f1f 8400 | ec40 0085 | 4c8d 4514 | 4180 7f48 | 000f 8519 | 9500 004c | 8bd0 49c1 | ea03 4589 
  0x00000214a6416a14: 104d 8bd8 | 4c33 d849 | c1eb 150f | 841e 0000 | 004d 8bd8 | 49c1 eb09 | 49ba 00c0 | 6caa 1402 
  0x00000214a6416a34: 0000 4d03 | da41 803b | 020f 8549 

  0x00000214a6416a40: ;   {section_word}
  0x00000214a6416a40: 9500 00c5 | fb10 058d 

  0x00000214a6416a48: ;   {static_call}
  0x00000214a6416a48: d6ff ffe8 

  0x00000214a6416a4c: ; ImmutableOopMap {rbp=Oop [32]=Oop [104]=Oop [120]=Oop [128]=Oop [136]=Oop }
                      ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@1746 (line 357)
  0x00000214a6416a4c: 3004 0100 

  0x00000214a6416a50: ;   {post_call_nop}
  0x00000214a6416a50: 0f1f 8400 | 4841 0086 | 4c8d 4518 | 4180 7f48 | 000f 857c | 9500 004c | 8bd0 49c1 | ea03 4589 
  0x00000214a6416a70: 104d 8bd8 | 4c33 d849 | c1eb 150f | 841e 0000 | 004d 8bd8 | 49c1 eb09 | 49ba 00c0 | 6caa 1402 
  0x00000214a6416a90: 0000 4d03 | da41 803b | 020f 85ac 

  0x00000214a6416a9c: ;   {section_word}
  0x00000214a6416a9c: 9500 00c5 | fb10 0519 

  0x00000214a6416aa4: ;   {static_call}
  0x00000214a6416aa4: d6ff ffe8 

  0x00000214a6416aa8: ; ImmutableOopMap {rbp=Oop [32]=Oop [104]=Oop [120]=Oop [128]=Oop [136]=Oop }
                      ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@1755 (line 357)
  0x00000214a6416aa8: d403 0100 

  0x00000214a6416aac: ;   {post_call_nop}
  0x00000214a6416aac: 0f1f 8400 | a441 0087 | 4c8d 451c | 4180 7f48 | 000f 85df | 9500 004c | 8bd0 49c1 | ea03 4589 
  0x00000214a6416acc: 104d 8bd8 | 4c33 d849 | c1eb 150f | 841e 0000 | 004d 8bd8 | 49c1 eb09 | 49ba 00c0 | 6caa 1402 
  0x00000214a6416aec: 0000 4d03 | da41 803b | 020f 850f 

  0x00000214a6416af8: ;   {section_word}
  0x00000214a6416af8: 9600 00c5 | fb10 05a5 

  0x00000214a6416b00: ;   {static_call}
  0x00000214a6416b00: d5ff ffe8 

  0x00000214a6416b04: ; ImmutableOopMap {rbp=Oop [32]=Oop [104]=Oop [120]=Oop [128]=Oop [136]=Oop }
                      ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@1764 (line 357)
  0x00000214a6416b04: 7803 0100 

  0x00000214a6416b08: ;   {post_call_nop}
  0x00000214a6416b08: 0f1f 8400 | 0042 0088 | 4c8d 4520 | 4180 7f48 | 000f 8542 | 9600 004c | 8bd0 49c1 | ea03 4589 
  0x00000214a6416b28: 104d 8bd8 | 4c33 d849 | c1eb 150f | 841e 0000 | 004d 8bd8 | 49c1 eb09 | 49ba 00c0 | 6caa 1402 
  0x00000214a6416b48: 0000 4d03 | da41 803b | 020f 8572 | 9600 00c5 

  0x00000214a6416b58: ;   {static_call}
  0x00000214a6416b58: f957 c0e8 

  0x00000214a6416b5c: ; ImmutableOopMap {rbp=Oop [32]=Oop [104]=Oop [120]=Oop [128]=Oop [136]=Oop }
                      ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@1771 (line 357)
  0x00000214a6416b5c: 2003 0100 

  0x00000214a6416b60: ;   {post_call_nop}
  0x00000214a6416b60: 0f1f 8400 | 5842 0089 | 4c8d 5524 | 4180 7f48 | 000f 85a9 | 9600 004c | 8bd8 49c1 | eb03 4589 
  0x00000214a6416b80: 1a4d 8bc2 | 4c33 c049 | c1e8 150f | 841e 0000 | 004d 8bc2 | 49c1 e809 | 49bb 00c0 | 6caa 1402 
  0x00000214a6416ba0: 0000 4d03 | c341 8038 | 020f 85d9 | 9600 004c | 8b94 2480 | 0000 0045 

  0x00000214a6416bb8: ;   {metadata('javafx/scene/shape/Polygon$2')}
  0x00000214a6416bb8: 8b52 0841 | 81fa 38f4 | 2301 0f85 | 9860 0000 | 488b 9424 | 8000 0000 

  0x00000214a6416bd0: ;   {optimized virtual_call}
  0x00000214a6416bd0: 4c8b c5e8 

  0x00000214a6416bd4: ; ImmutableOopMap {[32]=Oop [104]=Oop [120]=Oop }
                      ;*invokeinterface addAll {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1775 (line 357)
  0x00000214a6416bd4: 4edc 0000 

  0x00000214a6416bd8: ;   {post_call_nop}
  0x00000214a6416bd8: 0f1f 8400 | d042 008a | 488b 5424 

  0x00000214a6416be4: ;   {section_word}
  0x00000214a6416be4: 78c5 fb10 | 05f3 d4ff 

  0x00000214a6416bec: ;   {optimized virtual_call}
  0x00000214a6416bec: ff66 90e8 

  0x00000214a6416bf0: ; ImmutableOopMap {[32]=Oop [104]=Oop [120]=Oop }
                      ;*invokevirtual setLayoutY {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1786 (line 358)
  0x00000214a6416bf0: dc05 0100 

  0x00000214a6416bf4: ;   {post_call_nop}
  0x00000214a6416bf4: 0f1f 8400 | ec42 008b | 488b 5424 | 78c5 f957 

  0x00000214a6416c04: ;   {optimized virtual_call}
  0x00000214a6416c04: c066 90e8 

  0x00000214a6416c08: ; ImmutableOopMap {[32]=Oop [104]=Oop [120]=Oop }
                      ;*invokevirtual setLayoutX {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1792 (line 359)
  0x00000214a6416c08: c4fd 0000 

  0x00000214a6416c0c: ;   {post_call_nop}
  0x00000214a6416c0c: 0f1f 8400 | 0443 008c | 488b 5424 

  0x00000214a6416c18: ;   {oop(a 'javafx/scene/paint/Color'{0x000000070d218c30})}
  0x00000214a6416c18: 7849 b830 | 8c21 0d07 

  0x00000214a6416c20: ;   {optimized virtual_call}
  0x00000214a6416c20: 0000 00e8 

  0x00000214a6416c24: ; ImmutableOopMap {[32]=Oop [104]=Oop [120]=Oop }
                      ;*invokevirtual setFill {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1800 (line 360)
  0x00000214a6416c24: 37df 0000 

  0x00000214a6416c28: ;   {post_call_nop}
  0x00000214a6416c28: 0f1f 8400 | 2043 008d | 4d8b 9fc8 | 0100 004d | 8bd3 4981 | c270 0100 | 004d 3b97 | d801 0000 
  0x00000214a6416c48: 0f83 7e49 | 0000 4d89 | 97c8 0100 | 0041 0f18 | 82c0 0000 | 0049 c703 | 0100 0000 | 498b fb48 
  0x00000214a6416c68: ;   {metadata('javafx/scene/Group')}
  0x00000214a6416c68: 83c7 1041 | c743 0838 | d81c 0145 | 8963 0cb9 | 2c00 0000 | c5fd 57c0 | e90d 0000 | 00c5 fe7f 
  0x00000214a6416c88: 07c5 fe7f | 4720 4883 | c740 4883 | e908 7ded | 4883 c104 | 7c0c c5fe | 7f07 4883 | c720 4883 
  0x00000214a6416ca8: e904 4883 | c104 7e10 | 48ff c9c5 | f9d6 0748 | 83c7 0848 | ffc9 7df3 | 4c89 9c24 | 8000 0000 
  0x00000214a6416cc8: 4d8b 87c8 | 0100 004d | 8bd0 4983 | c218 4d3b | 97d8 0100 | 000f 83c2 | 4800 004d | 8997 c801 
  0x00000214a6416ce8: 0000 410f | 1882 c000 | 0000 49c7 | 0001 0000 | 0041 0f18 | 8200 0100 

  0x00000214a6416d00: ;   {metadata('javafx/scene/Node'[])}
  0x00000214a6416d00: 0041 c740 | 08f0 ca17 | 0141 0f18 | 8240 0100 | 0041 c740 | 0c02 0000 | 0041 0f18 | 8280 0100 
  0x00000214a6416d20: 004c 8b54 | 2468 4d8b | da49 c1eb | 0345 8958 | 104c 8b54 | 2478 4d8b | da49 c1eb | 0345 8958 
  0x00000214a6416d40: 1448 8b94 | 2480 0000 

  0x00000214a6416d48: ;   {optimized virtual_call}
  0x00000214a6416d48: 0066 90e8 

  0x00000214a6416d4c: ; ImmutableOopMap {[32]=Oop [128]=Oop }
                      ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1821 (line 361)
  0x00000214a6416d4c: 3cde 0000 

  0x00000214a6416d50: ;   {post_call_nop}
  0x00000214a6416d50: 0f1f 8400 | 4844 008e | 488b 9424 | 8000 0000 | c5fb 1044 

  0x00000214a6416d64: ;   {optimized virtual_call}
  0x00000214a6416d64: 2458 90e8 

  0x00000214a6416d68: ; ImmutableOopMap {[32]=Oop [128]=Oop }
                      ;*invokevirtual setLayoutX {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1830 (line 362)
  0x00000214a6416d68: 64fc 0000 

  0x00000214a6416d6c: ;   {post_call_nop}
  0x00000214a6416d6c: 0f1f 8400 | 6444 008f | 488b 9424 | 8000 0000 | c5fb 1044 

  0x00000214a6416d80: ;   {optimized virtual_call}
  0x00000214a6416d80: 2460 90e8 

  0x00000214a6416d84: ; ImmutableOopMap {[32]=Oop [128]=Oop }
                      ;*invokevirtual setLayoutY {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1837 (line 363)
  0x00000214a6416d84: 4804 0100 

  0x00000214a6416d88: ;   {post_call_nop}
  0x00000214a6416d88: 0f1f 8400 | 8044 0090 | 4c8b 5424 | 2045 8b5a | 4845 85db | 0f84 6f5e | 0000 4b8d 

  0x00000214a6416da4: ;   {optimized virtual_call}
  0x00000214a6416da4: 14dc 90e8 

  0x00000214a6416da8: ; ImmutableOopMap {[32]=Oop [128]=Oop }
                      ;*invokevirtual getChildren {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@1844 (line 364)
  0x00000214a6416da8: 89da 0000 

  0x00000214a6416dac: ;   {post_call_nop}
  0x00000214a6416dac: 0f1f 8400 | a444 0091 

  0x00000214a6416db4: ; implicit exception: dispatches to 0x00000214a641ebe8
  0x00000214a6416db4: 448b 5008 

  0x00000214a6416db8: ;   {metadata('javafx/scene/Parent$3')}
  0x00000214a6416db8: 4181 fa50 | 4b0c 010f | 851b 5f00 | 0048 8bd0 | 4c8b 8424 | 8000 0000 

  0x00000214a6416dd0: ;   {optimized virtual_call}
  0x00000214a6416dd0: 6666 90e8 

  0x00000214a6416dd4: ; ImmutableOopMap {[32]=Oop [128]=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1849 (line 364)
  0x00000214a6416dd4: 6cda 0000 

  0x00000214a6416dd8: ;   {post_call_nop}
  0x00000214a6416dd8: 0f1f 8400 | d044 0092 | 4c8b 5424 | 2045 8b42 | 4447 8b54 

  0x00000214a6416dec: ;   {metadata('java/util/ArrayList')}
  0x00000214a6416dec: c408 4181 | fa38 e91f | 000f 856d | 5f00 004b | 8d14 c44c | 8b84 2480 

  0x00000214a6416e04: ;   {optimized virtual_call}
  0x00000214a6416e04: 0000 00e8 

  0x00000214a6416e08: ; ImmutableOopMap {[32]=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1861 (line 365)
  0x00000214a6416e08: a48a eaff 

  0x00000214a6416e0c: ;   {post_call_nop}
  0x00000214a6416e0c: 0f1f 8400 | 0445 0093 | 4c8b 5424 | 2041 8b6a | 4cc5 fb10 

  0x00000214a6416e20: ;   {static_call}
  0x00000214a6416e20: 4424 60e8 

  0x00000214a6416e24: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop }
                      ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@1873 (line 366)
  0x00000214a6416e24: 5800 0100 

  0x00000214a6416e28: ;   {post_call_nop}
  0x00000214a6416e28: 0f1f 8400 | 2045 0094 

  0x00000214a6416e30: ; implicit exception: dispatches to 0x00000214a641ec20
  0x00000214a6416e30: 458b 5cec 

  0x00000214a6416e34: ;   {metadata('java/util/ArrayList')}
  0x00000214a6416e34: 0841 81fb | 38e9 1f00 | 0f85 8a5f | 0000 498d | 14ec 4c8b 

  0x00000214a6416e48: ;   {optimized virtual_call}
  0x00000214a6416e48: c066 90e8 

  0x00000214a6416e4c: ; ImmutableOopMap {[32]=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1876 (line 366)
  0x00000214a6416e4c: 608a eaff 

  0x00000214a6416e50: ;   {post_call_nop}
  0x00000214a6416e50: 0f1f 8400 | 4845 0095 | 4c8b 5c24 | 2045 8b53 | 7c45 85d2 | 0f84 ba5d | 0000 418b | 6b50 4b8d 
  0x00000214a6416e70: ;   {optimized virtual_call}
  0x00000214a6416e70: 14d4 90e8 

  0x00000214a6416e74: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop }
                      ;*invokevirtual nextDouble {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1893 (line 367)
  0x00000214a6416e74: f9d9 0000 

  0x00000214a6416e78: ;   {post_call_nop}
  0x00000214a6416e78: 0f1f 8400 | 7045 0096 | 4c8b 5424 | 2045 8b8a | 8000 0000 

  0x00000214a6416e8c: ; implicit exception: dispatches to 0x00000214a641ec38
  0x00000214a6416e8c: 478b 5ccc 

  0x00000214a6416e90: ;   {section_word}
  0x00000214a6416e90: 0cc5 fb59 | 0557 d2ff 

  0x00000214a6416e98: ;   {section_word}
  0x00000214a6416e98: ffc5 fb58 | 0527 d2ff | ff45 85db | 0f86 465f | 0000 c481 | 7b10 4ccc | 10c5 f358 | c9c5 f358 
  0x00000214a6416eb8: ;   {static_call}
  0x00000214a6416eb8: c066 90e8 

  0x00000214a6416ebc: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop }
                      ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@1912 (line 367)
  0x00000214a6416ebc: c0ff 0000 

  0x00000214a6416ec0: ;   {post_call_nop}
  0x00000214a6416ec0: 0f1f 8400 | b845 0097 

  0x00000214a6416ec8: ; implicit exception: dispatches to 0x00000214a641ec4c
  0x00000214a6416ec8: 458b 5cec 

  0x00000214a6416ecc: ;   {metadata('java/util/ArrayList')}
  0x00000214a6416ecc: 0841 81fb | 38e9 1f00 | 0f85 425f | 0000 498d | 14ec 4c8b 

  0x00000214a6416ee0: ;   {optimized virtual_call}
  0x00000214a6416ee0: c066 90e8 

  0x00000214a6416ee4: ; ImmutableOopMap {[32]=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1915 (line 367)
  0x00000214a6416ee4: c889 eaff 

  0x00000214a6416ee8: ;   {post_call_nop}
  0x00000214a6416ee8: 0f1f 8400 | e045 0098 | 4c8b 5c24 | 2045 8b53 | 7c45 85d2 | 0f84 365d | 0000 418b | 6b54 4b8d 
  0x00000214a6416f08: ;   {optimized virtual_call}
  0x00000214a6416f08: 14d4 90e8 

  0x00000214a6416f0c: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop }
                      ;*invokevirtual nextDouble {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1930 (line 368)
  0x00000214a6416f0c: 7fd9 0000 

  0x00000214a6416f10: ;   {post_call_nop}
  0x00000214a6416f10: 0f1f 8400 | 0846 0099 | 4c8b 5424 | 2045 8b82 | 8000 0000 

  0x00000214a6416f24: ; implicit exception: dispatches to 0x00000214a641ec64
  0x00000214a6416f24: 478b 5cc4 

  0x00000214a6416f28: ;   {section_word}
  0x00000214a6416f28: 0cc5 fb59 | 05c7 d1ff 

  0x00000214a6416f30: ;   {section_word}
  0x00000214a6416f30: ffc5 fb58 | 0577 d1ff | ff45 85db | 0f86 fe5e 

  0x00000214a6416f40: ;   {section_word}
  0x00000214a6416f40: 0000 c5fb | 100d 9ed1 | ffff c481 | 7359 4cc4 | 10c5 f358 

  0x00000214a6416f54: ;   {static_call}
  0x00000214a6416f54: c066 90e8 

  0x00000214a6416f58: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop }
                      ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@1949 (line 368)
  0x00000214a6416f58: 24ff 0000 

  0x00000214a6416f5c: ;   {post_call_nop}
  0x00000214a6416f5c: 0f1f 8400 | 5446 009a 

  0x00000214a6416f64: ; implicit exception: dispatches to 0x00000214a641ec78
  0x00000214a6416f64: 458b 5cec 

  0x00000214a6416f68: ;   {metadata('java/util/ArrayList')}
  0x00000214a6416f68: 0841 81fb | 38e9 1f00 | 0f85 f65e | 0000 498d | 14ec 4c8b 

  0x00000214a6416f7c: ;   {optimized virtual_call}
  0x00000214a6416f7c: c066 90e8 

  0x00000214a6416f80: ; ImmutableOopMap {[32]=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1952 (line 368)
  0x00000214a6416f80: 2c89 eaff 

  0x00000214a6416f84: ;   {post_call_nop}
  0x00000214a6416f84: 0f1f 8400 | 7c46 009b | 4c8b 5c24 | 2045 8b53 | 7c45 85d2 | 0f84 ae5c | 0000 418b | 6b58 4b8d 
  0x00000214a6416fa4: ;   {optimized virtual_call}
  0x00000214a6416fa4: 14d4 90e8 

  0x00000214a6416fa8: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop }
                      ;*invokevirtual nextDouble {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1966 (line 369)
  0x00000214a6416fa8: 01d9 0000 

  0x00000214a6416fac: ;   {post_call_nop}
  0x00000214a6416fac: 0f1f 8400 | a446 009c 

  0x00000214a6416fb4: ;   {section_word}
  0x00000214a6416fb4: c5fb 5905 | 44d1 ffff | c5fb 58c0 

  0x00000214a6416fc0: ;   {static_call}
  0x00000214a6416fc0: 6666 90e8 

  0x00000214a6416fc4: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop }
                      ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@1977 (line 369)
  0x00000214a6416fc4: b8fe 0000 

  0x00000214a6416fc8: ;   {post_call_nop}
  0x00000214a6416fc8: 0f1f 8400 | c046 009d 

  0x00000214a6416fd0: ; implicit exception: dispatches to 0x00000214a641ec90
  0x00000214a6416fd0: 458b 5cec 

  0x00000214a6416fd4: ;   {metadata('java/util/ArrayList')}
  0x00000214a6416fd4: 0841 81fb | 38e9 1f00 | 0f85 ae5e | 0000 498d | 14ec 4c8b 

  0x00000214a6416fe8: ;   {optimized virtual_call}
  0x00000214a6416fe8: c066 90e8 

  0x00000214a6416fec: ; ImmutableOopMap {[32]=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1980 (line 369)
  0x00000214a6416fec: c088 eaff 

  0x00000214a6416ff0: ;   {post_call_nop}
  0x00000214a6416ff0: 0f1f 8400 | e846 009e | 4c8b 5424 | 2041 8b6a 

  0x00000214a6417000: ;   {section_word}
  0x00000214a6417000: 5cc5 fb10 | 05a7 d0ff 

  0x00000214a6417008: ;   {static_call}
  0x00000214a6417008: ff66 90e8 

  0x00000214a641700c: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop }
                      ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@1991 (line 370)
  0x00000214a641700c: 70fe 0000 

  0x00000214a6417010: ;   {post_call_nop}
  0x00000214a6417010: 0f1f 8400 | 0847 009f 

  0x00000214a6417018: ; implicit exception: dispatches to 0x00000214a641eca8
  0x00000214a6417018: 458b 54ec 

  0x00000214a641701c: ;   {metadata('java/util/ArrayList')}
  0x00000214a641701c: 0841 81fa | 38e9 1f00 | 0f85 8a5e | 0000 498d | 14ec 4c8b 

  0x00000214a6417030: ;   {optimized virtual_call}
  0x00000214a6417030: c066 90e8 

  0x00000214a6417034: ; ImmutableOopMap {[32]=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1994 (line 370)
  0x00000214a6417034: 7888 eaff 

  0x00000214a6417038: ;   {post_call_nop}
  0x00000214a6417038: 0f1f 8400 | 3047 00a0 | 448b 5c24 | 7441 ffc3 | 443b 5c24 | 700f 8ced | f6ff ffc5 | fb10 4c24 
  0x00000214a6417058: 30c5 fb10 | 5c24 60c5 | fb10 5424 | 38c5 fb10 | 6424 40e9 | 29dd ffff | 498b 87c8 | 0100 004c 
  0x00000214a6417078: 8bd0 4983 | c228 4d3b | 97d8 0100 | 000f 8399 | 5000 004d | 8997 c801 | 0000 410f | 1882 c000 
  0x00000214a6417098: 0000 48c7 | 0001 0000 

  0x00000214a64170a0: ;   {metadata('javafx/scene/Node$12')}
  0x00000214a64170a0: 00c7 4008 | 980a 0801 | 4c89 6010 | 4c89 6018 | 4c89 6020 | c740 0c01 | 0000 0044 | 8948 244f 
  0x00000214a64170c0: 8d5c cc68 | 4180 7f48 | 000f 8510 | 9200 004c | 8bc0 49c1 | e803 4589 | 034d 8bd3 | 4c33 d049 
  0x00000214a64170e0: c1ea 150f | 841e 0000 | 004d 8bd3 | 49c1 ea09 | 49b8 00c0 | 6caa 1402 | 0000 4d03 | d041 803a 
  0x00000214a6417100: 020f 857c | 9200 00e9 | 1cd9 ffff | c5fb 1044 | 2468 4533 | dbe9 e0f1 | ffff c5fb | 1044 2468 
  0x00000214a6417120: 4533 dbe9 | a9f2 ffff | 4c8b 5424 | 2045 8b5a | 7c45 85db | 0f84 b66d | 0000 4b8d 

  0x00000214a641713c: ;   {optimized virtual_call}
  0x00000214a641713c: 14dc 90e8 

  0x00000214a6417140: ; ImmutableOopMap {[32]=Oop [116]=NarrowOop }
                      ;*invokevirtual nextDouble {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1525 (line 341)
  0x00000214a6417140: 96d7 0000 

  0x00000214a6417144: ;   {post_call_nop}
  0x00000214a6417144: 0f1f 8400 | 3c48 00a1 | 4c8b 5424 | 2041 8baa | 8000 0000 

  0x00000214a6417158: ; implicit exception: dispatches to 0x00000214a641ef24
  0x00000214a6417158: 458b 54ec 

  0x00000214a641715c: ;   {section_word}
  0x00000214a641715c: 0cc5 fb59 | 058b cfff 

  0x00000214a6417164: ;   {section_word}
  0x00000214a6417164: ffc5 fb58 | 155b cfff | ff45 85d2 | 0f86 a26d | 0000 c4c1 | 7b10 44ec | 10c5 fb58 | c8c5 f358 
  0x00000214a6417184: c245 33db | e9a7 f2ff | ff4c 8b54 | 2420 458b | 527c 4585 | d20f 8465 | 6d00 004b 

  0x00000214a64171a0: ;   {optimized virtual_call}
  0x00000214a64171a0: 8d14 d4e8 

  0x00000214a64171a4: ; ImmutableOopMap {[32]=Oop [116]=NarrowOop }
                      ;*invokevirtual nextDouble {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1571 (line 342)
  0x00000214a64171a4: 41d7 0000 

  0x00000214a64171a8: ;   {post_call_nop}
  0x00000214a64171a8: 0f1f 8400 | a048 00a2 | 4c8b 5424 | 2041 8baa | 8000 0000 

  0x00000214a64171bc: ; implicit exception: dispatches to 0x00000214a641ef38
  0x00000214a64171bc: 458b 5cec 

  0x00000214a64171c0: ;   {section_word}
  0x00000214a64171c0: 0cc5 fb59 | 052f cfff 

  0x00000214a64171c8: ;   {section_word}
  0x00000214a64171c8: ffc5 fb58 | 15df ceff | ff45 85db | 0f86 626d 

  0x00000214a64171d8: ;   {section_word}
  0x00000214a64171d8: 0000 c5fb | 1005 06cf | ffff c4c1 | 7b59 4cec | 10c5 f358 | c2e9 a6f2 | ffff 4b8d | 14d4 6666 
  0x00000214a64171f8: 9048 b8a0 | e5d7 b414 

  0x00000214a6417200: ;   {virtual_call}
  0x00000214a6417200: 0200 00e8 

  0x00000214a6417204: ; ImmutableOopMap {[32]=Oop }
                      ;*invokevirtual fireValueChangedEvent {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.binding.ExpressionHelper::fireValueChangedEvent@5 (line 91)
                      ; - javafx.beans.property.DoublePropertyBase::fireValueChangedEvent@4 (line 107)
                      ; - javafx.beans.property.DoublePropertyBase::markInvalid@17 (line 114)
                      ; - javafx.beans.property.DoublePropertyBase::set@73 (line 148)
                      ; - javafx.scene.Node::setLayoutY@5 (line 2879)
                      ; - Alastor$1::handle@354 (line 256)
  0x00000214a6417204: 587b 8fff 

  0x00000214a6417208: ;   {post_call_nop}
  0x00000214a6417208: 0f1f 8400 | 0049 00a3 | e98c d8ff | ff49 8b57 | 3045 8b52 | 184c 8b5c 

  0x00000214a6417220: ; ImmutableOopMap {r10=NarrowOop r11=Oop [32]=Oop }
                      ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.HashMap::getNode@145 (line 588)
                      ; - java.util.HashMap::containsKey@2 (line 603)
                      ; - java.util.HashSet::contains@5 (line 214)
                      ; - Alastor$1::handle@221 (line 248)
                      ;   {poll}
  0x00000214a6417220: 2420 8502 | 4585 d20f | 84dc d3ff | ff49 c1e2 | 03e9 c4f3 | ffff 498b | 5730 448b 

  0x00000214a641723c: ; ImmutableOopMap {r10=NarrowOop [32]=Oop }
                      ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.HashMap::getNode@145 (line 588)
                      ; - java.util.HashMap::containsKey@2 (line 603)
                      ; - java.util.HashSet::contains@5 (line 214)
                      ; - Alastor$1::handle@255 (line 249)
                      ;   {poll}
  0x00000214a641723c: 5518 8502 | 4585 d20f | 84d4 d5ff | ff4b 8d2c | d4e9 12f4 | ffff 498b | 7730 8b55 

  0x00000214a6417258: ; ImmutableOopMap {rcx=NarrowOop rdx=NarrowOop [32]=Oop }
                      ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.HashMap::getNode@145 (line 588)
                      ; - java.util.HashMap::containsKey@2 (line 603)
                      ; - java.util.HashSet::contains@5 (line 214)
                      ; - Alastor$1::handle@289 (line 250)
                      ;   {poll}
  0x00000214a6417258: 1885 0685 | d20f 84c2 | d6ff ff49 | 8d2c d4e9 | 4cf4 ffff | 4c8b 5424 | 204c 8954 | 2430 4533 
  0x00000214a6417278: db44 899c | 2490 0000 | 00e9 6d03 | 0000 c5fb | 1044 2448 | c5fb 1184 | 2498 0000 | 0048 8b94 
  0x00000214a6417298: 24a8 0000 | 00c5 fb10 | 8424 9800 | 0000 488b 

  0x00000214a64172a8: ;   {optimized virtual_call}
  0x00000214a64172a8: 6c24 30e8 

  0x00000214a64172ac: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [168]=Oop }
                      ;*invokevirtual setLayoutY {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@912 (line 300)
  0x00000214a64172ac: b077 8fff 

  0x00000214a64172b0: ;   {post_call_nop}
  0x00000214a64172b0: 0f1f 8400 | a849 00a7 | 448b 5d48 | 4585 db0f | 84d3 5c00 | 004b 8d14 

  0x00000214a64172c8: ;   {optimized virtual_call}
  0x00000214a64172c8: dc66 90e8 

  0x00000214a64172cc: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [168]=Oop }
                      ;*invokevirtual getChildren {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@919 (line 301)
  0x00000214a64172cc: 9077 8fff 

  0x00000214a64172d0: ;   {post_call_nop}
  0x00000214a64172d0: 0f1f 8400 | c849 00a8 

  0x00000214a64172d8: ; implicit exception: dispatches to 0x00000214a641ecc0
  0x00000214a64172d8: 448b 5008 

  0x00000214a64172dc: ;   {metadata('javafx/scene/Parent$3')}
  0x00000214a64172dc: 4181 fa50 | 4b0c 010f | 8547 5f00 | 0048 8bd0 | 4c8b 8424 | a800 0000 

  0x00000214a64172f4: ;   {optimized virtual_call}
  0x00000214a64172f4: 6666 90e8 

  0x00000214a64172f8: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [168]=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@924 (line 301)
  0x00000214a64172f8: 6477 8fff 

  0x00000214a64172fc: ;   {post_call_nop}
  0x00000214a64172fc: 0f1f 8400 | f449 00a9 | 448b 5544 

  0x00000214a6417308: ; implicit exception: dispatches to 0x00000214a641ecdc
  0x00000214a6417308: 478b 5cd4 

  0x00000214a641730c: ;   {metadata('java/util/ArrayList')}
  0x00000214a641730c: 0841 81fb | 38e9 1f00 | 0f85 a65f | 0000 4b8d | 14d4 4c8b | 8424 a800 

  0x00000214a6417324: ;   {optimized virtual_call}
  0x00000214a6417324: 0000 90e8 

  0x00000214a6417328: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@936 (line 302)
  0x00000214a6417328: 3477 8fff 

  0x00000214a641732c: ;   {post_call_nop}
  0x00000214a641732c: 0f1f 8400 | 244a 00aa | 8b6d 4cc5 | fb10 8424 | 9800 0000 

  0x00000214a6417340: ;   {static_call}
  0x00000214a6417340: 6666 90e8 

  0x00000214a6417344: ; ImmutableOopMap {rbp=NarrowOop [48]=Oop [104]=Oop }
                      ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@948 (line 303)
  0x00000214a6417344: 187d 8fff 

  0x00000214a6417348: ;   {post_call_nop}
  0x00000214a6417348: 0f1f 8400 | 404a 00ab 

  0x00000214a6417350: ; implicit exception: dispatches to 0x00000214a641ecf8
  0x00000214a6417350: 458b 5cec 

  0x00000214a6417354: ;   {metadata('java/util/ArrayList')}
  0x00000214a6417354: 0841 81fb | 38e9 1f00 | 0f85 d65f | 0000 498d | 14ec 4c8b 

  0x00000214a6417368: ;   {optimized virtual_call}
  0x00000214a6417368: c066 90e8 

  0x00000214a641736c: ; ImmutableOopMap {[48]=Oop [104]=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@951 (line 303)
  0x00000214a641736c: f076 8fff 

  0x00000214a6417370: ;   {post_call_nop}
  0x00000214a6417370: 0f1f 8400 | 684a 00ac | 4c8b 5424 | 3045 8b52 | 7c45 85d2 | 0f84 225c | 0000 4c8b | 5c24 3041 
  0x00000214a6417390: 8b6b 504b 

  0x00000214a6417394: ;   {optimized virtual_call}
  0x00000214a6417394: 8d14 d4e8 

  0x00000214a6417398: ; ImmutableOopMap {rbp=NarrowOop [48]=Oop [104]=Oop }
                      ;*invokevirtual nextDouble {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@968 (line 304)
  0x00000214a6417398: c476 8fff 

  0x00000214a641739c: ;   {post_call_nop}
  0x00000214a641739c: 0f1f 8400 | 944a 00ad | 4c8b 5424 | 3045 8b82 | 8000 0000 

  0x00000214a64173b0: ; implicit exception: dispatches to 0x00000214a641ed10
  0x00000214a64173b0: 478b 5cc4 

  0x00000214a64173b4: ;   {section_word}
  0x00000214a64173b4: 0cc5 fb59 | 0533 cdff 

  0x00000214a64173bc: ;   {section_word}
  0x00000214a64173bc: ffc5 fb58 | 0503 cdff | ff45 85db | 0f86 c65f | 0000 c481 | 7b10 4cc4 | 10c5 f358 | c9c5 f358 
  0x00000214a64173dc: ;   {static_call}
  0x00000214a64173dc: c066 90e8 

  0x00000214a64173e0: ; ImmutableOopMap {rbp=NarrowOop [48]=Oop [104]=Oop }
                      ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@987 (line 304)
  0x00000214a64173e0: 7c7c 8fff 

  0x00000214a64173e4: ;   {post_call_nop}
  0x00000214a64173e4: 0f1f 8400 | dc4a 00ae 

  0x00000214a64173ec: ; implicit exception: dispatches to 0x00000214a641ed24
  0x00000214a64173ec: 458b 5cec 

  0x00000214a64173f0: ;   {metadata('java/util/ArrayList')}
  0x00000214a64173f0: 0841 81fb | 38e9 1f00 | 0f85 fe5f | 0000 498d | 14ec 4c8b 

  0x00000214a6417404: ;   {optimized virtual_call}
  0x00000214a6417404: c066 90e8 

  0x00000214a6417408: ; ImmutableOopMap {[48]=Oop [104]=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@990 (line 304)
  0x00000214a6417408: 5476 8fff 

  0x00000214a641740c: ;   {post_call_nop}
  0x00000214a641740c: 0f1f 8400 | 044b 00af | 4c8b 5424 | 3045 8b52 | 7c45 85d2 | 0f84 9a5b | 0000 4c8b | 5c24 3041 
  0x00000214a641742c: 8b6b 544b 

  0x00000214a6417430: ;   {optimized virtual_call}
  0x00000214a6417430: 8d14 d4e8 

  0x00000214a6417434: ; ImmutableOopMap {rbp=NarrowOop [48]=Oop [104]=Oop }
                      ;*invokevirtual nextDouble {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1005 (line 305)
  0x00000214a6417434: 2876 8fff 

  0x00000214a6417438: ;   {post_call_nop}
  0x00000214a6417438: 0f1f 8400 | 304b 00b0 | 4c8b 5424 | 3045 8b8a | 8000 0000 

  0x00000214a641744c: ; implicit exception: dispatches to 0x00000214a641ed3c
  0x00000214a641744c: 478b 5ccc 

  0x00000214a6417450: ;   {section_word}
  0x00000214a6417450: 0cc5 fb59 | 059f ccff 

  0x00000214a6417458: ;   {section_word}
  0x00000214a6417458: ffc5 fb58 | 054f ccff | ff45 85db | 0f86 ee5f 

  0x00000214a6417468: ;   {section_word}
  0x00000214a6417468: 0000 c5fb | 100d 76cc | ffff c481 | 7359 4ccc | 10c5 f358 

  0x00000214a641747c: ;   {static_call}
  0x00000214a641747c: c066 90e8 

  0x00000214a6417480: ; ImmutableOopMap {rbp=NarrowOop [48]=Oop [104]=Oop }
                      ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@1024 (line 305)
  0x00000214a6417480: dc7b 8fff 

  0x00000214a6417484: ;   {post_call_nop}
  0x00000214a6417484: 0f1f 8400 | 7c4b 00b1 

  0x00000214a641748c: ; implicit exception: dispatches to 0x00000214a641ed50
  0x00000214a641748c: 458b 5cec 

  0x00000214a6417490: ;   {metadata('java/util/ArrayList')}
  0x00000214a6417490: 0841 81fb | 38e9 1f00 | 0f85 2260 | 0000 498d | 14ec 4c8b 

  0x00000214a64174a4: ;   {optimized virtual_call}
  0x00000214a64174a4: c066 90e8 

  0x00000214a64174a8: ; ImmutableOopMap {[48]=Oop [104]=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1027 (line 305)
  0x00000214a64174a8: b475 8fff 

  0x00000214a64174ac: ;   {post_call_nop}
  0x00000214a64174ac: 0f1f 8400 | a44b 00b2 | 4c8b 5424 | 3045 8b52 | 7c45 85d2 | 0f84 0e5b | 0000 4c8b | 5c24 3041 
  0x00000214a64174cc: 8b6b 584b 

  0x00000214a64174d0: ;   {optimized virtual_call}
  0x00000214a64174d0: 8d14 d4e8 

  0x00000214a64174d4: ; ImmutableOopMap {rbp=NarrowOop [48]=Oop [104]=Oop }
                      ;*invokevirtual nextDouble {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1041 (line 306)
  0x00000214a64174d4: 8875 8fff 

  0x00000214a64174d8: ;   {post_call_nop}
  0x00000214a64174d8: 0f1f 8400 | d04b 00b3 

  0x00000214a64174e0: ;   {section_word}
  0x00000214a64174e0: c5fb 5905 | 18cc ffff | c5fb 58c0 

  0x00000214a64174ec: ;   {static_call}
  0x00000214a64174ec: 6666 90e8 

  0x00000214a64174f0: ; ImmutableOopMap {rbp=NarrowOop [48]=Oop [104]=Oop }
                      ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@1052 (line 306)
  0x00000214a64174f0: 6c7b 8fff 

  0x00000214a64174f4: ;   {post_call_nop}
  0x00000214a64174f4: 0f1f 8400 | ec4b 00b4 

  0x00000214a64174fc: ; implicit exception: dispatches to 0x00000214a641ed68
  0x00000214a64174fc: 458b 5cec 

  0x00000214a6417500: ;   {metadata('java/util/ArrayList')}
  0x00000214a6417500: 0841 81fb | 38e9 1f00 | 0f85 0e60 | 0000 498d | 14ec 4c8b 

  0x00000214a6417514: ;   {optimized virtual_call}
  0x00000214a6417514: c066 90e8 

  0x00000214a6417518: ; ImmutableOopMap {[48]=Oop [104]=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1055 (line 306)
  0x00000214a6417518: 4475 8fff 

  0x00000214a641751c: ;   {post_call_nop}
  0x00000214a641751c: 0f1f 8400 | 144c 00b5 | 4c8b 5424 | 3041 8b6a 

  0x00000214a641752c: ;   {section_word}
  0x00000214a641752c: 5cc5 fb10 | 057b cbff 

  0x00000214a6417534: ;   {static_call}
  0x00000214a6417534: ff66 90e8 

  0x00000214a6417538: ; ImmutableOopMap {rbp=NarrowOop [48]=Oop [104]=Oop }
                      ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@1066 (line 307)
  0x00000214a6417538: 247b 8fff 

  0x00000214a641753c: ;   {post_call_nop}
  0x00000214a641753c: 0f1f 8400 | 344c 00b6 

  0x00000214a6417544: ; implicit exception: dispatches to 0x00000214a641ed80
  0x00000214a6417544: 458b 54ec 

  0x00000214a6417548: ;   {metadata('java/util/ArrayList')}
  0x00000214a6417548: 0841 81fa | 38e9 1f00 | 0f85 2260 | 0000 498d | 14ec 4c8b 

  0x00000214a641755c: ;   {optimized virtual_call}
  0x00000214a641755c: c066 90e8 

  0x00000214a6417560: ; ImmutableOopMap {[48]=Oop [104]=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1069 (line 307)
  0x00000214a6417560: fc74 8fff 

  0x00000214a6417564: ;   {post_call_nop}
  0x00000214a6417564: 0f1f 8400 | 5c4c 00b7 | 448b 5c24 | 7441 ffc3 | 4183 fb02 | 7d38 c5fb | 104c 2438 | c5fb 105c 
  0x00000214a6417584: 2448 c5fb | 1054 2440 | c5fb 1064 | 2450 c5fb | 106c 2458 | c5fb 1074 | 2460 c5fb | 107c 2478 
  0x00000214a64175a4: c57b 1084 | 2480 0000 | 00e9 cb00 | 0000 448b | 9c24 9000 | 0000 41ff | c344 899c | 2490 0000 
  0x00000214a64175c4: 0041 83fb | 050f 8d3f | 2d00 00c5 | fb10 4c24 | 38c5 fb10 | 5c24 48c5 | fb10 5424 | 40c5 fb10 
  0x00000214a64175e4: 6424 50c5 | fb10 6c24 | 58c5 fb10 | 7424 604d | 8b97 c801 | 0000 4d8b | da49 83c3 | 1844 8b8c 
  0x00000214a6417604: 2490 0000 | 0041 c1e1 | 0444 2b8c | 2490 0000 | 00c5 c1ef | ffc4 c143 | 2af9 4d3b | 9fd8 0100 
  0x00000214a6417624: 000f 8350 | 4900 004d | 899f c801 | 0000 410f | 1883 c000 | 0000 49c7 | 0201 0000 | 0041 0f18 
  0x00000214a6417644: 8300 0100 

  0x00000214a6417648: ;   {metadata({type array bool})}
  0x00000214a6417648: 0041 c742 | 08f8 7516 | 0041 0f18 | 8340 0100 | 0041 c742 | 0c02 0000 | 0041 0f18 | 8380 0100 
  0x00000214a6417668: 0049 c742 | 1001 0000 | 004c 8954 | 2468 c553 | 5cc7 4533 | db4c 8b54 | 2468 470f | b654 1a10 
  0x00000214a6417688: 4489 5424 | 704d 8b97 | c801 0000 | 4d8b c249 | 81c0 1001 | 0000 4d3b | 87d8 0100 | 000f 8341 
  0x00000214a64176a8: 3f00 004d | 8987 c801 | 0000 410f | 1880 c000 | 0000 49c7 | 0201 0000 | 0049 8bfa | 4883 c710 
  0x00000214a64176c8: ;   {metadata('javafx/scene/shape/Polygon')}
  0x00000214a64176c8: 41c7 4208 | b8e4 2301 | 4589 620c | b920 0000 | 00c5 fd57 | c0e9 0d00 | 0000 c5fe | 7f07 c5fe 
  0x00000214a64176e8: 7f47 2048 | 83c7 4048 | 83e9 087d | ed48 83c1 | 047c 0cc5 | fe7f 0748 | 83c7 2048 | 83e9 0448 
  0x00000214a6417708: 83c1 047e | 1048 ffc9 | c5f9 d607 | 4883 c708 | 48ff c97d | f3c5 fb11 | 4c24 38c5 | fb11 5c24 
  0x00000214a6417728: 48c5 fb11 | 5424 40c5 | fb11 6424 | 50c5 fb11 | 6c24 58c5 | fb11 7424 | 60c5 fb11 | 7c24 78c5 
  0x00000214a6417748: 7b11 8424 | 8000 0000 | 4489 5c24 | 744c 8994 | 2488 0000 

  0x00000214a641775c: ;   {oop(a 'java/lang/Class'{0x000000070d4fdc08} = 'com/sun/javafx/scene/DirtyBits')}
  0x00000214a641775c: 0048 ba08 | dc4f 0d07 | 0000 0049 

  0x00000214a6417768: ;   {static_call}
  0x00000214a6417768: 8bea 90e8 

  0x00000214a641776c: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop }
                      ;*invokestatic allOf {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::<init>@12 (line 699)
                      ; - javafx.scene.shape.Shape::<init>@1 (line 174)
                      ; - javafx.scene.shape.Polygon::<init>@1 (line 96)
                      ; - Alastor$1::handle@653 (line 284)
  0x00000214a641776c: f078 8fff 

  0x00000214a6417770: ;   {post_call_nop}
  0x00000214a6417770: 0f1f 8400 | 684e 00b8 | 498b 8fc8 | 0100 004c | 8bd1 4983 | c220 4c8d | 5d1c 4180 | 7f48 000f 
  0x00000214a6417790: 858b 8c00 | 004c 8bc8 | 49c1 e903 | 4589 0b4d | 8bc3 4c33 | c049 c1e8 | 150f 8428 | 0000 0048 
  0x00000214a64177b0: 83f8 000f | 841e 0000 | 004d 8bc3 | 49c1 e809 | 49b9 00c0 | 6caa 1402 | 0000 4d03 | c141 8038 
  0x00000214a64177d0: 020f 85c5 | 8c00 004d | 3b97 d801 | 0000 0f83 | b13e 0000 | 4d89 97c8 | 0100 0041 | 0f18 82c0 
  0x00000214a64177f0: 0000 0048 | c701 0100 

  0x00000214a64177f8: ;   {metadata('com/sun/javafx/geom/RectBounds')}
  0x00000214a64177f8: 0000 c741 | 0818 ef01 | 0144 8961 | 0c41 ba00 | 0080 bf4c | 8951 104c | 8951 1849 | 8b9f c801 
  0x00000214a6417818: 0000 4c8b | d349 83c2 | 2048 8bbc | 2488 0000 | 004c 8d47 | 2041 807f | 4800 0f85 | cf8c 0000 
  0x00000214a6417838: 4c8b d949 | c1eb 0345 | 8918 4d8b | c84c 33c9 | 49c1 e915 | 0f84 1e00 | 0000 4d8b | c849 c1e9 
  0x00000214a6417858: 0949 bb00 | c06c aa14 | 0200 004d | 03cb 4180 | 3902 0f85 | 098d 0000 | 4d3b 97d8 | 0100 000f 
  0x00000214a6417878: 83cb 3d00 | 004d 8997 | c801 0000 | 410f 1882 | c000 0000 | 48c7 0301 

  0x00000214a6417890: ;   {metadata('com/sun/javafx/geom/RectBounds')}
  0x00000214a6417890: 0000 00c7 | 4308 18ef | 0101 4489 | 630c 41ba | 0000 80bf | 4c89 5310 | 4c89 5318 | 498b 87c8 
  0x00000214a64178b0: 0100 004c | 8b94 2488 | 0000 0045 | 8862 0c4c | 8bd0 4983 | c230 488b | 8c24 8800 | 0000 4c8d 
  0x00000214a64178d0: 5924 4180 | 7f48 000f | 85fd 8c00 | 004c 8bcb | 49c1 e903 | 4589 0b4d | 8bc3 4c33 | c349 c1e8 
  0x00000214a64178f0: 150f 841e | 0000 004d | 8bc3 49c1 | e809 49b9 | 00c0 6caa | 1402 0000 | 4d03 c141 | 8038 020f 
  0x00000214a6417910: 8541 8d00 | 0048 8bd9 | 4833 c94c | 8d5b 3041 | 807f 4800 | 0f85 a18d | 0000 4189 | 0b4d 3b97 
  0x00000214a6417930: d801 0000 | 0f83 823d | 0000 4d89 | 97c8 0100 | 0041 0f18 | 82c0 0000 | 0048 c700 | 0100 0000 
  0x00000214a6417950: ;   {metadata('javafx/scene/Node$ReadOnlyObjectWrapperManualFire')}
  0x00000214a6417950: c740 0808 | b30a 014c | 8960 104c | 8960 1844 | 8960 2044 | 8960 28c7 | 400c 0100 

  0x00000214a641796c: ;   {oop(""{0x00000007ffe027c8})}
  0x00000214a641796c: 0000 c740 | 24f9 04fc | ff4c 8b94 | 2488 0000 | 004d 8bda | 49c1 eb03 | 4489 9c24 | 9400 0000 
  0x00000214a641798c: 4489 582c | 498b afc8 | 0100 004c | 8bd5 4983 | c228 488b | 8c24 8800 | 0000 4c8d | 4134 4180 
  0x00000214a64179ac: 7f48 000f | 8592 8d00 | 004c 8bd8 | 49c1 eb03 | 4589 184d | 8bc8 4c33 | c849 c1e9 | 150f 841e 
  0x00000214a64179cc: 0000 004d | 8bc8 49c1 | e909 49bb | 00c0 6caa | 1402 0000 | 4d03 cb41 | 8039 020f | 85cc 8d00 
  0x00000214a64179ec: 004d 3b97 | d801 0000 | 0f83 e33c | 0000 4d89 | 97c8 0100 | 0041 0f18 | 82c0 0000 | 0048 c745 
  0x00000214a6417a0c: 0001 0000 

  0x00000214a6417a10: ;   {metadata('javafx/scene/Node$4')}
  0x00000214a6417a10: 00c7 4508 | 10b8 0a01 | 4489 650c | 4c89 6510 | 4c89 6518 | 4489 6520 | 448b 9c24 | 9400 0000 
  0x00000214a6417a30: 4489 5d24 | 498b 87c8 | 0100 004c | 8bd0 4983 | c218 4d3b | 97d8 0100 | 000f 831d | 3c00 004d 
  0x00000214a6417a50: 8997 c801 | 0000 410f | 1882 c000 | 0000 48c7 | 0001 0000 

  0x00000214a6417a64: ;   {metadata('java/util/ArrayList')}
  0x00000214a6417a64: 00c7 4008 | 38e9 1f00 | 4c89 600c 

  0x00000214a6417a70: ;   {oop(a 'java/lang/Object'[0] {0x000000070d20a2b8})}
  0x00000214a6417a70: c740 1457 | 14a4 e14c | 8d55 184c | 8bc0 49c1 | e803 4589 | 024d 8bda | 4c33 d849 | c1eb 150f 
  0x00000214a6417a90: 841e 0000 | 004d 8bda | 49c1 eb09 | 49b8 00c0 | 6caa 1402 | 0000 4d03 | d841 803b | 020f 8567 
  0x00000214a6417ab0: 8d00 0049 | ba74 d934 | bdf9 7f00 | 0045 8b1a | 4585 db0f | 8557 5500 | 004d 8b87 | c801 0000 
  0x00000214a6417ad0: 4d8b d049 | 83c2 104d | 3b97 d801 | 0000 0f83 | 203c 0000 | 4d89 97c8 | 0100 0041 | 0f18 82c0 
  0x00000214a6417af0: 0000 0049 | c700 0100 

  0x00000214a6417af8: ;   {metadata('com/sun/javafx/collections/TrackableObservableList$$Lambda+0x00000214b60ac120')}
  0x00000214a6417af8: 0000 41c7 | 4008 20c1 | 0a01 4c8b | dd49 c1eb | 0345 8958 | 0c33 d24c | 8b94 2488 | 0000 004c 
  0x00000214a6417b18: 8954 2420 

  0x00000214a6417b1c: ;   {static_call}
  0x00000214a6417b1c: 6666 90e8 

  0x00000214a6417b20: ; ImmutableOopMap {rbp=Oop [32]=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop }
                      ;*invokestatic addListener {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.collections.ObservableListBase::addListener@6 (line 233)
                      ; - com.sun.javafx.collections.TrackableObservableList::<init>@18 (line 43)
                      ; - javafx.scene.Node$4::<init>@6 (line 1301)
                      ; - javafx.scene.Node::<init>@84 (line 1301)
                      ; - javafx.scene.shape.Shape::<init>@1 (line 174)
                      ; - javafx.scene.shape.Polygon::<init>@1 (line 96)
                      ; - Alastor$1::handle@653 (line 284)
  0x00000214a6417b20: 3c75 8fff 

  0x00000214a6417b24: ;   {post_call_nop}
  0x00000214a6417b24: 0f1f 8400 | 1c52 00b9 | 4c8d 4510 | 4180 7f48 | 000f 8536 | 8d00 004c | 8bc8 49c1 | e903 4589 
  0x00000214a6417b44: 0849 8bc8 | 4833 c848 | c1e9 150f | 8427 0000 | 0048 83f8 | 000f 841d | 0000 0049 | 8bc8 48c1 
  0x00000214a6417b64: e909 49b9 | 00c0 6caa | 1402 0000 | 4903 c980 | 3902 0f85 | 718d 0000 | 498b 8fc8 | 0100 004c 
  0x00000214a6417b84: 8b44 2420 | 41c6 400d | 014c 8bc1 | 4983 c020 | 488b 5c24 | 204c 8d4b | 3c41 807f | 4800 0f85 
  0x00000214a6417ba4: ab8d 0000 | 4c8b d549 | c1ea 0345 | 8911 4d8b | d94c 33dd | 49c1 eb15 | 0f84 1e00 | 0000 4d8b 
  0x00000214a6417bc4: d949 c1eb | 0949 ba00 | c06c aa14 | 0200 004d | 03da 4180 | 3b02 0f85 | e58d 0000 | 4d3b 87d8 
  0x00000214a6417be4: 0100 000f | 83af 3b00 | 004d 8987 | c801 0000 | 410f 1880 | c000 0000 | 48c7 0101 

  0x00000214a6417c00: ;   {metadata('javafx/scene/Node$13')}
  0x00000214a6417c00: 0000 00c7 | 4108 e8b8 | 0301 4489 | 610c 4c89 | 6110 4489 | 611c 448b | 9c24 9400 | 0000 4489 
  0x00000214a6417c20: 5918 488b | d14d 8b97 | c801 0000 | 4c8b 9c24 | 8800 0000 | 41c6 430e | 014d 8bda | 4983 c320 
  0x00000214a6417c40: 488b 9c24 | 8800 0000 

  0x00000214a6417c48: ;   {oop(a 'com/sun/javafx/geom/transform/Identity'{0x000000070d218c20})}
  0x00000214a6417c48: bf84 31a4 | e14c 8d43 | 7041 807f | 4800 0f85 | d48d 0000 | 4189 3844 | 8bcf 49c1 | e103 498b 
  0x00000214a6417c68: c849 33c9 | 48c1 e915 | 0f84 2700 | 0000 4983 | f900 0f84 | 1d00 0000 | 498b c848 | c1e9 0949 
  0x00000214a6417c88: b900 c06c | aa14 0200 | 0049 03c9 | 8039 020f | 8519 8e00 | 004c 8d43 | 6c41 807f | 4800 0f85 
  0x00000214a6417ca8: 7a8e 0000 | 4c8b ca49 | c1e9 0345 | 8908 498b | c848 33ca | 48c1 e915 | 0f84 1d00 | 0000 498b 
  0x00000214a6417cc8: c848 c1e9 | 0949 b900 | c06c aa14 | 0200 0049 | 03c9 8039 | 020f 85bf | 8e00 004d | 3b9f d801 
  0x00000214a6417ce8: 0000 0f83 | 153b 0000 | 4d89 9fc8 | 0100 0041 | 0f18 83c0 | 0000 0049 | c702 0100 

  0x00000214a6417d04: ;   {metadata('com/sun/javafx/geom/RectBounds')}
  0x00000214a6417d04: 0000 41c7 | 4208 18ef | 0101 4589 | 620c 41bb | 0000 80bf | 4d89 5a10 | 4d89 5a18 | 498b ca49 
  0x00000214a6417d24: 8b9f c801 | 0000 4c8b | d349 83c2 | 2048 8bbc | 2488 0000 | 004c 8d5f | 7441 807f | 4800 0f85 
  0x00000214a6417d44: c08e 0000 | 4c8b c149 | c1e8 0345 | 8903 4d8b | cb4c 33c9 | 49c1 e915 | 0f84 1e00 | 0000 4d8b 
  0x00000214a6417d64: cb49 c1e9 | 0949 b800 | c06c aa14 | 0200 004d | 03c8 4180 | 3902 0f85 | fa8e 0000 | 4d3b 97d8 
  0x00000214a6417d84: 0100 000f | 83c7 3900 | 004d 8997 | c801 0000 | 410f 1882 | c000 0000 | 48c7 0301 

  0x00000214a6417da0: ;   {metadata('com/sun/javafx/geom/RectBounds')}
  0x00000214a6417da0: 0000 00c7 | 4308 18ef | 0101 4489 | 630c 41ba | 0000 80bf | 4c89 5310 | 4c89 5318 | 4d8b 97c8 
  0x00000214a6417dc0: 0100 004c | 8b9c 2488 | 0000 0045 | 8863 1349 | 8bfa 4883 | c720 41c6 | 4312 0141 | c643 1001 
  0x00000214a6417de0: 41c6 4311 | 0148 8b8c | 2488 0000 | 004c 8d41 | 7841 807f | 4800 0f85 | df8e 0000 | 4c8b db49 
  0x00000214a6417e00: c1eb 0345 | 8918 4d8b | c84c 33cb | 49c1 e915 | 0f84 1e00 | 0000 4d8b | c849 c1e9 | 0949 bb00 
  0x00000214a6417e20: c06c aa14 | 0200 004d | 03cb 4180 | 3902 0f85 | 238f 0000 | 4833 db4c | 8d59 7c41 | 807f 4800 
  0x00000214a6417e40: 0f85 868f | 0000 4189 | 1b49 3bbf | d801 0000 | 0f83 2239 | 0000 4989 | bfc8 0100 | 000f 1887 
  0x00000214a6417e60: c000 0000 | 49c7 0201 

  0x00000214a6417e68: ;   {metadata('javafx/scene/Node$17')}
  0x00000214a6417e68: 0000 0041 | c742 0800 | 9003 014d | 8962 0c45 | 8962 1c44 | 8b9c 2494 | 0000 0045 | 895a 1445 
  0x00000214a6417e88: 895a 1849 | 8bca 498b | 9fc8 0100 | 004c 8bd3 | 4983 c218 | 488b bc24 | 8800 0000 | 4c8d 9f9c 
  0x00000214a6417ea8: 0000 0041 | 807f 4800 | 0f85 888f | 0000 4c8b | c149 c1e8 | 0345 8903 | 4d8b cb4c | 33c9 49c1 
  0x00000214a6417ec8: e915 0f84 | 1e00 0000 | 4d8b cb49 | c1e9 0949 | b800 c06c | aa14 0200 | 004d 03c8 | 4180 3902 
  0x00000214a6417ee8: 0f85 c28f | 0000 4d3b | 97d8 0100 | 000f 8335 | 3800 004d | 8997 c801 | 0000 410f | 1882 c000 
  0x00000214a6417f08: 0000 48c7 | 0301 0000 

  0x00000214a6417f10: ;   {metadata('javafx/scene/Node$18')}
  0x00000214a6417f10: 00c7 4308 | 2094 0301 | 4c89 630c | 448b 9424 | 9400 0000 | 4489 5314 | 498b 87c8 | 0100 004c 
  0x00000214a6417f30: 8bd0 4983 | c220 488b | 8c24 8800 | 0000 4c8d | 99a0 0000 | 0041 807f | 4800 0f85 | c18f 0000 
  0x00000214a6417f50: 4c8b c349 | c1e8 0345 | 8903 4d8b | cb4c 33cb | 49c1 e915 | 0f84 1e00 | 0000 4d8b | cb49 c1e9 
  0x00000214a6417f70: 0949 b800 | c06c aa14 | 0200 004d | 03c8 4180 | 3902 0f85 | fb8f 0000 | 4d3b 97d8 | 0100 000f 
  0x00000214a6417f90: 834f 3800 | 004d 8997 | c801 0000 | 410f 1882 | c000 0000 | 48c7 0001 

  0x00000214a6417fa8: ;   {metadata('javafx/scene/Node$FocusWithinProperty')}
  0x00000214a6417fa8: 0000 00c7 | 4008 182c | 0801 4489 | 600c 4c89 | 6010 4c89 | 6018 448b | 9c24 9400 | 0000 4489 
  0x00000214a6417fc8: 5814 498b | 97c8 0100 | 004c 8b94 | 2488 0000 | 0045 8862 | 1548 8bda | 4883 c318 | 41c6 4214 
  0x00000214a6417fe8: 0148 8b8c | 2488 0000 | 004c 8d99 | a400 0000 | 4180 7f48 | 000f 85eb | 8f00 004c | 8bc0 49c1 
  0x00000214a6418008: e803 4589 | 034d 8bcb | 4c33 c849 | c1e9 150f | 841e 0000 | 004d 8bcb | 49c1 e909 | 49b8 00c0 
  0x00000214a6418028: 6caa 1402 | 0000 4d03 | c841 8039 | 020f 8543 | 9000 004d | 33c9 4c8d | 99b4 0000 | 0041 807f 
  0x00000214a6418048: 4800 0f85 | ad90 0000 

  0x00000214a6418050: ;   {oop(a 'com/sun/javafx/scene/CssFlags'{0x000000070d4ff780})}
  0x00000214a6418050: 4589 0b41 | b9f0 fea9 | e14c 8d91 | c400 0000 | 4180 7f48 | 000f 8518 | 9100 0045 | 890a 458b 
  0x00000214a6418070: d949 c1e3 | 0349 8bfa | 4933 fb48 | c1ef 150f | 8427 0000 | 0049 83fb | 000f 841d | 0000 0049 
  0x00000214a6418090: 8bfa 48c1 | ef09 49bb | 00c0 6caa | 1402 0000 | 4903 fb80 | 3f02 0f85 | 4991 0000 | 493b 9fd8 
  0x00000214a64180b0: 0100 000f | 8307 3700 | 0049 899f | c801 0000 | 0f18 83c0 | 0000 0048 | c702 0100 

  0x00000214a64180cc: ;   {metadata('com/sun/javafx/css/PseudoClassState')}
  0x00000214a64180cc: 0000 c742 | 08d8 d609 | 014c 8962 

  0x00000214a64180d8: ;   {oop([J{0x000000070d4ff7c8})}
  0x00000214a64180d8: 10c7 420c | f9fe a9e1 | 4c8b 8c24 | 8800 0000 | 4d8d 81c8 | 0000 0041 | 807f 4800 | 0f85 5a91 
  0x00000214a64180f8: 0000 4c8b | da49 c1eb | 0345 8918 | 4d8b d04c | 33d2 49c1 | ea15 0f84 | 1e00 0000 | 4d8b d049 
  0x00000214a6418118: c1ea 0949 | bb00 c06c | aa14 0200 | 004d 03d3 | 4180 3a02 | 0f85 9491 | 0000 4d8b | d149 8bea 
  0x00000214a6418138: ;   {static_call}
  0x00000214a6418138: 6666 90e8 

  0x00000214a641813c: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop }
                      ;*invokestatic unmodifiableObservableSet {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::<init>@240 (line 9800)
                      ; - javafx.scene.shape.Shape::<init>@1 (line 174)
                      ; - javafx.scene.shape.Polygon::<init>@1 (line 96)
                      ; - Alastor$1::handle@653 (line 284)
  0x00000214a641813c: 206f 8fff 

  0x00000214a6418140: ;   {post_call_nop}
  0x00000214a6418140: 0f1f 8400 | 3858 00ba | 4c8b d541 | c642 1601 | 4c8d 85cc | 0000 0041 | 807f 4800 | 0f85 cf91 
  0x00000214a6418160: 0000 4c8b | c849 c1e9 | 0345 8908 | 4d8b d04c | 33d0 49c1 | ea15 0f84 | 2800 0000 | 4883 f800 
  0x00000214a6418180: 0f84 1e00 | 0000 4d8b | d049 c1ea | 0949 b900 | c06c aa14 | 0200 004d | 03d1 4180 | 3a02 0f85 
  0x00000214a64181a0: ff91 0000 | 498b afc8 | 0100 004c | 8bd5 4983 | c218 488b | 8c24 8800 

  0x00000214a64181b8: ;   {oop(a 'com/sun/javafx/sg/prism/NGShape$Mode'{0x000000070d500ab0})}
  0x00000214a64181b8: 0000 bf56 | 01aa e14c | 8d81 e000 | 0000 4180 | 7f48 000f | 8533 9200 | 0041 8938 | 448b cf49 
  0x00000214a64181d8: c1e1 034d | 8bd8 4d33 | d949 c1eb | 150f 8428 | 0000 0049 | 83f9 000f | 841e 0000 | 004d 8bd8 
  0x00000214a64181f8: 49c1 eb09 | 49b9 00c0 | 6caa 1402 | 0000 4d03 | d941 803b | 020f 8563 | 9200 004d | 3b97 d801 
  0x00000214a6418218: 0000 0f83 | 0c36 0000 | 4d89 97c8 | 0100 0041 | 0f18 82c0 | 0000 0048 | c745 0001 

  0x00000214a6418234: ;   {metadata('javafx/scene/shape/Shape$3')}
  0x00000214a6418234: 0000 00c7 | 4508 7067 | 0a01 4489 | 650c 4c89 | 6510 448b | 9424 9400 | 0000 4489 | 5510 4d8b 
  0x00000214a6418254: 9fc8 0100 | 004d 8bd3 | 4983 c210 | 4d3b 97d8 | 0100 000f | 83e3 3500 | 004d 8997 | c801 0000 
  0x00000214a6418274: 410f 1882 | c000 0000 | 49c7 0301 

  0x00000214a6418280: ;   {metadata('javafx/beans/WeakInvalidationListener')}
  0x00000214a6418280: 0000 0041 | c743 0810 | d10a 0145 | 8963 0c4c | 895c 2420 | 498b 87c8 | 0100 004c | 8bd0 4983 
  0x00000214a64182a0: c220 4d3b | 97d8 0100 | 000f 83cd | 3500 004d | 8997 c801 | 0000 410f | 1882 c000 | 0000 48c7 
  0x00000214a64182c0: 0001 0000 

  0x00000214a64182c4: ;   {metadata('java/lang/ref/WeakReference')}
  0x00000214a64182c4: 00c7 4008 | 10af 1900 | 4c89 6010 | 4c89 6018 | 4c8b d549 | c1ea 0344 

  0x00000214a64182dc: ;   {oop(a 'java/lang/ref/ReferenceQueue$Null'{0x000000070d20a288})}
  0x00000214a64182dc: 8950 0c41 | b951 14a4 | e14c 8d50 | 1041 807f | 4800 0f85 | e391 0000 | 4589 0a45 | 8bd9 49c1 
  0x00000214a64182fc: e303 4d8b | c24d 33c3 | 49c1 e815 | 0f84 2800 | 0000 4983 | fb00 0f84 | 1e00 0000 | 4d8b c249 
  0x00000214a641831c: c1e8 0949 | bb00 c06c | aa14 0200 | 004d 03c3 | 4180 3802 | 0f85 3192 | 0000 f083 | 4424 c000 
  0x00000214a641833c: 4c8b 4c24 | 204d 8d51 | 0c41 807f | 4800 0f85 | 9692 0000 | 4c8b d849 | c1eb 0345 | 891a 4d8b 
  0x00000214a641835c: c24c 33c0 | 49c1 e815 | 0f84 1e00 | 0000 4d8b | c249 c1e8 | 0949 bb00 | c06c aa14 | 0200 004d 
  0x00000214a641837c: 03c3 4180 | 3802 0f85 | ee92 0000 | 4d8b d94c | 8d55 0c41 | 807f 4800 | 0f85 5b93 | 0000 498b 
  0x00000214a641839c: d348 c1ea | 0341 8912 | 498b fa49 | 33fb 48c1 | ef15 0f84 | 1d00 0000 | 498b fa48 | c1ef 0948 
  0x00000214a64183bc: ba00 c06c | aa14 0200 | 0048 03fa | 803f 020f | 8596 9300 | 004c 8b94 | 2488 0000 | 0041 c642 
  0x00000214a64183dc: ;   {no_reloc}
  0x00000214a64183dc: 1701 4c8b | 9c24 8800 | 0000 498d | 9bf0 0000 | 0041 807f | 4800 0f85 | ce93 0000 | 4c8b d549 
  0x00000214a64183fc: c1ea 0344 | 8913 488b | cb48 33cd | 48c1 e915 | 0f84 1d00 | 0000 488b | cb48 c1e9 | 0949 ba00 
  0x00000214a641841c: c06c aa14 | 0200 0049 | 03ca 8039 | 020f 85eb | 9300 0049 | 8baf c801 | 0000 4c8b | d549 83c2 
  0x00000214a641843c: 384d 3b97 | d801 0000 | 0f83 4f34 | 0000 4d89 | 97c8 0100 | 0041 0f18 | 82c0 0000 | 0048 c745 
  0x00000214a641845c: 0001 0000 

  0x00000214a6418460: ;   {metadata('com/sun/javafx/geom/Path2D')}
  0x00000214a6418460: 00c7 4508 | f814 0101 | 4489 650c | 4c89 6518 | 4c89 6520 | 4c89 6528 | 4c89 6530 | 49ba 0000 
  0x00000214a6418480: 0000 0100 | 0000 4c89 | 5510 498b | 8fc8 0100 | 004c 8bd1 | 4983 c228 | 4d3b 97d8 | 0100 000f 
  0x00000214a64184a0: 831b 3400 | 004d 8997 | c801 0000 | 410f 1882 | c000 0000 | 48c7 0101 | 0000 0041 | 0f18 8200 
  0x00000214a64184c0: ;   {metadata({type array byte})}
  0x00000214a64184c0: 0100 00c7 | 4108 187e | 1600 410f | 1882 4001 | 0000 c741 | 0c14 0000 | 0041 0f18 | 8280 0100 
  0x00000214a64184e0: 004c 8961 | 104c 8961 | 184c 8961 | 2049 8b9f | c801 0000 | 4c8b d349 | 81c2 b000 | 0000 4c8d 
  0x00000214a6418500: 4530 4c8b | c949 c1e9 | 0345 8908 | 4d8b d84c | 33d9 49c1 | eb15 0f84 | 1e00 0000 | 4d8b d849 
  0x00000214a6418520: c1eb 0949 | b900 c06c | aa14 0200 | 004d 03d9 | 4180 3b02 | 0f85 3293 | 0000 4d3b | 97d8 0100 
  0x00000214a6418540: 000f 83a9 | 3300 004d | 8997 c801 | 0000 410f | 1882 c000 | 0000 48c7 | 0301 0000 | 0041 0f18 
  0x00000214a6418560: 8200 0100 

  0x00000214a6418564: ;   {metadata({type array float})}
  0x00000214a6418564: 00c7 4308 | 087a 1600 | 410f 1882 | 4001 0000 | c743 0c28 | 0000 0041 | 0f18 8280 | 0100 0048 
  0x00000214a6418584: 8bfb 4883 | c710 b914 | 0000 00c5 | fd57 c0e9 | 0d00 0000 | c5fe 7f07 | c5fe 7f47 | 2048 83c7 
  0x00000214a64185a4: 4048 83e9 | 087d ed48 | 83c1 047c | 0cc5 fe7f | 0748 83c7 | 2048 83e9 | 0448 83c1 | 047e 1048 
  0x00000214a64185c4: ffc9 c5f9 | d607 4883 | c708 48ff | c97d f34c | 8d45 344c | 8bdb 49c1 | eb03 4589 | 184d 8bd0 
  0x00000214a64185e4: 4c33 d349 | c1ea 150f | 841e 0000 | 004d 8bd0 | 49c1 ea09 | 49bb 00c0 | 6caa 1402 | 0000 4d03 
  0x00000214a6418604: d341 803a | 020f 85be | 9200 004c | 8b8c 2488 | 0000 004d | 8d81 0401 | 0000 4180 | 7f48 000f 
  0x00000214a6418624: 85fb 9200 | 004c 8bdd | 49c1 eb03 | 4589 184d | 8bd0 4c33 | d549 c1ea | 150f 841e | 0000 004d 
  0x00000214a6418644: 8bd0 49c1 | ea09 49bb | 00c0 6caa | 1402 0000 | 4d03 d341 | 803a 020f | 852b 9300 | 0049 8bd1 
  0x00000214a6418664: ;   {no_reloc}
  0x00000214a6418664: 6666 90e8 

  0x00000214a6418668: ; ImmutableOopMap {[48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop }
                      ;*invokestatic initHelper {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.scene.shape.Polygon::<init>@16 (line 90)
                      ; - Alastor$1::handle@653 (line 284)
  0x00000214a6418668: f469 8fff 

  0x00000214a641866c: ;   {post_call_nop}
  0x00000214a641866c: 0f1f 8400 | 645d 00bb | 498b afc8 | 0100 004c | 8bd5 4983 | c228 4d3b | 97d8 0100 | 000f 83ba 
  0x00000214a641868c: 3200 004d | 8997 c801 | 0000 410f | 1882 c000 | 0000 48c7 | 4500 0100 

  0x00000214a64186a4: ;   {metadata('javafx/scene/shape/Polygon$2')}
  0x00000214a64186a4: 0000 c745 | 0838 f423 | 0144 8965 | 0c4c 8965 | 104c 8965 | 184c 8965 | 2044 8b9c | 2494 0000 
  0x00000214a64186c4: 0044 895d | 2449 8b87 | c801 0000 | 4c8b d049 | 83c2 184d | 3b97 d801 | 0000 0f83 | 3c32 0000 
  0x00000214a64186e4: 4d89 97c8 | 0100 0041 | 0f18 82c0 | 0000 0048 | c700 0100 

  0x00000214a64186f8: ;   {metadata('java/util/ArrayList')}
  0x00000214a64186f8: 0000 c740 | 0838 e91f | 004c 8960 

  0x00000214a6418704: ;   {oop(a 'java/lang/Object'[0] {0x000000070d20a2b8})}
  0x00000214a6418704: 0cc7 4014 | 5714 a4e1 | 4c8d 5d18 | 4c8b c049 | c1e8 0345 | 8903 4d8b | d34c 33d0 | 49c1 ea15 
  0x00000214a6418724: 0f84 1e00 | 0000 4d8b | d349 c1ea | 0949 b800 | c06c aa14 | 0200 004d | 03d0 4180 | 3a02 0f85 
  0x00000214a6418744: a592 0000 | 49ba 74d9 | 34bd f97f | 0000 458b | 1a45 85db | 0f85 3a49 | 0000 4d8b | 87c8 0100 
  0x00000214a6418764: 004d 8bd0 | 4983 c210 | 4d3b 97d8 | 0100 000f | 83f7 3100 | 004d 8997 | c801 0000 | 410f 1882 
  0x00000214a6418784: c000 0000 | 49c7 0001 

  0x00000214a641878c: ;   {metadata('com/sun/javafx/collections/TrackableObservableList$$Lambda+0x00000214b60ac120')}
  0x00000214a641878c: 0000 0041 | c740 0820 | c10a 014c | 8bdd 49c1 | eb03 4589 | 580c 33d2 | 4c8b 9424 | 8800 0000 
  0x00000214a64187ac: 4c89 5424 

  0x00000214a64187b0: ;   {static_call}
  0x00000214a64187b0: 2066 90e8 

  0x00000214a64187b4: ; ImmutableOopMap {rbp=Oop [32]=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop }
                      ;*invokestatic addListener {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.collections.ObservableListBase::addListener@6 (line 233)
                      ; - com.sun.javafx.collections.TrackableObservableList::<init>@18 (line 43)
                      ; - javafx.scene.shape.Polygon$2::<init>@6 (line 116)
                      ; - javafx.scene.shape.Polygon::<init>@25 (line 116)
                      ; - Alastor$1::handle@653 (line 284)
  0x00000214a64187b4: a868 8fff 

  0x00000214a64187b8: ;   {post_call_nop}
  0x00000214a64187b8: 0f1f 8400 | b05e 00bc | 4c8d 5510 | 4180 7f48 | 000f 8575 | 9200 0048 | 8bd8 48c1 | eb03 4189 
  0x00000214a64187d8: 1a49 8bca | 4833 c848 | c1e9 150f | 8427 0000 | 0048 83f8 | 000f 841d | 0000 0049 | 8bca 48c1 
  0x00000214a64187f8: e909 48bb | 00c0 6caa | 1402 0000 | 4803 cb80 | 3902 0f85 | ba92 0000 | 4c8b 5424 | 204d 8d8a 
  0x00000214a6418818: 0801 0000 | 4180 7f48 | 000f 8513 | 9300 004c | 8bc5 49c1 | e803 4589 | 014d 8bd9 | 4c33 dd49 
  0x00000214a6418838: c1eb 150f | 841e 0000 | 004d 8bd9 | 49c1 eb09 | 49b8 00c0 | 6caa 1402 | 0000 4d03 | d841 803b 
  0x00000214a6418858: 020f 8539 | 9300 004d | 8b9f c801 | 0000 4d8b | d349 81c2 | 2001 0000 | 4d3b 97d8 | 0100 000f 
  0x00000214a6418878: 831f 3100 | 004d 8997 | c801 0000 | 410f 1882 | c000 0000 | 49c7 0301 | 0000 0049 | 8bfb 4883 
  0x00000214a6418898: ;   {metadata('javafx/scene/shape/Rectangle')}
  0x00000214a6418898: c710 41c7 | 4308 00d0 | 0201 4589 | 630c b922 | 0000 00c5 | fd57 c0e9 | 0d00 0000 | c5fe 7f07 
  0x00000214a64188b8: c5fe 7f47 | 2048 83c7 | 4048 83e9 | 087d ed48 | 83c1 047c | 0cc5 fe7f | 0748 83c7 | 2048 83e9 
  0x00000214a64188d8: 0448 83c1 | 047e 1048 | ffc9 c5f9 | d607 4883 | c708 48ff | c97d f34c | 899c 2498 

  0x00000214a64188f4: ;   {oop(a 'java/lang/Class'{0x000000070d4fdc08} = 'com/sun/javafx/scene/DirtyBits')}
  0x00000214a64188f4: 0000 0048 | ba08 dc4f | 0d07 0000 | 0049 8beb 

  0x00000214a6418904: ;   {static_call}
  0x00000214a6418904: 6666 90e8 

  0x00000214a6418908: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop }
                      ;*invokestatic allOf {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::<init>@12 (line 699)
                      ; - javafx.scene.shape.Shape::<init>@1 (line 174)
                      ; - javafx.scene.shape.Rectangle::<init>@1 (line 126)
                      ; - Alastor$1::handle@668 (line 285)
  0x00000214a6418908: 5467 8fff 

  0x00000214a641890c: ;   {post_call_nop}
  0x00000214a641890c: 0f1f 8400 | 0460 00bd | 498b 8fc8 | 0100 004c | 8bd1 4983 | c220 4c8d | 4d1c 4180 | 7f48 000f 
  0x00000214a641892c: 85be 9200 | 004c 8bc0 | 49c1 e803 | 4589 014d | 8bd9 4c33 | d849 c1eb | 150f 8428 | 0000 0048 
  0x00000214a641894c: 83f8 000f | 841e 0000 | 004d 8bd9 | 49c1 eb09 | 49b8 00c0 | 6caa 1402 | 0000 4d03 | d841 803b 
  0x00000214a641896c: 020f 85f8 | 9200 004d | 3b97 d801 | 0000 0f83 | d530 0000 | 4d89 97c8 | 0100 0041 | 0f18 82c0 
  0x00000214a641898c: 0000 0048 | c701 0100 

  0x00000214a6418994: ;   {metadata('com/sun/javafx/geom/RectBounds')}
  0x00000214a6418994: 0000 c741 | 0818 ef01 | 0144 8961 | 0c41 ba00 | 0080 bf4c | 8951 104c | 8951 1849 | 8b9f c801 
  0x00000214a64189b4: 0000 4c8b | d349 83c2 | 2048 8bbc | 2498 0000 | 004c 8d4f | 2041 807f | 4800 0f85 | 0293 0000 
  0x00000214a64189d4: 4c8b c149 | c1e8 0345 | 8901 4d8b | d94c 33d9 | 49c1 eb15 | 0f84 1e00 | 0000 4d8b | d949 c1eb 
  0x00000214a64189f4: 0949 b800 | c06c aa14 | 0200 004d | 03d8 4180 | 3b02 0f85 | 3c93 0000 | 4d3b 97d8 | 0100 000f 
  0x00000214a6418a14: 83a7 2f00 | 004d 8997 | c801 0000 | 410f 1882 | c000 0000 | 48c7 0301 

  0x00000214a6418a2c: ;   {metadata('com/sun/javafx/geom/RectBounds')}
  0x00000214a6418a2c: 0000 00c7 | 4308 18ef | 0101 4489 | 630c 41ba | 0000 80bf | 4c89 5310 | 4c89 5318 | 488b fb49 
  0x00000214a6418a4c: 8b87 c801 | 0000 4c8b | 9424 9800 | 0000 4588 | 620c 4c8b | d049 83c2 | 3048 8b94 | 2498 0000 
  0x00000214a6418a6c: 004c 8d4a | 2441 807f | 4800 0f85 | 2d93 0000 | 488b cf48 | c1e9 0341 | 8909 498b | d948 33df 
  0x00000214a6418a8c: 48c1 eb15 | 0f84 1d00 | 0000 498b | d948 c1eb | 0948 b900 | c06c aa14 | 0200 0048 | 03d9 803b 
  0x00000214a6418aac: 020f 858d | 9300 0048 | 33db 4c8d | 4a30 4180 | 7f48 000f | 8502 9400 | 0041 8919 | 4d3b 97d8 
  0x00000214a6418acc: 0100 000f | 830f 2f00 | 004d 8997 | c801 0000 | 410f 1882 | c000 0000 | 48c7 0001 

  0x00000214a6418ae8: ;   {metadata('javafx/scene/Node$ReadOnlyObjectWrapperManualFire')}
  0x00000214a6418ae8: 0000 00c7 | 4008 08b3 | 0a01 4c89 | 6010 4c89 | 6018 4489 | 6020 4489 | 6028 c740 | 0c01 0000 
  0x00000214a6418b08: ;   {oop(""{0x00000007ffe027c8})}
  0x00000214a6418b08: 00c7 4024 | f904 fcff | 4c8b 9424 | 9800 0000 | 4d8b da49 | c1eb 0344 | 899c 24a0 | 0000 0044 
  0x00000214a6418b28: 8958 2c49 | 8baf c801 | 0000 4c8b | d549 83c2 | 2848 8b8c | 2498 0000 | 004c 8d49 | 3441 807f 
  0x00000214a6418b48: 4800 0f85 | e993 0000 | 4c8b c049 | c1e8 0345 | 8901 4d8b | d94c 33d8 | 49c1 eb15 | 0f84 1e00 
  0x00000214a6418b68: 0000 4d8b | d949 c1eb | 0949 b800 | c06c aa14 | 0200 004d | 03d8 4180 | 3b02 0f85 | 2394 0000 
  0x00000214a6418b88: 4d3b 97d8 | 0100 000f | 8370 2e00 | 004d 8997 | c801 0000 | 410f 1882 | c000 0000 | 48c7 4500 
  0x00000214a6418ba8: 0100 0000 

  0x00000214a6418bac: ;   {metadata('javafx/scene/Node$4')}
  0x00000214a6418bac: c745 0810 | b80a 0144 | 8965 0c4c | 8965 104c | 8965 1844 | 8965 2044 | 8b94 24a0 | 0000 0044 
  0x00000214a6418bcc: 8955 2449 | 8b87 c801 | 0000 4c8b | d049 83c2 | 184d 3b97 | d801 0000 | 0f83 422e | 0000 4d89 
  0x00000214a6418bec: 97c8 0100 | 0041 0f18 | 82c0 0000 | 0048 c700 | 0100 0000 

  0x00000214a6418c00: ;   {metadata('java/util/ArrayList')}
  0x00000214a6418c00: c740 0838 | e91f 004c 

  0x00000214a6418c08: ;   {oop(a 'java/lang/Object'[0] {0x000000070d20a2b8})}
  0x00000214a6418c08: 8960 0cc7 | 4014 5714 | a4e1 4c8d | 5d18 4c8b | d049 c1ea | 0345 8913 | 4d8b c34c | 33c0 49c1 
  0x00000214a6418c28: e815 0f84 | 1e00 0000 | 4d8b c349 | c1e8 0949 | ba00 c06c | aa14 0200 | 004d 03c2 | 4180 3802 
  0x00000214a6418c48: 0f85 be93 | 0000 49ba | 74d9 34bd | f97f 0000 | 458b 1a45 | 85db 0f85 | ac44 0000 | 4d8b 87c8 
  0x00000214a6418c68: 0100 004d | 8bd0 4983 | c210 4d3b | 97d8 0100 | 000f 83fd | 2d00 004d | 8997 c801 | 0000 410f 
  0x00000214a6418c88: 1882 c000 | 0000 49c7 | 0001 0000 

  0x00000214a6418c94: ;   {metadata('com/sun/javafx/collections/TrackableObservableList$$Lambda+0x00000214b60ac120')}
  0x00000214a6418c94: 0041 c740 | 0820 c10a | 014c 8bdd | 49c1 eb03 | 4589 580c | 33d2 4c8b | 9424 9800 | 0000 4c89 
  0x00000214a6418cb4: ;   {static_call}
  0x00000214a6418cb4: 5424 20e8 

  0x00000214a6418cb8: ; ImmutableOopMap {rbp=Oop [32]=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop }
                      ;*invokestatic addListener {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.collections.ObservableListBase::addListener@6 (line 233)
                      ; - com.sun.javafx.collections.TrackableObservableList::<init>@18 (line 43)
                      ; - javafx.scene.Node$4::<init>@6 (line 1301)
                      ; - javafx.scene.Node::<init>@84 (line 1301)
                      ; - javafx.scene.shape.Shape::<init>@1 (line 174)
                      ; - javafx.scene.shape.Rectangle::<init>@1 (line 126)
                      ; - Alastor$1::handle@668 (line 285)
  0x00000214a6418cb8: a463 8fff 

  0x00000214a6418cbc: ;   {post_call_nop}
  0x00000214a6418cbc: 0f1f 8400 | b463 00be | 4c8d 5d10 | 4180 7f48 | 000f 8590 | 9300 004c | 8bc0 49c1 | e803 4589 
  0x00000214a6418cdc: 034d 8bcb | 4c33 c849 | c1e9 150f | 8428 0000 | 0048 83f8 | 000f 841e | 0000 004d | 8bcb 49c1 
  0x00000214a6418cfc: e909 49b8 | 00c0 6caa | 1402 0000 | 4d03 c841 | 8039 020f | 85c0 9300 | 0049 8b8f | c801 0000 
  0x00000214a6418d1c: 4c8b 5c24 | 2041 c643 | 0d01 4c8b | d949 83c3 | 2048 8b5c | 2420 4c8d | 433c 4180 | 7f48 000f 
  0x00000214a6418d3c: 85f5 9300 | 004c 8bcd | 49c1 e903 | 4589 084d | 8bd0 4c33 | d549 c1ea | 150f 841e | 0000 004d 
  0x00000214a6418d5c: 8bd0 49c1 | ea09 49b9 | 00c0 6caa | 1402 0000 | 4d03 d141 | 803a 020f | 852f 9400 | 004d 3b9f 
  0x00000214a6418d7c: d801 0000 | 0f83 6a2d | 0000 4d89 | 9fc8 0100 | 0041 0f18 | 83c0 0000 | 0048 c701 | 0100 0000 
  0x00000214a6418d9c: ;   {metadata('javafx/scene/Node$13')}
  0x00000214a6418d9c: c741 08e8 | b803 0144 | 8961 0c4c | 8961 1044 | 8961 1c44 | 8b94 24a0 | 0000 0044 | 8951 1848 
  0x00000214a6418dbc: 8bd1 4d8b | 97c8 0100 | 004c 8b9c | 2498 0000 | 0041 c643 | 0e01 4d8b | da49 83c3 | 2048 8bb4 
  0x00000214a6418ddc: 2498 0000 | 0048 8d4e | 6c41 807f | 4800 0f85 | 2394 0000 | 488b fa48 | c1ef 0389 | 3948 8bd9 
  0x00000214a6418dfc: 4833 da48 | c1eb 150f | 841d 0000 | 0048 8bd9 | 48c1 eb09 | 48bf 00c0 | 6caa 1402 | 0000 4803 
  0x00000214a6418e1c: df80 3b02 | 0f85 8694 

  0x00000214a6418e24: ;   {oop(a 'com/sun/javafx/geom/transform/Identity'{0x000000070d218c20})}
  0x00000214a6418e24: 0000 ba84 | 31a4 e14c | 8d46 7041 | 807f 4800 | 0f85 f994 | 0000 4189 | 1044 8bca | 49c1 e103 
  0x00000214a6418e44: 498b c849 | 33c9 48c1 | e915 0f84 | 2700 0000 | 4983 f900 | 0f84 1d00 | 0000 498b | c848 c1e9 
  0x00000214a6418e64: 0949 b900 | c06c aa14 | 0200 0049 | 03c9 8039 | 020f 8534 | 9500 004d | 3b9f d801 | 0000 0f83 
  0x00000214a6418e84: 8c2c 0000 | 4d89 9fc8 | 0100 0041 | 0f18 83c0 | 0000 0049 | c702 0100 

  0x00000214a6418e9c: ;   {metadata('com/sun/javafx/geom/RectBounds')}
  0x00000214a6418e9c: 0000 41c7 | 4208 18ef | 0101 4589 | 620c 41bb | 0000 80bf | 4d89 5a10 | 4d89 5a18 | 498b ca49 
  0x00000214a6418ebc: 8b9f c801 | 0000 4c8b | d349 83c2 | 2048 8bbc | 2498 0000 | 004c 8d4f | 7441 807f | 4800 0f85 
  0x00000214a6418edc: 3595 0000 | 4c8b d949 | c1eb 0345 | 8919 4d8b | c14c 33c1 | 49c1 e815 | 0f84 1e00 | 0000 4d8b 
  0x00000214a6418efc: c149 c1e8 | 0949 bb00 | c06c aa14 | 0200 004d | 03c3 4180 | 3802 0f85 | 6f95 0000 | 4d3b 97d8 
  0x00000214a6418f1c: 0100 000f | 8313 2c00 | 004d 8997 | c801 0000 | 410f 1882 | c000 0000 | 48c7 0301 

  0x00000214a6418f38: ;   {metadata('com/sun/javafx/geom/RectBounds')}
  0x00000214a6418f38: 0000 00c7 | 4308 18ef | 0101 4489 | 630c 41ba | 0000 80bf | 4c89 5310 | 4c89 5318 | 488b f34d 
  0x00000214a6418f58: 8b97 c801 | 0000 4c8b | 9c24 9800 | 0000 4588 | 6313 498b | d248 83c2 | 2041 c643 | 1201 41c6 
  0x00000214a6418f78: 4310 0141 | c643 1101 | 488b bc24 | 9800 0000 | 488d 5f78 | 4180 7f48 | 000f 8551 | 9500 004c 
  0x00000214a6418f98: 8bde 49c1 | eb03 4489 | 1b4c 8bc3 | 4c33 c649 | c1e8 150f | 841e 0000 | 004c 8bc3 | 49c1 e809 
  0x00000214a6418fb8: 49bb 00c0 | 6caa 1402 | 0000 4d03 | c341 8038 | 020f 85a9 | 9500 0048 | 33db 488d | 4f7c 4180 
  0x00000214a6418fd8: 7f48 000f | 8520 9600 | 0089 1949 | 3b97 d801 | 0000 0f83 | 6c2b 0000 | 4989 97c8 | 0100 000f 
  0x00000214a6418ff8: 1882 c000 | 0000 49c7 | 0201 0000 

  0x00000214a6419004: ;   {metadata('javafx/scene/Node$17')}
  0x00000214a6419004: 0041 c742 | 0800 9003 | 014d 8962 | 0c45 8962 | 1c44 8b9c | 24a0 0000 | 0045 895a | 1445 895a 
  0x00000214a6419024: 1849 8bca | 498b 9fc8 | 0100 004c | 8bd3 4983 | c218 488b | bc24 9800 | 0000 4c8d | 879c 0000 
  0x00000214a6419044: 0041 807f | 4800 0f85 | 2396 0000 | 4c8b c949 | c1e9 0345 | 8908 4d8b | d84c 33d9 | 49c1 eb15 
  0x00000214a6419064: 0f84 1e00 | 0000 4d8b | d849 c1eb | 0949 b900 | c06c aa14 | 0200 004d | 03d9 4180 | 3b02 0f85 
  0x00000214a6419084: 5d96 0000 | 4d3b 97d8 | 0100 000f | 8337 2a00 | 004d 8997 | c801 0000 | 410f 1882 | c000 0000 
  0x00000214a64190a4: 48c7 0301 

  0x00000214a64190a8: ;   {metadata('javafx/scene/Node$18')}
  0x00000214a64190a8: 0000 00c7 | 4308 2094 | 0301 4c89 | 630c 448b | 9424 a000 | 0000 4489 | 5314 498b | 87c8 0100 
  0x00000214a64190c8: 004c 8bd0 | 4983 c220 | 488b 8c24 | 9800 0000 | 4c8d 89a0 | 0000 0041 | 807f 4800 | 0f85 5c96 
  0x00000214a64190e8: 0000 4c8b | c349 c1e8 | 0345 8901 | 4d8b d94c | 33db 49c1 | eb15 0f84 | 1e00 0000 | 4d8b d949 
  0x00000214a6419108: c1eb 0949 | b800 c06c | aa14 0200 | 004d 03d8 | 4180 3b02 | 0f85 9696 | 0000 4d3b | 97d8 0100 
  0x00000214a6419128: 000f 8351 | 2a00 004d | 8997 c801 | 0000 410f | 1882 c000 | 0000 48c7 | 0001 0000 

  0x00000214a6419144: ;   {metadata('javafx/scene/Node$FocusWithinProperty')}
  0x00000214a6419144: 00c7 4008 | 182c 0801 | 4489 600c | 4c89 6010 | 4c89 6018 | 448b 9c24 | a000 0000 | 4489 5814 
  0x00000214a6419164: 498b 97c8 | 0100 004c | 8b94 2498 | 0000 0045 | 8862 1548 | 8bfa 4883 | c718 41c6 | 4214 014c 
  0x00000214a6419184: 8bac 2498 

  0x00000214a6419188: ;   {oop(a 'com/sun/javafx/scene/CssFlags'{0x000000070d4ff780})}
  0x00000214a6419188: 0000 00b9 | f0fe a9e1 | 4d8d 85c4 | 0000 0041 | 807f 4800 | 0f85 8196 | 0000 4189 | 0844 8bd9 
  0x00000214a64191a8: 49c1 e303 | 4d8b d04d | 33d3 49c1 | ea15 0f84 | 2800 0000 | 4983 fb00 | 0f84 1e00 | 0000 4d8b 
  0x00000214a64191c8: d049 c1ea | 0949 bb00 | c06c aa14 | 0200 004d | 03d3 4180 | 3a02 0f85 | d996 0000 | 4d8b dd4d 
  0x00000214a64191e8: 33c0 4d8d | 93b4 0000 | 0041 807f | 4800 0f85 | 4a97 0000 | 4589 0249 | 8db3 a400 | 0000 4180 
  0x00000214a6419208: 7f48 000f | 85cf 9700 | 0048 8bd8 | 48c1 eb03 | 891e 4c8b | d64c 33d0 | 49c1 ea15 | 0f84 1e00 
  0x00000214a6419228: 0000 4c8b | d649 c1ea | 0948 bb00 | c06c aa14 | 0200 004c | 03d3 4180 | 3a02 0f85 | 1398 0000 
  0x00000214a6419248: 493b bfd8 | 0100 000f | 8353 2800 | 0049 89bf | c801 0000 | 0f18 87c0 | 0000 0048 | c702 0100 
  0x00000214a6419268: ;   {metadata('com/sun/javafx/css/PseudoClassState')}
  0x00000214a6419268: 0000 c742 | 08d8 d609 | 014c 8962 

  0x00000214a6419274: ;   {oop([J{0x000000070d4ff7c8})}
  0x00000214a6419274: 10c7 420c | f9fe a9e1 | 4c8b 8c24 | 9800 0000 | 4d8d 99c8 | 0000 0041 | 807f 4800 | 0f85 3098 
  0x00000214a6419294: 0000 4c8b | c249 c1e8 | 0345 8903 | 4d8b d34c | 33d2 49c1 | ea15 0f84 | 1e00 0000 | 4d8b d349 
  0x00000214a64192b4: c1ea 0949 | b800 c06c | aa14 0200 | 004d 03d0 | 4180 3a02 | 0f85 6a98 | 0000 498b 

  0x00000214a64192d0: ;   {static_call}
  0x00000214a64192d0: e966 90e8 

  0x00000214a64192d4: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop }
                      ;*invokestatic unmodifiableObservableSet {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::<init>@240 (line 9800)
                      ; - javafx.scene.shape.Shape::<init>@1 (line 174)
                      ; - javafx.scene.shape.Rectangle::<init>@1 (line 126)
                      ; - Alastor$1::handle@668 (line 285)
  0x00000214a64192d4: 885d 8fff 

  0x00000214a64192d8: ;   {post_call_nop}
  0x00000214a64192d8: 0f1f 8400 | d069 00bf | c645 1601 | 4c8d 95cc | 0000 0041 | 807f 4800 | 0f85 ad98 | 0000 4c8b 
  0x00000214a64192f8: c049 c1e8 | 0345 8902 | 4d8b da4c | 33d8 49c1 | eb15 0f84 | 2800 0000 | 4883 f800 | 0f84 1e00 
  0x00000214a6419318: 0000 4d8b | da49 c1eb | 0949 b800 | c06c aa14 | 0200 004d | 03d8 4180 | 3b02 0f85 | d398 0000 
  0x00000214a6419338: 498b 8fc8 | 0100 004c | 8bd1 4983 

  0x00000214a6419344: ;   {oop(a 'com/sun/javafx/sg/prism/NGShape$Mode'{0x000000070d500ab0})}
  0x00000214a6419344: c218 ba56 | 01aa e14c | 8d8d e000 | 0000 4180 | 7f48 000f | 8505 9900 | 0041 8911 | 448b da49 
  0x00000214a6419364: c1e3 034d | 8bc1 4d33 | c349 c1e8 | 150f 8428 | 0000 0049 | 83fb 000f | 841e 0000 | 004d 8bc1 
  0x00000214a6419384: 49c1 e809 | 49bb 00c0 | 6caa 1402 | 0000 4d03 | c341 8038 | 020f 853f | 9900 004d | 3b97 d801 
  0x00000214a64193a4: 0000 0f83 | f527 0000 | 4d89 97c8 | 0100 0041 | 0f18 82c0 | 0000 0048 | c701 0100 

  0x00000214a64193c0: ;   {metadata('javafx/scene/shape/Shape$3')}
  0x00000214a64193c0: 0000 c741 | 0870 670a | 0144 8961 | 0c4c 8961 | 1048 894c | 2420 448b | 9c24 a000 | 0000 4489 
  0x00000214a64193e0: 5910 4d8b | 9fc8 0100 | 004d 8bd3 | 4983 c210 | 4d3b 97d8 | 0100 000f | 83cb 2700 | 004d 8997 
  0x00000214a6419400: c801 0000 | 410f 1882 | c000 0000 | 49c7 0301 

  0x00000214a6419410: ;   {metadata('javafx/beans/WeakInvalidationListener')}
  0x00000214a6419410: 0000 0041 | c743 0810 | d10a 0145 | 8963 0c4c | 899c 24a8 | 0000 0049 | 8b87 c801 | 0000 4c8b 
  0x00000214a6419430: d049 83c2 | 204d 3b97 | d801 0000 | 0f83 aa27 | 0000 4d89 | 97c8 0100 | 0041 0f18 | 82c0 0000 
  0x00000214a6419450: 0048 c700 | 0100 0000 

  0x00000214a6419458: ;   {metadata('java/lang/ref/WeakReference')}
  0x00000214a6419458: c740 0810 | af19 004c | 8960 104c | 8960 184c | 8b54 2420 | 49c1 ea03 | 4489 500c 

  0x00000214a6419474: ;   {oop(a 'java/lang/ref/ReferenceQueue$Null'{0x000000070d20a288})}
  0x00000214a6419474: bb51 14a4 | e14c 8d48 | 1041 807f | 4800 0f85 | c198 0000 | 4189 1944 | 8bf3 49c1 | e603 4d8b 
  0x00000214a6419494: d14d 33d6 | 49c1 ea15 | 0f84 2800 | 0000 4983 | fe00 0f84 | 1e00 0000 | 4d8b d149 | c1ea 0949 
  0x00000214a64194b4: be00 c06c | aa14 0200 | 004d 03d6 | 4180 3a02 | 0f85 2399 | 0000 f083 | 4424 c000 | 4c8b 9424 
  0x00000214a64194d4: a800 0000 | 4d8d 420c | 4180 7f48 | 000f 85a3 | 9900 004c | 8bd8 49c1 | eb03 4589 | 1849 8bf8 
  0x00000214a64194f4: 4833 f848 | c1ef 150f | 841d 0000 | 0049 8bf8 | 48c1 ef09 | 49bb 00c0 | 6caa 1402 | 0000 4903 
  0x00000214a6419514: fb80 3f02 | 0f85 f299 | 0000 4c8b | 5424 204c | 8b9c 24a8 | 0000 0049 | 8d4a 0c41 | 807f 4800 
  0x00000214a6419534: 0f85 499a | 0000 498b | f348 c1ee | 0389 3148 | 8bd1 4933 | d348 c1ea | 150f 841d | 0000 0048 
  0x00000214a6419554: 8bd1 48c1 | ea09 48be | 00c0 6caa | 1402 0000 | 4803 d680 | 3a02 0f85 | 7a9a 0000 

  0x00000214a6419570: ;   {no_reloc}
  0x00000214a6419570: 4c8b 9424 | 9800 0000 | 4c8b 5c24 | 2049 8daa | f000 0000 | 4180 7f48 | 000f 85b0 | 9a00 004d 
  0x00000214a6419590: 8bc3 49c1 | e803 4489 | 4500 4c8b | ed4d 33eb | 49c1 ed15 | 0f84 1f00 | 0000 4c8b | ed49 c1ed 
  0x00000214a64195b0: 0949 b800 | c06c aa14 | 0200 004d | 03e8 4180 | 7d00 020f | 85e0 9a00 | 0041 c642 | 1701 498b 
  0x00000214a64195d0: 87c8 0100 | 004c 8bd0 | 4983 c228 | 4d3b 97d8 | 0100 000f | 8324 2600 | 004d 8997 | c801 0000 
  0x00000214a64195f0: 410f 1882 | c000 0000 | 48c7 0001 

  0x00000214a64195fc: ;   {metadata('com/sun/javafx/geom/RoundRectangle2D')}
  0x00000214a64195fc: 0000 00c7 | 4008 f817 | 0101 4489 | 600c 4c89 | 6010 4c89 | 6018 4c89 | 6020 4c8b | 8c24 9800 
  0x00000214a641961c: 0000 4d8d | 8104 0100 | 0041 807f | 4800 0f85 | dc9a 0000 | 4c8b d849 | c1eb 0345 | 8918 4d8b 
  0x00000214a641963c: d04c 33d0 | 49c1 ea15 | 0f84 1e00 | 0000 4d8b | d049 c1ea | 0949 bb00 | c06c aa14 | 0200 004d 
  0x00000214a641965c: 03d3 4180 | 3a02 0f85 | 169b 0000 

  0x00000214a6419668: ;   {static_call}
  0x00000214a6419668: 498b d1e8 

  0x00000214a641966c: ; ImmutableOopMap {[48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop }
                      ;*invokestatic initHelper {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.scene.shape.Rectangle::<init>@16 (line 112)
                      ; - Alastor$1::handle@668 (line 285)
  0x00000214a641966c: f059 8fff 

  0x00000214a6419670: ;   {post_call_nop}
  0x00000214a6419670: 0f1f 8400 | 686d 00c0 | 498b 8fc8 | 0100 004c | 8bd1 4983 | c228 4d3b | 97d8 0100 | 000f 83c2 
  0x00000214a6419690: 2500 004d | 8997 c801 | 0000 410f | 1882 c000 | 0000 48c7 | 0101 0000 

  0x00000214a64196a8: ;   {metadata('javafx/scene/shape/Rectangle$4')}
  0x00000214a64196a8: 00c7 4108 | d88f 1501 | 4c89 6110 | 4c89 6118 | 4c89 6120 | c741 0c01 | 0000 0044 | 8b9c 24a0 
  0x00000214a64196c8: 0000 0044 | 8959 2449 | 8b87 c801 | 0000 4c8b | d049 83c2 | 2848 8b9c | 2498 0000 | 004c 8d8b 
  0x00000214a64196e8: 1001 0000 | 4180 7f48 | 000f 85e8 | 9a00 004c | 8bc1 49c1 | e803 4589 | 014d 8bd9 | 4c33 d949 
  0x00000214a6419708: c1eb 150f | 841e 0000 | 004d 8bd9 | 49c1 eb09 | 49b8 00c0 | 6caa 1402 | 0000 4d03 | d841 803b 
  0x00000214a6419728: 020f 852c | 9b00 004d | 3b97 d801 | 0000 0f83 | f524 0000 | 4d89 97c8 | 0100 0041 | 0f18 82c0 
  0x00000214a6419748: 0000 0048 | c700 0100 

  0x00000214a6419750: ;   {metadata('javafx/scene/shape/Rectangle$5')}
  0x00000214a6419750: 0000 c740 | 0830 9a15 | 014c 8960 | 104c 8960 | 184c 8960 | 20c7 400c | 0100 0000 | 448b 9424 
  0x00000214a6419770: a000 0000 | 4489 5024 | 4c8b 9424 | 9800 0000 | 458b 9a10 | 0100 0049 | 8bd3 48c1 | e203 4c8b 
  0x00000214a6419790: 8c24 9800 | 0000 4d8d | 9914 0100 | 0041 807f | 4800 0f85 | 1e9b 0000 | 4c8b c049 | c1e8 0345 
  0x00000214a64197b0: 8903 4d8b | d34c 33d0 | 49c1 ea15 | 0f84 1e00 | 0000 4d8b | d349 c1ea | 0949 b800 | c06c aa14 
  0x00000214a64197d0: 0200 004d | 03d0 4180 | 3a02 0f85 | 589b 0000 

  0x00000214a64197e0: ;   {section_word}
  0x00000214a64197e0: c5fb 1005 | c0a8 ffff | 9048 b8c8 | e5d7 b414 

  0x00000214a64197f0: ;   {virtual_call}
  0x00000214a64197f0: 0200 00e8 

  0x00000214a64197f4: ; ImmutableOopMap {[48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop }
                      ;*invokevirtual set {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.scene.shape.Rectangle::setWidth@5 (line 264)
                      ; - javafx.scene.shape.Rectangle::<init>@45 (line 127)
                      ; - Alastor$1::handle@668 (line 285)
  0x00000214a64197f4: 6855 8fff 

  0x00000214a64197f8: ;   {post_call_nop}
  0x00000214a64197f8: 0f1f 8400 | f06e 00c1 | 4c8b 9424 | 9800 0000 | 458b 9214 | 0100 0049 | 8bd2 48c1 

  0x00000214a6419814: ;   {section_word}
  0x00000214a6419814: e203 c5fb | 1005 9aa8 | ffff 6666 | 9048 b8f0 | e5d7 b414 

  0x00000214a6419828: ;   {virtual_call}
  0x00000214a6419828: 0200 00e8 

  0x00000214a641982c: ; ImmutableOopMap {[48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop }
                      ;*invokevirtual set {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.scene.shape.Rectangle::setHeight@5 (line 301)
                      ; - javafx.scene.shape.Rectangle::<init>@50 (line 128)
                      ; - Alastor$1::handle@668 (line 285)
  0x00000214a641982c: 3055 8fff 

  0x00000214a6419830: ;   {post_call_nop}
  0x00000214a6419830: 0f1f 8400 | 286f 00c2 | 488b 9424 | 9800 0000 

  0x00000214a6419840: ;   {optimized virtual_call}
  0x00000214a6419840: 6666 90e8 

  0x00000214a6419844: ; ImmutableOopMap {[48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop }
                      ;*invokevirtual fillProperty {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.shape.Shape::setFill@1 (line 422)
                      ; - Alastor$1::handle@678 (line 286)
  0x00000214a6419844: 1852 8fff 

  0x00000214a6419848: ;   {post_call_nop}
  0x00000214a6419848: 0f1f 8400 | 406f 00c3 

  0x00000214a6419850: ;   {oop(a 'javafx/scene/paint/Color'{0x000000070d218c30})}
  0x00000214a6419850: 488b d049 | b830 8c21 | 0d07 0000 | 0048 b818 | e6d7 b414 

  0x00000214a6419864: ;   {virtual_call}
  0x00000214a6419864: 0200 00e8 

  0x00000214a6419868: ; ImmutableOopMap {[48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop }
                      ;*invokevirtual set {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.scene.shape.Shape::setFill@5 (line 422)
                      ; - Alastor$1::handle@678 (line 286)
  0x00000214a6419868: f454 8fff 

  0x00000214a641986c: ;   {post_call_nop}
  0x00000214a641986c: 0f1f 8400 | 646f 00c4 | 4c8b 9424 | 9800 0000 | 458b 5264 | 4585 d20f | 8448 0b00 | 0049 8bc2 
  0x00000214a641988c: 48c1 e003 | 448b 5008 

  0x00000214a6419894: ;   {metadata('javafx/scene/Node$11')}
  0x00000214a6419894: 4181 faf0 | 1408 010f | 85fb 3800 | 0048 8984 | 24a8 0000 | 0044 8b40 | 1845 85c0 | 0f85 2643 
  0x00000214a64198b4: 0000 c5fb 

  0x00000214a64198b8: ;   {section_word}
  0x00000214a64198b8: 1040 10c5 | f92e 050d | a8ff ff7a 

  0x00000214a64198c4: ;   {section_word}
  0x00000214a64198c4: 0274 5dc5 | fb10 0501 | a8ff ffc5 | fb11 4010 | 440f b650 | 0c45 85d2 | 7446 4488 | 600c 488b 
  0x00000214a64198e4: d048 8b6c 

  0x00000214a64198e8: ;   {optimized virtual_call}
  0x00000214a64198e8: 2430 90e8 

  0x00000214a64198ec: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop [168]=Oop }
                      ;*invokevirtual invalidated {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.beans.property.DoublePropertyBase::markInvalid@13 (line 113)
                      ; - javafx.beans.property.DoublePropertyBase::set@73 (line 148)
                      ; - javafx.scene.Node::setLayoutX@5 (line 2805)
                      ; - Alastor$1::handle@686 (line 287)
  0x00000214a64198ec: 7051 8fff 

  0x00000214a64198f0: ;   {post_call_nop}
  0x00000214a64198f0: 0f1f 8400 | e86f 00c5 | 4c8b 9424 | a800 0000 | 458b 5220 | 4585 d274 | 1b4b 8d14 | d448 b840 
  0x00000214a6419910: e6d7 b414 

  0x00000214a6419914: ;   {virtual_call}
  0x00000214a6419914: 0200 00e8 

  0x00000214a6419918: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop }
                      ;*invokevirtual fireValueChangedEvent {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.binding.ExpressionHelper::fireValueChangedEvent@5 (line 91)
                      ; - javafx.beans.property.DoublePropertyBase::fireValueChangedEvent@4 (line 107)
                      ; - javafx.beans.property.DoublePropertyBase::markInvalid@17 (line 114)
                      ; - javafx.beans.property.DoublePropertyBase::set@73 (line 148)
                      ; - javafx.scene.Node::setLayoutX@5 (line 2805)
                      ; - Alastor$1::handle@686 (line 287)
  0x00000214a6419918: 4454 8fff 

  0x00000214a641991c: ;   {post_call_nop}
  0x00000214a641991c: 0f1f 8400 | 1470 00c6 | 448b 5424 | 7045 85d2 | 0f85 3a03 | 0000 488b | 9424 8800 

  0x00000214a6419938: ;   {optimized virtual_call}
  0x00000214a6419938: 0000 90e8 

  0x00000214a641993c: ; ImmutableOopMap {[48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop }
                      ;*invokevirtual getPoints {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@771 (line 292)
  0x00000214a641993c: 2051 8fff 

  0x00000214a6419940: ;   {post_call_nop}
  0x00000214a6419940: 0f1f 8400 | 3870 00c7 | 4889 8424 | a800 0000 | 498b 87c8 | 0100 004c | 8bd0 4983 | c228 4d3b 
  0x00000214a6419960: 97d8 0100 | 000f 83ad | 2500 004d | 8997 c801 | 0000 410f | 1882 c000 | 0000 48c7 | 0001 0000 
  0x00000214a6419980: 0041 0f18 | 8200 0100 

  0x00000214a6419988: ;   {metadata('java/lang/Double'[])}
  0x00000214a6419988: 00c7 4008 | 4864 0701 | 410f 1882 | 4001 0000 | c740 0c06 | 0000 0041 | 0f18 8280 | 0100 004c 
  0x00000214a64199a8: 8960 104c | 8960 184c | 8960 204c | 8bd0 4c89 | 9424 b000 | 0000 c5f9 | 57c0 488b 

  0x00000214a64199c4: ;   {static_call}
  0x00000214a64199c4: 6c24 30e8 

  0x00000214a64199c8: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop [168]=Oop [176]=Oop }
                      ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@782 (line 292)
  0x00000214a64199c8: 9456 8fff 

  0x00000214a64199cc: ;   {post_call_nop}
  0x00000214a64199cc: 0f1f 8400 | c470 00c8 | 4c8b 8c24 | b000 0000 | 4d8d 5110 | 4180 7f48 | 000f 85ae | 9900 004c 
  0x00000214a64199ec: 8bc0 49c1 | e803 4589 | 024d 8bda | 4c33 d849 | c1eb 150f | 841e 0000 | 004d 8bda | 49c1 eb09 
  0x00000214a6419a0c: 49b8 00c0 | 6caa 1402 | 0000 4d03 | d841 803b | 020f 85de 

  0x00000214a6419a20: ;   {section_word}
  0x00000214a6419a20: 9900 00c5 | fb10 0595 

  0x00000214a6419a28: ;   {static_call}
  0x00000214a6419a28: a6ff ffe8 

  0x00000214a6419a2c: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop [168]=Oop [176]=Oop }
                      ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@791 (line 292)
  0x00000214a6419a2c: 3056 8fff 

  0x00000214a6419a30: ;   {post_call_nop}
  0x00000214a6419a30: 0f1f 8400 | 2871 00c9 | 4c8b 8c24 | b000 0000 | 4d8d 5114 | 4180 7f48 | 000f 8509 | 9a00 004c 
  0x00000214a6419a50: 8bc0 49c1 | e803 4589 | 024d 8bda | 4c33 d849 | c1eb 150f | 841e 0000 | 004d 8bda | 49c1 eb09 
  0x00000214a6419a70: 49b8 00c0 | 6caa 1402 | 0000 4d03 | d841 803b | 020f 8539 

  0x00000214a6419a84: ;   {section_word}
  0x00000214a6419a84: 9a00 00c5 | fb10 0549 

  0x00000214a6419a8c: ;   {static_call}
  0x00000214a6419a8c: a6ff ffe8 

  0x00000214a6419a90: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop [168]=Oop [176]=Oop }
                      ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@800 (line 292)
  0x00000214a6419a90: cc55 8fff 

  0x00000214a6419a94: ;   {post_call_nop}
  0x00000214a6419a94: 0f1f 8400 | 8c71 00ca | 4c8b 8c24 | b000 0000 | 4d8d 5118 | 4180 7f48 | 000f 8564 | 9a00 004c 
  0x00000214a6419ab4: 8bc0 49c1 | e803 4589 | 024d 8bda | 4c33 d849 | c1eb 150f | 841e 0000 | 004d 8bda | 49c1 eb09 
  0x00000214a6419ad4: 49b8 00c0 | 6caa 1402 | 0000 4d03 | d841 803b | 020f 8594 

  0x00000214a6419ae8: ;   {section_word}
  0x00000214a6419ae8: 9a00 00c5 | fb10 05cd 

  0x00000214a6419af0: ;   {static_call}
  0x00000214a6419af0: a5ff ffe8 

  0x00000214a6419af4: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop [168]=Oop [176]=Oop }
                      ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@809 (line 292)
  0x00000214a6419af4: 6855 8fff 

  0x00000214a6419af8: ;   {post_call_nop}
  0x00000214a6419af8: 0f1f 8400 | f071 00cb | 4c8b 8c24 | b000 0000 | 4d8d 511c | 4180 7f48 | 000f 85bf | 9a00 004c 
  0x00000214a6419b18: 8bc0 49c1 | e803 4589 | 024d 8bda | 4c33 d849 | c1eb 150f | 841e 0000 | 004d 8bda | 49c1 eb09 
  0x00000214a6419b38: 49b8 00c0 | 6caa 1402 | 0000 4d03 | d841 803b | 020f 85ef 

  0x00000214a6419b4c: ;   {section_word}
  0x00000214a6419b4c: 9a00 00c5 | fb10 0551 

  0x00000214a6419b54: ;   {static_call}
  0x00000214a6419b54: a5ff ffe8 

  0x00000214a6419b58: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop [168]=Oop [176]=Oop }
                      ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@818 (line 292)
  0x00000214a6419b58: 0455 8fff 

  0x00000214a6419b5c: ;   {post_call_nop}
  0x00000214a6419b5c: 0f1f 8400 | 5472 00cc | 4c8b 8c24 | b000 0000 | 4d8d 5120 | 4180 7f48 | 000f 851a | 9b00 004c 
  0x00000214a6419b7c: 8bc0 49c1 | e803 4589 | 024d 8bda | 4c33 d849 | c1eb 150f | 841e 0000 | 004d 8bda | 49c1 eb09 
  0x00000214a6419b9c: 49b8 00c0 | 6caa 1402 | 0000 4d03 | d841 803b | 020f 854a | 9b00 00c5 

  0x00000214a6419bb4: ;   {static_call}
  0x00000214a6419bb4: f957 c0e8 

  0x00000214a6419bb8: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop [168]=Oop [176]=Oop }
                      ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@825 (line 292)
  0x00000214a6419bb8: a454 8fff 

  0x00000214a6419bbc: ;   {post_call_nop}
  0x00000214a6419bbc: 0f1f 8400 | b472 00cd | 4c8b 8c24 | b000 0000 | 4d8d 5124 | 4180 7f48 | 000f 8579 | 9b00 004c 
  0x00000214a6419bdc: 8bd8 49c1 | eb03 4589 | 1a4d 8bc2 | 4c33 c049 | c1e8 150f | 841e 0000 | 004d 8bc2 | 49c1 e809 
  0x00000214a6419bfc: 49bb 00c0 | 6caa 1402 | 0000 4d03 | c341 8038 | 020f 85b3 | 9b00 004c | 8b94 24a8 | 0000 0045 
  0x00000214a6419c1c: ;   {metadata('javafx/scene/shape/Polygon$2')}
  0x00000214a6419c1c: 8b52 0841 | 81fa 38f4 | 2301 0f85 | 343f 0000 | 488b 9424 | a800 0000 

  0x00000214a6419c34: ;   {optimized virtual_call}
  0x00000214a6419c34: 4d8b c1e8 

  0x00000214a6419c38: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop }
                      ;*invokeinterface addAll {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@829 (line 292)
  0x00000214a6419c38: 244e 8fff 

  0x00000214a6419c3c: ;   {post_call_nop}
  0x00000214a6419c3c: 0f1f 8400 | 3473 00ce | 488b 9424 | 8800 0000 

  0x00000214a6419c4c: ;   {section_word}
  0x00000214a6419c4c: c5fb 1005 | 8ca4 ffff 

  0x00000214a6419c54: ;   {optimized virtual_call}
  0x00000214a6419c54: 6666 90e8 

  0x00000214a6419c58: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop }
                      ;*invokevirtual setLayoutY {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@840 (line 293)
  0x00000214a6419c58: 044e 8fff 

  0x00000214a6419c5c: ;   {post_call_nop}
  0x00000214a6419c5c: 0f1f 8400 | 5473 00cf | 4533 d2e9 | f904 0000 | 4c8b 9424 | 8800 0000 | 418b aa08 | 0100 004d 
  0x00000214a6419c7c: 8b9f c801 | 0000 4d8b | d349 83c2 | 284d 3b97 | d801 0000 | 0f83 2622 | 0000 4d89 | 97c8 0100 
  0x00000214a6419c9c: 0041 0f18 | 82c0 0000 | 0049 c703 | 0100 0000 | 410f 1882 | 0001 0000 

  0x00000214a6419cb4: ;   {metadata('java/lang/Double'[])}
  0x00000214a6419cb4: 41c7 4308 | 4864 0701 | 410f 1882 | 4001 0000 | 41c7 430c | 0600 0000 | 410f 1882 | 8001 0000 
  0x00000214a6419cd4: 4d89 6310 | 4d89 6318 | 4d89 6320 | 4d8b d34c | 8994 24a8 | 0000 004d | 8b97 c801 | 0000 4d8b 
  0x00000214a6419cf4: da49 83c3 | 184d 3b9f | d801 0000 | 0f83 5e21 | 0000 4d89 | 9fc8 0100 | 0041 0f18 | 83c0 0000 
  0x00000214a6419d14: 0049 c702 | 0100 0000 

  0x00000214a6419d1c: ;   {metadata('java/lang/Double')}
  0x00000214a6419d1c: 41c7 4208 | 3805 1900 | 4589 620c | 4d89 6210 | 4d8b 9fc8 | 0100 004d | 8bc3 4983 | c018 488b 
  0x00000214a6419d3c: bc24 a800 | 0000 4c8d | 4f10 4180 | 7f48 000f | 85d6 9a00 | 0049 8bda | 48c1 eb03 | 4189 1949 
  0x00000214a6419d5c: 8bc9 4933 | ca48 c1e9 | 150f 841d | 0000 0049 | 8bc9 48c1 | e909 48bb | 00c0 6caa | 1402 0000 
  0x00000214a6419d7c: 4803 cb80 | 3902 0f85 | 1b9b 0000 | 4d3b 87d8 | 0100 000f | 8378 2000 | 004d 8987 | c801 0000 
  0x00000214a6419d9c: 410f 1880 | c000 0000 | 49c7 0301 

  0x00000214a6419da8: ;   {metadata('java/lang/Double')}
  0x00000214a6419da8: 0000 0041 | c743 0838 | 0519 0045 | 8963 0c4d | 8963 104d | 8bd3 4d8b | 9fc8 0100 | 004d 8bc3 
  0x00000214a6419dc8: 4983 c018 | 488b bc24 | a800 0000 | 488d 4f14 | 4180 7f48 | 000f 8526 | 9b00 0049 | 8bda 48c1 
  0x00000214a6419de8: eb03 8919 | 4c8b c94d | 33ca 49c1 | e915 0f84 | 1e00 0000 | 4c8b c949 | c1e9 0948 | bb00 c06c 
  0x00000214a6419e08: aa14 0200 | 004c 03cb | 4180 3902 | 0f85 6a9b | 0000 4d3b | 87d8 0100 | 000f 8311 | 2000 004d 
  0x00000214a6419e28: 8987 c801 | 0000 410f | 1880 c000 | 0000 49c7 | 0301 0000 

  0x00000214a6419e3c: ;   {metadata('java/lang/Double')}
  0x00000214a6419e3c: 0041 c743 | 0838 0519 | 004d 8963 | 0c41 c743 | 1400 0030 | 404d 8bd3 | 4d8b 9fc8 | 0100 004d 
  0x00000214a6419e5c: 8bc3 4983 | c018 488b | bc24 a800 | 0000 488d | 4f18 4180 | 7f48 000f | 8576 9b00 | 004d 8bca 
  0x00000214a6419e7c: 49c1 e903 | 4489 0948 | 8bd9 4933 | da48 c1eb | 150f 841d | 0000 0048 | 8bd9 48c1 | eb09 49b9 
  0x00000214a6419e9c: 00c0 6caa | 1402 0000 | 4903 d980 | 3b02 0f85 | bb9b 0000 | 4d3b 87d8 | 0100 000f | 83d3 1f00 
  0x00000214a6419ebc: 004d 8987 | c801 0000 | 410f 1880 | c000 0000 | 49c7 0301 

  0x00000214a6419ed0: ;   {metadata('java/lang/Double')}
  0x00000214a6419ed0: 0000 0041 | c743 0838 | 0519 0045 | 8963 0c4d | 8963 104d | 8bd3 4d8b | 9fc8 0100 | 004d 8bc3 
  0x00000214a6419ef0: 4983 c018 | 488b bc24 | a800 0000 | 488d 4f1c | 4180 7f48 | 000f 85c9 | 9b00 0049 | 8bda 48c1 
  0x00000214a6419f10: eb03 8919 | 4c8b c94d | 33ca 49c1 | e915 0f84 | 1e00 0000 | 4c8b c949 | c1e9 0948 | bb00 c06c 
  0x00000214a6419f30: aa14 0200 | 004c 03cb | 4180 3902 | 0f85 0d9c | 0000 4d3b | 87d8 0100 | 000f 839d | 1f00 004d 
  0x00000214a6419f50: 8987 c801 | 0000 410f | 1880 c000 | 0000 49c7 | 0301 0000 

  0x00000214a6419f64: ;   {metadata('java/lang/Double')}
  0x00000214a6419f64: 0041 c743 | 0838 0519 | 004d 8963 | 0c41 c743 | 1400 0020 | 404d 8bd3 | 498b 87c8 | 0100 004c 
  0x00000214a6419f84: 8bd8 4983 | c318 488b | 9c24 a800 | 0000 488d | 4b20 4180 | 7f48 000f | 8519 9c00 | 004d 8bca 
  0x00000214a6419fa4: 49c1 e903 | 4489 094c | 8bc1 4d33 | c249 c1e8 | 150f 841e | 0000 004c | 8bc1 49c1 | e809 49b9 
  0x00000214a6419fc4: 00c0 6caa | 1402 0000 | 4d03 c141 | 8038 020f | 855d 9c00 | 004d 3b9f | d801 0000 | 0f83 fe1d 
  0x00000214a6419fe4: 0000 4d89 | 9fc8 0100 | 0041 0f18 | 83c0 0000 | 0048 c700 | 0100 0000 

  0x00000214a6419ffc: ;   {metadata('java/lang/Double')}
  0x00000214a6419ffc: c740 0838 | 0519 004c | 8960 0cc7 | 4014 0000 | 38c0 4c8b | 8c24 a800 | 0000 4d8d | 5124 4180 
  0x00000214a641a01c: 7f48 000f | 857c 9c00 | 004c 8bc0 | 49c1 e803 | 4589 024d | 8bda 4c33 | d849 c1eb | 150f 841e 
  0x00000214a641a03c: 0000 004d | 8bda 49c1 | eb09 49b8 | 00c0 6caa | 1402 0000 | 4d03 d841 | 803b 020f | 85b6 9c00 
  0x00000214a641a05c: 0045 8b5c 

  0x00000214a641a060: ;   {metadata('javafx/scene/shape/Polygon$2')}
  0x00000214a641a060: ec08 4181 | fb38 f423 | 010f 85fd | 3900 004d | 8d14 ec49 | 8bea 498b | d14c 8b54 | 2430 4c89 
  0x00000214a641a080: ;   {static_call}
  0x00000214a641a080: 5424 20e8 

  0x00000214a641a084: ; ImmutableOopMap {rbp=Oop [32]=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop }
                      ;*invokestatic asList {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.collections.ObservableListBase::addAll@2 (line 259)
                      ; - Alastor$1::handle@752 (line 289)
  0x00000214a641a084: d84f 8fff 

  0x00000214a641a088: ;   {post_call_nop}
  0x00000214a641a088: 0f1f 8400 | 8077 00d0 | 488b d54c | 8bc0 488b 

  0x00000214a641a098: ;   {optimized virtual_call}
  0x00000214a641a098: 6c24 20e8 

  0x00000214a641a09c: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop }
                      ;*invokevirtual addAll {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.collections.ObservableListBase::addAll@5 (line 259)
                      ; - Alastor$1::handle@752 (line 289)
  0x00000214a641a09c: c049 8fff 

  0x00000214a641a0a0: ;   {post_call_nop}
  0x00000214a641a0a0: 0f1f 8400 | 9877 00d1 | 4c8b 9424 | 8800 0000 | 458b 5268 | 4585 d20f | 8464 0a00 | 0049 8bc2 
  0x00000214a641a0c0: 48c1 e003 | 448b 5008 

  0x00000214a641a0c8: ;   {metadata('javafx/scene/Node$12')}
  0x00000214a641a0c8: 4181 fa98 | 0a08 010f | 85ff 3900 | 004c 8bd0 | 4c89 9424 | a800 0000 | 458b 4218 | 4585 c00f 
  0x00000214a641a0e8: 8561 3d00 | 00c4 c17b 

  0x00000214a641a0f0: ;   {section_word}
  0x00000214a641a0f0: 1042 10c5 | f92e 05bd | 9fff ff7a 

  0x00000214a641a0fc: ;   {section_word}
  0x00000214a641a0fc: 0274 61c5 | fb10 05b1 | 9fff ffc4 | c17b 1142 | 1045 0fb6 | 520c 4585 | d274 494c | 8b94 24a8 
  0x00000214a641a11c: 0000 0045 | 8862 0c49 

  0x00000214a641a124: ;   {optimized virtual_call}
  0x00000214a641a124: 8bd2 90e8 

  0x00000214a641a128: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop [168]=Oop }
                      ;*invokevirtual invalidated {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.beans.property.DoublePropertyBase::markInvalid@13 (line 113)
                      ; - javafx.beans.property.DoublePropertyBase::set@73 (line 148)
                      ; - javafx.scene.Node::setLayoutY@5 (line 2879)
                      ; - Alastor$1::handle@763 (line 290)
  0x00000214a641a128: 3449 8fff 

  0x00000214a641a12c: ;   {post_call_nop}
  0x00000214a641a12c: 0f1f 8400 | 2478 00d2 | 4c8b 9424 | a800 0000 | 458b 5220 | 4585 d274 | 1b4b 8d14 | d448 b868 
  0x00000214a641a14c: e6d7 b414 

  0x00000214a641a150: ;   {virtual_call}
  0x00000214a641a150: 0200 00e8 

  0x00000214a641a154: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop }
                      ;*invokevirtual fireValueChangedEvent {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.binding.ExpressionHelper::fireValueChangedEvent@5 (line 91)
                      ; - javafx.beans.property.DoublePropertyBase::fireValueChangedEvent@4 (line 107)
                      ; - javafx.beans.property.DoublePropertyBase::markInvalid@17 (line 114)
                      ; - javafx.beans.property.DoublePropertyBase::set@73 (line 148)
                      ; - javafx.scene.Node::setLayoutY@5 (line 2879)
                      ; - Alastor$1::handle@763 (line 290)
  0x00000214a641a154: 084c 8fff 

  0x00000214a641a158: ;   {post_call_nop}
  0x00000214a641a158: 0f1f 8400 | 5078 00d3 | 448b 5424 | 7044 8954 | 2470 488b | 9424 8800 | 0000 c5f9 | 57c0 488b 
  0x00000214a641a178: ;   {optimized virtual_call}
  0x00000214a641a178: 6c24 30e8 

  0x00000214a641a17c: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop }
                      ;*invokevirtual setLayoutX {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@846 (line 295)
  0x00000214a641a17c: e048 8fff 

  0x00000214a641a180: ;   {post_call_nop}
  0x00000214a641a180: 0f1f 8400 | 7878 00d4 | 488b 9424 | 8800 0000 

  0x00000214a641a190: ;   {oop(a 'javafx/scene/paint/Color'{0x000000070d218c30})}
  0x00000214a641a190: 49b8 308c | 210d 0700 

  0x00000214a641a198: ;   {optimized virtual_call}
  0x00000214a641a198: 0000 90e8 

  0x00000214a641a19c: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop }
                      ;*invokevirtual setFill {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@854 (line 296)
  0x00000214a641a19c: c048 8fff 

  0x00000214a641a1a0: ;   {post_call_nop}
  0x00000214a641a1a0: 0f1f 8400 | 9878 00d5 | 4d8b 9fc8 | 0100 004d | 8bd3 4981 | c270 0100 | 004d 3b97 | d801 0000 
  0x00000214a641a1c0: 0f83 b61a | 0000 4d89 | 97c8 0100 | 0041 0f18 | 82c0 0000 | 0049 c703 | 0100 0000 | 498b fb48 
  0x00000214a641a1e0: ;   {metadata('javafx/scene/Group')}
  0x00000214a641a1e0: 83c7 1041 | c743 0838 | d81c 0145 | 8963 0cb9 | 2c00 0000 | c5fd 57c0 | e90d 0000 | 00c5 fe7f 
  0x00000214a641a200: 07c5 fe7f | 4720 4883 | c740 4883 | e908 7ded | 4883 c104 | 7c0c c5fe | 7f07 4883 | c720 4883 
  0x00000214a641a220: e904 4883 | c104 7e10 | 48ff c9c5 | f9d6 0748 | 83c7 0848 | ffc9 7df3 | 4c89 9c24 | a800 0000 
  0x00000214a641a240: 4d8b 87c8 | 0100 004d | 8bd0 4983 | c218 4d3b | 97d8 0100 | 000f 8341 | 1a00 004d | 8997 c801 
  0x00000214a641a260: 0000 410f | 1882 c000 | 0000 49c7 | 0001 0000 | 0041 0f18 | 8200 0100 

  0x00000214a641a278: ;   {metadata('javafx/scene/Node'[])}
  0x00000214a641a278: 0041 c740 | 08f0 ca17 | 0141 0f18 | 8240 0100 | 0041 c740 | 0c02 0000 | 0041 0f18 | 8280 0100 
  0x00000214a641a298: 004d 8960 | 1044 8b94 | 24a0 0000 | 0045 8950 | 1044 8b9c | 2494 0000 | 0045 8958 | 1448 8b94 
  0x00000214a641a2b8: 24a8 0000 

  0x00000214a641a2bc: ;   {optimized virtual_call}
  0x00000214a641a2bc: 0066 90e8 

  0x00000214a641a2c0: ; ImmutableOopMap {[48]=Oop [104]=Oop [168]=Oop }
                      ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@875 (line 297)
  0x00000214a641a2c0: 9c47 8fff 

  0x00000214a641a2c4: ;   {post_call_nop}
  0x00000214a641a2c4: 0f1f 8400 | bc79 00d6 | 488b 9424 | a800 0000 | c5fb 1084 | 2480 0000 

  0x00000214a641a2dc: ;   {optimized virtual_call}
  0x00000214a641a2dc: 0066 90e8 

  0x00000214a641a2e0: ; ImmutableOopMap {[48]=Oop [104]=Oop [168]=Oop }
                      ;*invokevirtual setLayoutX {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@887 (line 298)
  0x00000214a641a2e0: 7c47 8fff 

  0x00000214a641a2e4: ;   {post_call_nop}
  0x00000214a641a2e4: 0f1f 8400 | dc79 00d7 | 448b 5424 | 7045 85d2 | 0f84 8ccf | ffff c5fb | 1044 2460 | c5fb 1184 
  0x00000214a641a304: 2498 0000 | 00e9 87cf | ffff 4c8b | 5424 304c | 8954 2420 | c5fb 104c | 2438 c5fb | 105c 2448 
  0x00000214a641a324: c5fb 1054 | 2440 c5fb | 1064 2450 | e964 aaff | ff45 33d2 | eb05 448b | 5424 5845 | 33db 4489 
  0x00000214a641a344: 5424 5844 | 899c 24b0 | 0000 00e9 | 3eb8 ffff | 448b 8424 | b000 0000 | 4585 c00f | 841c 0a00 
  0x00000214a641a364: 0044 8b9c | 24b0 0000 | 00e9 18c2 | ffff c5fb | 104c 2430 | c5fb 105c | 2460 c5fb | 1054 2438 
  0x00000214a641a384: c5fb 1064 | 2440 e90a | aaff ff4b | 8d14 dc66 | 9048 b890 | e6d7 b414 

  0x00000214a641a39c: ;   {virtual_call}
  0x00000214a641a39c: 0200 00e8 

  0x00000214a641a3a0: ; ImmutableOopMap {[32]=Oop }
                      ;*invokevirtual fireValueChangedEvent {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.binding.ExpressionHelper::fireValueChangedEvent@5 (line 91)
                      ; - javafx.beans.property.DoublePropertyBase::fireValueChangedEvent@4 (line 107)
                      ; - javafx.beans.property.DoublePropertyBase::markInvalid@17 (line 114)
                      ; - javafx.beans.property.DoublePropertyBase::set@73 (line 148)
                      ; - javafx.scene.Node::setLayoutX@5 (line 2805)
                      ; - Alastor$1::handle@245 (line 248)
  0x00000214a641a3a0: bc49 8fff 

  0x00000214a641a3a4: ;   {post_call_nop}
  0x00000214a641a3a4: 0f1f 8400 | 9c7a 00d8 | e940 a2ff | ff4b 8d14 | dc48 b8b8 | e6d7 b414 

  0x00000214a641a3bc: ;   {virtual_call}
  0x00000214a641a3bc: 0200 00e8 

  0x00000214a641a3c0: ; ImmutableOopMap {[32]=Oop }
                      ;*invokevirtual fireValueChangedEvent {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.binding.ExpressionHelper::fireValueChangedEvent@5 (line 91)
                      ; - javafx.beans.property.DoublePropertyBase::fireValueChangedEvent@4 (line 107)
                      ; - javafx.beans.property.DoublePropertyBase::markInvalid@17 (line 114)
                      ; - javafx.beans.property.DoublePropertyBase::set@73 (line 148)
                      ; - javafx.scene.Node::setLayoutX@5 (line 2805)
                      ; - Alastor$1::handle@279 (line 249)
  0x00000214a641a3c0: 9c49 8fff 

  0x00000214a641a3c4: ;   {post_call_nop}
  0x00000214a641a3c4: 0f1f 8400 | bc7a 00d9 | e934 a4ff | ff49 8b87 | c801 0000 | 4c8b d049 | 83c2 284d | 3b97 d801 
  0x00000214a641a3e4: 0000 0f83 | 0428 0000 | 4d89 97c8 | 0100 0041 | 0f18 82c0 | 0000 0048 | c700 0100 

  0x00000214a641a400: ;   {metadata('javafx/scene/Node$11')}
  0x00000214a641a400: 0000 c740 | 08f0 1408 | 014c 8960 | 104c 8960 | 184c 8960 | 20c7 400c | 0100 0000 | 448b 9c24 
  0x00000214a641a420: a000 0000 | 4489 5824 | 4c8b 8c24 | 9800 0000 | 4d8d 5964 | 4180 7f48 | 000f 8535 | 9900 004c 
  0x00000214a641a440: 8bc0 49c1 | e803 4589 | 034d 8bd3 | 4c33 d049 | c1ea 150f | 841e 0000 | 004d 8bd3 | 49c1 ea09 
  0x00000214a641a460: 49b8 00c0 | 6caa 1402 | 0000 4d03 | d041 803a | 020f 8565 | 9900 00e9 | 14f4 ffff | c5f9 57c0 
  0x00000214a641a480: e979 a5ff | ff4d 8b87 | c801 0000 | 4d8b d049 | 83c2 204d | 3b97 d801 | 0000 0f83 | 382a 0000 
  0x00000214a641a4a0: 4d89 97c8 | 0100 0041 | 0f18 82c0 | 0000 0049 | c700 0100 

  0x00000214a641a4b4: ;   {metadata('javafx/scene/Node$MiscProperties$2')}
  0x00000214a641a4b4: 0000 41c7 | 4008 f83a | 1e01 4589 | 600c 4d89 | 6010 4d89 | 6018 4d8b | d949 c1eb | 0345 8958 
  0x00000214a641a4d4: 184d 8d59 | 0c41 807f | 4800 0f85 | 5999 0000 | 498b c848 | c1e9 0341 | 890b 4d8b | d34d 33d0 
  0x00000214a641a4f4: 49c1 ea15 | 0f84 1e00 | 0000 4d8b | d349 c1ea | 0948 b900 | c06c aa14 | 0200 004c | 03d1 4180 
  0x00000214a641a514: 3a02 0f85 | b699 0000 | e9d2 a5ff | ff4d 8b8f | c801 0000 | 4d8b d149 | 83c2 484d | 3b97 d801 
  0x00000214a641a534: 0000 0f83 | 022a 0000 | 4d89 97c8 | 0100 0041 | 0f18 82c0 | 0000 0049 | c701 0100 

  0x00000214a641a550: ;   {metadata('javafx/scene/Node$MiscProperties')}
  0x00000214a641a550: 0000 41c7 | 4108 7806 | 1e01 4589 | 610c 4d89 | 6110 4d89 | 6118 4d89 | 6120 4d89 | 6128 4d89 
  0x00000214a641a570: 6130 4d89 | 6138 4d89 | 6140 448b | 5c24 5045 | 8959 448b | 4c24 504d | 8d9c cc90 | 0000 0041 
  0x00000214a641a590: 807f 4800 | 0f85 c999 | 0000 4d8b | c149 c1e8 | 0345 8903 | 4d8b d34d | 33d1 49c1 | ea15 0f84 
  0x00000214a641a5b0: 1e00 0000 | 4d8b d349 | c1ea 0949 | b800 c06c | aa14 0200 | 004d 03d0 | 4180 3a02 | 0f85 299a 
  0x00000214a641a5d0: 0000 e908 | a5ff ff4b | 8d14 d466 | 9048 b8e0 | e6d7 b414 

  0x00000214a641a5e4: ;   {virtual_call}
  0x00000214a641a5e4: 0200 00e8 

  0x00000214a641a5e8: ; ImmutableOopMap {[32]=Oop }
                      ;*invokevirtual fireValueChangedEvent {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.binding.ExpressionHelper::fireValueChangedEvent@5 (line 91)
                      ; - javafx.beans.property.DoublePropertyBase::fireValueChangedEvent@4 (line 107)
                      ; - javafx.beans.property.DoublePropertyBase::markInvalid@17 (line 114)
                      ; - javafx.beans.property.DoublePropertyBase::set@73 (line 148)
                      ; - javafx.scene.Node::setLayoutY@5 (line 2879)
                      ; - Alastor$1::handle@519 (line 268)
  0x00000214a641a5e8: 7447 8fff 

  0x00000214a641a5ec: ;   {post_call_nop}
  0x00000214a641a5ec: 0f1f 8400 | e47c 00da | e9e8 a6ff | ff4c 8b54 | 2420 418b | aa80 0000 | 0045 8b5c | ec0c 4585 
  0x00000214a641a60c: db0f 868d | 3900 00c5 | fb11 6424 | 40c5 fb11 | 5424 38c5 | fb11 5c24 | 48c5 fb11 

  0x00000214a641a628: ;   {section_word}
  0x00000214a641a628: 4c24 30c5 | fb10 05b5 | 9aff ffc4 | c17b 5844 | ec10 c4c1 | 7b11 44ec 

  0x00000214a641a640: ;   {oop(a 'java/lang/Class'{0x00000007ffe7c4e8} = 'java/lang/System')}
  0x00000214a641a640: 1049 bae8 | c4e7 ff07 | 0000 0041 

  0x00000214a641a64c: ;   {static_call}
  0x00000214a641a64c: 8b6a 74e8 

  0x00000214a641a650: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop }
                      ;*invokestatic toString {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.lang.Double::toString@1 (line 614)
                      ; - java.lang.StringConcatHelper$Concat1::concat@2 (line 133)
                      ; - java.lang.invoke.DirectMethodHandle$Holder::invokeSpecial@13
                      ; - java.lang.invoke.LambdaForm$MH/0x00000214b6218400::invoke@23
                      ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                      ; - Alastor$1::handle@2040 (line 378)
  0x00000214a641a650: 0c4a 8fff 

  0x00000214a641a654: ;   {post_call_nop}
  0x00000214a641a654: 0f1f 8400 | 4c7d 00db | 4889 4424 | 50ba 1900 | 0000 4c8b 

  0x00000214a641a668: ;   {static_call}
  0x00000214a641a668: c066 90e8 

  0x00000214a641a66c: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [80]=Oop }
                      ;*invokestatic stringSize {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.StringConcatHelper$Concat1::concat0@5 (line 70)
                      ; - java.lang.StringConcatHelper$Concat1::concat@5 (line 133)
                      ; - java.lang.invoke.DirectMethodHandle$Holder::invokeSpecial@13
                      ; - java.lang.invoke.LambdaForm$MH/0x00000214b6218400::invoke@23
                      ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                      ; - Alastor$1::handle@2040 (line 378)
  0x00000214a641a66c: f049 8fff 

  0x00000214a641a670: ;   {post_call_nop}
  0x00000214a641a670: 0f1f 8400 | 687d 00dc | 8944 2458 | 4c8b 5424 | 504d 85d2 | 0f84 d638 | 0000 498b 

  0x00000214a641a68c: ;   {optimized virtual_call}
  0x00000214a641a68c: d266 90e8 

  0x00000214a641a690: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [80]=Oop }
                      ;*invokevirtual coder {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.StringConcatHelper$Concat1::concat0@14 (line 71)
                      ; - java.lang.StringConcatHelper$Concat1::concat@5 (line 133)
                      ; - java.lang.invoke.DirectMethodHandle$Holder::invokeSpecial@13
                      ; - java.lang.invoke.LambdaForm$MH/0x00000214b6218400::invoke@23
                      ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                      ; - Alastor$1::handle@2040 (line 378)
  0x00000214a641a690: cc43 8fff 

  0x00000214a641a694: ;   {post_call_nop}
  0x00000214a641a694: 0f1f 8400 | 8c7d 00dd | 8944 245c | 448b 5c24 | 5845 8bd3 | 8bc8 41d3 | e245 85d2 | 0f8c a239 
  0x00000214a641a6b4: 0000 4181 | fa00 0010 | 000f 8711 | 2f00 0049 | 8b87 c801 | 0000 458b | da4d 63db | 4983 c317 
  0x00000214a641a6d4: 4983 e3f8 | 4c8b c04d | 03c3 4d3b | 87d8 0100 | 000f 83e9 | 2e00 004d | 8987 c801 | 0000 410f 
  0x00000214a641a6f4: 1880 c000 | 0000 48c7 | 0001 0000 | 0041 0f18 | 8000 0100 

  0x00000214a641a708: ;   {metadata({type array byte})}
  0x00000214a641a708: 00c7 4008 | 187e 1600 | 4489 500c | 410f 1880 | 4001 0000 | 410f 1880 | 8001 0000 | 4c8b d04c 
  0x00000214a641a728: 8954 2460 

  0x00000214a641a72c: ;   {oop("Increased spear speed to "{0x000000070d99ead0})}
  0x00000214a641a72c: 48ba d0ea | 990d 0700 | 0000 4d8b | c245 33c9 | 8b7c 245c 

  0x00000214a641a740: ;   {optimized virtual_call}
  0x00000214a641a740: 6666 90e8 

  0x00000214a641a744: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [80]=Oop [96]=Oop }
                      ;*invokevirtual getBytes {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.StringConcatHelper$Concat1::concat0@42 (line 74)
                      ; - java.lang.StringConcatHelper$Concat1::concat@5 (line 133)
                      ; - java.lang.invoke.DirectMethodHandle$Holder::invokeSpecial@13
                      ; - java.lang.invoke.LambdaForm$MH/0x00000214b6218400::invoke@23
                      ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                      ; - Alastor$1::handle@2040 (line 378)
  0x00000214a641a744: 1843 8fff 

  0x00000214a641a748: ;   {post_call_nop}
  0x00000214a641a748: 0f1f 8400 | 407e 00de 

  0x00000214a641a750: ;   {oop("Increased spear speed to "{0x000000070d99ead0})}
  0x00000214a641a750: 48ba d0ea | 990d 0700 

  0x00000214a641a758: ;   {optimized virtual_call}
  0x00000214a641a758: 0000 90e8 

  0x00000214a641a75c: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [80]=Oop [96]=Oop }
                      ;*invokevirtual length {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.StringConcatHelper$Concat1::concat0@50 (line 75)
                      ; - java.lang.StringConcatHelper$Concat1::concat@5 (line 133)
                      ; - java.lang.invoke.DirectMethodHandle$Holder::invokeSpecial@13
                      ; - java.lang.invoke.LambdaForm$MH/0x00000214b6218400::invoke@23
                      ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                      ; - Alastor$1::handle@2040 (line 378)
  0x00000214a641a75c: 0043 8fff 

  0x00000214a641a760: ;   {post_call_nop}
  0x00000214a641a760: 0f1f 8400 | 587e 00df | 488b 5424 | 504c 8b44 | 2460 448b | c88b 7c24 

  0x00000214a641a778: ;   {optimized virtual_call}
  0x00000214a641a778: 5c66 90e8 

  0x00000214a641a77c: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [80]=Oop [96]=Oop }
                      ;*invokevirtual getBytes {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.StringConcatHelper$Concat1::concat0@54 (line 75)
                      ; - java.lang.StringConcatHelper$Concat1::concat@5 (line 133)
                      ; - java.lang.invoke.DirectMethodHandle$Holder::invokeSpecial@13
                      ; - java.lang.invoke.LambdaForm$MH/0x00000214b6218400::invoke@23
                      ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                      ; - Alastor$1::handle@2040 (line 378)
  0x00000214a641a77c: e042 8fff 

  0x00000214a641a780: ;   {post_call_nop}
  0x00000214a641a780: 0f1f 8400 | 787e 00e0 

  0x00000214a641a788: ;   {oop("Increased spear speed to "{0x000000070d99ead0})}
  0x00000214a641a788: 48ba d0ea | 990d 0700 

  0x00000214a641a790: ;   {optimized virtual_call}
  0x00000214a641a790: 0000 90e8 

  0x00000214a641a794: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [80]=Oop [96]=Oop }
                      ;*invokevirtual length {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.StringConcatHelper$Concat1::concat0@67 (line 76)
                      ; - java.lang.StringConcatHelper$Concat1::concat@5 (line 133)
                      ; - java.lang.invoke.DirectMethodHandle$Holder::invokeSpecial@13
                      ; - java.lang.invoke.LambdaForm$MH/0x00000214b6218400::invoke@23
                      ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                      ; - Alastor$1::handle@2040 (line 378)
  0x00000214a641a794: c842 8fff 

  0x00000214a641a798: ;   {post_call_nop}
  0x00000214a641a798: 0f1f 8400 | 907e 00e1 | 8944 2458 | 488b 5424 

  0x00000214a641a7a8: ;   {optimized virtual_call}
  0x00000214a641a7a8: 5066 90e8 

  0x00000214a641a7ac: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [96]=Oop }
                      ;*invokevirtual length {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.StringConcatHelper$Concat1::concat0@71 (line 76)
                      ; - java.lang.StringConcatHelper$Concat1::concat@5 (line 133)
                      ; - java.lang.invoke.DirectMethodHandle$Holder::invokeSpecial@13
                      ; - java.lang.invoke.LambdaForm$MH/0x00000214b6218400::invoke@23
                      ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                      ; - Alastor$1::handle@2040 (line 378)
  0x00000214a641a7ac: b042 8fff 

  0x00000214a641a7b0: ;   {post_call_nop}
  0x00000214a641a7b0: 0f1f 8400 | a87e 00e2 | 448b c844 | 034c 2458 

  0x00000214a641a7c0: ;   {oop(""{0x00000007ffe027c8})}
  0x00000214a641a7c0: 48ba c827 | e0ff 0700 | 0000 4c8b | 4424 608b 

  0x00000214a641a7d0: ;   {optimized virtual_call}
  0x00000214a641a7d0: 7c24 5ce8 

  0x00000214a641a7d4: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [96]=Oop }
                      ;*invokevirtual getBytes {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.StringConcatHelper$Concat1::concat0@76 (line 76)
                      ; - java.lang.StringConcatHelper$Concat1::concat@5 (line 133)
                      ; - java.lang.invoke.DirectMethodHandle$Holder::invokeSpecial@13
                      ; - java.lang.invoke.LambdaForm$MH/0x00000214b6218400::invoke@23
                      ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                      ; - Alastor$1::handle@2040 (line 378)
  0x00000214a641a7d4: 8842 8fff 

  0x00000214a641a7d8: ;   {post_call_nop}
  0x00000214a641a7d8: 0f1f 8400 | d07e 00e3 | 498b 87c8 | 0100 004c | 8bd0 4983 | c218 4d3b | 97d8 0100 | 000f 83fa 
  0x00000214a641a7f8: 2d00 004d | 8997 c801 | 0000 410f | 1882 c000 | 0000 48c7 | 0001 0000 

  0x00000214a641a810: ;   {metadata('java/lang/String')}
  0x00000214a641a810: 00c7 4008 | 48ae 1600 | 4c89 600c | 448b 5c24 | 5c44 8858 | 104c 8b54 | 2460 4d8b | da49 c1eb 
  0x00000214a641a830: 0344 8958 | 144c 8bd0 | 85ed 0f84 | 3437 0000 | 498d 14ec 

  0x00000214a641a844: ;   {optimized virtual_call}
  0x00000214a641a844: 4d8b c2e8 

  0x00000214a641a848: ; ImmutableOopMap {[32]=Oop }
                      ;*invokevirtual println {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2045 (line 378)
  0x00000214a641a848: 1442 8fff 

  0x00000214a641a84c: ;   {post_call_nop}
  0x00000214a641a84c: 0f1f 8400 | 447f 00e4 | c5fb 104c | 2430 c5fb | 105c 2448 | c5fb 1054 | 2438 c5fb | 1064 2440 
  0x00000214a641a86c: e96f a5ff | ff4c 8942 | 18c5 f957 | c0e9 1799 

  0x00000214a641a87c: ;   {oop(a 'java/lang/Class'{0x00000007ffe7c4e8} = 'java/lang/System')}
  0x00000214a641a87c: ffff 49ba | e8c4 e7ff | 0700 0000 | 458b 5274 | 4585 d20f | 84f7 3600 | 004b 8d14 

  0x00000214a641a898: ;   {oop("Game over: Time's up!"{0x000000070d99ed48})}
  0x00000214a641a898: d449 b848 | ed99 0d07 | 0000 0048 | 8b6c 2420 

  0x00000214a641a8a8: ;   {optimized virtual_call}
  0x00000214a641a8a8: 6666 90e8 

  0x00000214a641a8ac: ; ImmutableOopMap {rbp=Oop [32]=Oop }
                      ;*invokevirtual println {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@101 (line 235)
  0x00000214a641a8ac: b041 8fff 

  0x00000214a641a8b0: ;   {post_call_nop}
  0x00000214a641a8b0: 0f1f 8400 | a87f 00e5 | 8b6d 4445 | 8b5c ec08 

  0x00000214a641a8c0: ;   {metadata('java/util/ArrayList')}
  0x00000214a641a8c0: 4181 fb38 | e91f 000f | 85ff 3600 | 0049 8b87 | c801 0000 | 4c8b d049 | 83c2 2048 | c1e5 034d 
  0x00000214a641a8e0: 3b97 d801 | 0000 0f83 | 252d 0000 | 4d89 97c8 | 0100 0041 | 0f18 82c0 | 0000 0048 | c700 0100 
  0x00000214a641a900: ;   {metadata('java/util/ArrayList$Itr')}
  0x00000214a641a900: 0000 c740 | 08b8 f728 | 0044 8960 | 0c44 8960 | 1cc7 4010 | ffff ffff | 448b 550c | 4489 5014 
  0x00000214a641a920: 4c8b dd49 | c1eb 0344 | 8958 184c | 8bd0 4c89 | 5424 2844 | 8b5d 1045 | 85db 0f84 | c000 0000 
  0x00000214a641a940: 488b 5424 | 2848 8b6c 

  0x00000214a641a948: ;   {optimized virtual_call}
  0x00000214a641a948: 2420 90e8 

  0x00000214a641a94c: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=Oop }
                      ;*invokeinterface next {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@127 (line 236)
  0x00000214a641a94c: 1041 8fff 

  0x00000214a641a950: ;   {post_call_nop}
  0x00000214a641a950: 0f1f 8400 | 4880 00e6 

  0x00000214a641a958: ; implicit exception: dispatches to 0x00000214a641eed0
  0x00000214a641a958: 448b 5808 

  0x00000214a641a95c: ;   {metadata('javafx/scene/Group')}
  0x00000214a641a95c: 4181 fb38 | d81c 010f | 858f 3a00 | 0044 8b5d | 4843 8bac | dc24 0100 | 004c 8bc0 

  0x00000214a641a978: ; implicit exception: dispatches to 0x00000214a641eef8
  0x00000214a641a978: 458b 54ec 

  0x00000214a641a97c: ;   {metadata('javafx/scene/Parent$3')}
  0x00000214a641a97c: 0841 81fa | 504b 0c01 | 0f85 4e35 | 0000 4d8d | 14ec 498b | ea44 8b5d | 1049 8bd3 | 48c1 e203 
  0x00000214a641a99c: 9048 b808 | e7d7 b414 

  0x00000214a641a9a4: ;   {virtual_call}
  0x00000214a641a9a4: 0200 00e8 

  0x00000214a641a9a8: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=Oop }
                      ;*invokeinterface indexOf {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.collections.VetoableListDecorator::remove@5 (line 222)
                      ; - Alastor$1::handle@146 (line 236)
  0x00000214a641a9a8: b443 8fff 

  0x00000214a641a9ac: ;   {post_call_nop}
  0x00000214a641a9ac: 0f1f 8400 | a480 00e7 | 83f8 ff74 | 1b48 8bd5 | 448b c048 | 8b6c 2420 

  0x00000214a641a9c4: ;   {optimized virtual_call}
  0x00000214a641a9c4: 6666 90e8 

  0x00000214a641a9c8: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=Oop }
                      ;*invokevirtual remove {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.javafx.collections.VetoableListDecorator::remove@18 (line 224)
                      ; - Alastor$1::handle@146 (line 236)
  0x00000214a641a9c8: 9440 8fff 

  0x00000214a641a9cc: ;   {post_call_nop}
  0x00000214a641a9cc: 0f1f 8400 | c480 00e8 | 4c8b 5424 | 2845 8b42 | 184d 8b4f | 304c 8b54 | 2420 4c8b 

  0x00000214a641a9e8: ; ImmutableOopMap {r10=Oop r11=Oop r8=NarrowOop [32]=Oop [40]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) Alastor$1::handle@152 (line 236)
                      ;   {poll}
  0x00000214a641a9e8: 5c24 2841 | 8501 478b | 54c4 1045 | 8b43 0c45 | 3bc2 0f85 | 40ff ffff | 4c8b 5424 | 2041 8b6a 
  0x00000214a641aa08: 4445 8b5c 

  0x00000214a641aa0c: ;   {metadata('java/util/ArrayList')}
  0x00000214a641aa0c: ec08 4181 | fb38 e91f | 000f 85c5 | 3500 0049 | 8d14 ec49 

  0x00000214a641aa20: ;   {optimized virtual_call}
  0x00000214a641aa20: 8bea 90e8 

  0x00000214a641aa24: ; ImmutableOopMap {rbp=Oop [32]=Oop }
                      ;*invokeinterface clear {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@159 (line 237)
  0x00000214a641aa24: 3840 8fff 

  0x00000214a641aa28: ;   {post_call_nop}
  0x00000214a641aa28: 0f1f 8400 | 2081 00ea | 8b6d 4c45 | 8b54 ec08 

  0x00000214a641aa38: ;   {metadata('java/util/ArrayList')}
  0x00000214a641aa38: 4181 fa38 | e91f 000f | 85af 3500 | 0049 8d14 | ec48 8b6c 

  0x00000214a641aa4c: ;   {optimized virtual_call}
  0x00000214a641aa4c: 2420 90e8 

  0x00000214a641aa50: ; ImmutableOopMap {rbp=Oop [32]=Oop }
                      ;*invokeinterface clear {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@168 (line 238)
  0x00000214a641aa50: 0c40 8fff 

  0x00000214a641aa54: ;   {post_call_nop}
  0x00000214a641aa54: 0f1f 8400 | 4c81 00eb | 8b6d 5045 | 8b5c ec08 

  0x00000214a641aa64: ;   {metadata('java/util/ArrayList')}
  0x00000214a641aa64: 4181 fb38 | e91f 000f | 8597 3500 | 0049 8d14 | ec48 8b6c 

  0x00000214a641aa78: ;   {optimized virtual_call}
  0x00000214a641aa78: 2420 90e8 

  0x00000214a641aa7c: ; ImmutableOopMap {rbp=Oop [32]=Oop }
                      ;*invokeinterface clear {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@177 (line 239)
  0x00000214a641aa7c: e03f 8fff 

  0x00000214a641aa80: ;   {post_call_nop}
  0x00000214a641aa80: 0f1f 8400 | 7881 00ec | 8b6d 5445 | 8b54 ec08 

  0x00000214a641aa90: ;   {metadata('java/util/ArrayList')}
  0x00000214a641aa90: 4181 fa38 | e91f 000f | 857f 3500 | 0049 8d14 | ec48 8b6c 

  0x00000214a641aaa4: ;   {optimized virtual_call}
  0x00000214a641aaa4: 2420 90e8 

  0x00000214a641aaa8: ; ImmutableOopMap {rbp=Oop [32]=Oop }
                      ;*invokeinterface clear {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@186 (line 240)
  0x00000214a641aaa8: b43f 8fff 

  0x00000214a641aaac: ;   {post_call_nop}
  0x00000214a641aaac: 0f1f 8400 | a481 00ed | 8b6d 5845 | 8b5c ec08 

  0x00000214a641aabc: ;   {metadata('java/util/ArrayList')}
  0x00000214a641aabc: 4181 fb38 | e91f 000f | 8567 3500 | 0049 8d14 | ec48 8b6c 

  0x00000214a641aad0: ;   {optimized virtual_call}
  0x00000214a641aad0: 2420 90e8 

  0x00000214a641aad4: ; ImmutableOopMap {rbp=Oop [32]=Oop }
                      ;*invokeinterface clear {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@195 (line 241)
  0x00000214a641aad4: 883f 8fff 

  0x00000214a641aad8: ;   {post_call_nop}
  0x00000214a641aad8: 0f1f 8400 | d081 00ee | 8b6d 5c45 | 8b54 ec08 

  0x00000214a641aae8: ;   {metadata('java/util/ArrayList')}
  0x00000214a641aae8: 4181 fa38 | e91f 000f | 854f 3500 | 0049 8d14 | ec48 8b6c 

  0x00000214a641aafc: ;   {optimized virtual_call}
  0x00000214a641aafc: 2420 90e8 

  0x00000214a641ab00: ; ImmutableOopMap {rbp=Oop }
                      ;*invokeinterface clear {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@204 (line 242)
  0x00000214a641ab00: 5c3f 8fff 

  0x00000214a641ab04: ;   {post_call_nop}
  0x00000214a641ab04: 0f1f 8400 | fc81 00ef 

  0x00000214a641ab0c: ;   {optimized virtual_call}
  0x00000214a641ab0c: 488b d5e8 

  0x00000214a641ab10: ; ImmutableOopMap {}
                      ;*invokevirtual stop {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@210 (line 243)
  0x00000214a641ab10: 4c3f 8fff 

  0x00000214a641ab14: ;   {post_call_nop}
  0x00000214a641ab14: 0f1f 8400 | 0c82 00f0 | e97b abff | ff49 8b87 | c801 0000 | 4c8b d049 | 83c2 284d | 3b97 d801 
  0x00000214a641ab34: 0000 0f83 | 902b 0000 | 4d89 97c8 | 0100 0041 | 0f18 82c0 | 0000 0048 | c700 0100 

  0x00000214a641ab50: ;   {metadata('javafx/scene/Node$12')}
  0x00000214a641ab50: 0000 c740 | 0898 0a08 | 014c 8960 | 104c 8960 | 184c 8960 | 20c7 400c | 0100 0000 | 448b 9c24 
  0x00000214a641ab70: 9400 0000 | 4489 5824 | 4c8b 8c24 | 8800 0000 | 4d8d 4168 | 4180 7f48 | 000f 85fd | 9400 004c 
  0x00000214a641ab90: 8bd0 49c1 | ea03 4589 | 104d 8bd8 | 4c33 d849 | c1eb 150f | 841e 0000 | 004d 8bd8 | 49c1 eb09 
  0x00000214a641abb0: 49ba 00c0 | 6caa 1402 | 0000 4d03 | da41 803b | 020f 852d | 9500 00e9 | f8f4 ffff | 4489 4c24 
  0x00000214a641abd0: 50c5 fb11 | 6424 48c5 | fb11 5424 | 40c5 fb11 | 5c24 38c5 | fb11 4c24 | 3049 8bd2 | 48c1 e203 
  0x00000214a641abf0: 9048 b830 | e7d7 b414 

  0x00000214a641abf8: ;   {virtual_call}
  0x00000214a641abf8: 0200 00e8 

  0x00000214a641abfc: ; ImmutableOopMap {rbp=Oop [32]=Oop [80]=NarrowOop }
                      ;*invokeinterface get {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.beans.property.DoublePropertyBase::get@23 (line 134)
                      ; - javafx.scene.Node::getLayoutY@15 (line 2883)
                      ; - Alastor$1::handle@344 (line 256)
  0x00000214a641abfc: 6041 8fff 

  0x00000214a641ac00: ;   {post_call_nop}
  0x00000214a641ac00: 0f1f 8400 | f882 00f1 | 4c8b 5424 | 2041 8b4a | 6c85 c90f | 845b 3400 | 00c5 fb10 | 4c24 30c5 
  0x00000214a641ac20: fb10 5c24 | 38c5 fb10 | 5424 40c5 | fb10 6424 | 4844 8b4c | 2450 e9c3 | 9dff ffc5 | d157 edc5 
  0x00000214a641ac40: d35c e849 | 8b87 c801 | 0000 4c8b | d049 83c2 | 284d 3b97 | d801 0000 | 0f83 0e30 | 0000 4d89 
  0x00000214a641ac60: 97c8 0100 | 0041 0f18 | 82c0 0000 | 0048 c700 | 0100 0000 

  0x00000214a641ac74: ;   {metadata('javafx/scene/Node$11')}
  0x00000214a641ac74: c740 08f0 | 1408 014c | 8960 104c | 8960 184c | 8960 20c7 | 400c 0100 | 0000 8948 | 244d 8d44 
  0x00000214a641ac94: cc64 4180 | 7f48 000f | 85b4 9400 | 004c 8bd0 | 49c1 ea03 | 4589 104d | 8bd8 4c33 | d849 c1eb 
  0x00000214a641acb4: 150f 841e | 0000 004d | 8bd8 49c1 | eb09 49ba | 00c0 6caa | 1402 0000 | 4d03 da41 | 803b 020f 
  0x00000214a641acd4: 8520 9500 | 00e9 9b98 

  0x00000214a641acdc: ;   {section_word}
  0x00000214a641acdc: ffff c5fb | 582d 9a93 | ffff 498b | 87c8 0100 | 004c 8bd0 | 4983 c228 | 4d3b 97d8 | 0100 000f 
  0x00000214a641acfc: 83e0 2f00 | 004d 8997 | c801 0000 | 410f 1882 | c000 0000 | 48c7 0001 

  0x00000214a641ad14: ;   {metadata('javafx/scene/Node$11')}
  0x00000214a641ad14: 0000 00c7 | 4008 f014 | 0801 4c89 | 6010 4c89 | 6018 4c89 | 6020 c740 | 0c01 0000 | 0089 4824 
  0x00000214a641ad34: 4d8d 44cc | 6441 807f | 4800 0f85 | 5295 0000 | 4c8b d049 | c1ea 0345 | 8910 4d8b | d84c 33d8 
  0x00000214a641ad54: 49c1 eb15 | 0f84 1e00 | 0000 4d8b | d849 c1eb | 0949 ba00 | c06c aa14 | 0200 004d | 03da 4180 
  0x00000214a641ad74: 3b02 0f85 | be95 0000 | e90c 9aff | ff4c 8b5c | 2420 418b | 6b78 458b | 44ec 0c45 | 85c0 0f86 
  0x00000214a641ad94: f032 0000 | 458b 5cec | 1041 83fb | 087e 4545 | 85d2 0f84 | f032 0000 | 4b8d 14d4 

  0x00000214a641adb0: ;   {optimized virtual_call}
  0x00000214a641adb0: 6666 90e8 

  0x00000214a641adb4: ; ImmutableOopMap {[32]=Oop }
                      ;*invokevirtual nextBoolean {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1180 (line 317)
  0x00000214a641adb4: a83c 8fff 

  0x00000214a641adb8: ;   {post_call_nop}
  0x00000214a641adb8: 0f1f 8400 | b084 00f2 | 85c0 0f84 | 5807 0000 | 4c8b 5c24 | 2045 8b53 | 7c45 85d2 | 751c baf6 
  0x00000214a641add8: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641add8: ffff ffe8 

  0x00000214a641addc: ; ImmutableOopMap {}
                      ;*invokevirtual nextInt {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1217 (line 322)
  0x00000214a641addc: 8092 9bff 

  0x00000214a641ade0: ;   {post_call_nop}
  0x00000214a641ade0: 0f1f 8400 | d884 00f3 | 4585 d274 | e94c 8b5c | 2420 4533 | c94c 895c | 2420 4489 | 8c24 b000 
  0x00000214a641ae00: 0000 e9ab 

  0x00000214a641ae04: ;   {section_word}
  0x00000214a641ae04: adff ffc5 | fb58 2d71 | 92ff ff49 | 8b87 c801 | 0000 4c8b | d049 83c2 | 284d 3b97 | d801 0000 
  0x00000214a641ae24: 0f83 ae2f | 0000 4d89 | 97c8 0100 | 0041 0f18 | 82c0 0000 | 0048 c700 | 0100 0000 

  0x00000214a641ae40: ;   {metadata('javafx/scene/Node$12')}
  0x00000214a641ae40: c740 0898 | 0a08 014c | 8960 104c | 8960 184c | 8960 20c7 | 400c 0100 | 0000 4489 | 4824 4f8d 
  0x00000214a641ae60: 5ccc 6841 | 807f 4800 | 0f85 6995 | 0000 4c8b | d049 c1ea | 0345 8913 | 4d8b c34c | 33c0 49c1 
  0x00000214a641ae80: e815 0f84 | 1e00 0000 | 4d8b c349 | c1e8 0949 | ba00 c06c | aa14 0200 | 004d 03c2 | 4180 3802 
  0x00000214a641aea0: 0f85 d595 | 0000 e9be | 9dff ff89 | 4c24 50c5 | fb11 6424 | 48c5 fb11 | 5424 40c5 | fb11 5c24 
  0x00000214a641aec0: 38c5 fb11 | 4c24 3049 | 8bd0 48c1 | e203 6666 | 9048 b858 | e7d7 b414 

  0x00000214a641aed8: ;   {virtual_call}
  0x00000214a641aed8: 0200 00e8 

  0x00000214a641aedc: ; ImmutableOopMap {rbp=Oop [32]=Oop [80]=NarrowOop }
                      ;*invokeinterface get {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.beans.property.DoublePropertyBase::get@23 (line 134)
                      ; - javafx.scene.Node::getLayoutX@15 (line 2809)
                      ; - Alastor$1::handle@237 (line 248)
  0x00000214a641aedc: 803e 8fff 

  0x00000214a641aee0: ;   {post_call_nop}
  0x00000214a641aee0: 0f1f 8400 | d885 00f4 | 4c8b 5424 | 20c4 c17b | 5c6a 288b | 4c24 5045 | 8b54 cc64 | 4585 d20f 
  0x00000214a641af00: 843c 1000 | 00c5 fb10 | 4c24 30c5 | fb10 5c24 | 38c5 fb10 | 5424 40c5 | fb10 6424 | 48e9 5096 
  0x00000214a641af20: ffff 894c | 2450 c5fb | 1164 2448 | c5fb 1154 | 2440 c5fb | 115c 2438 | c5fb 114c | 2430 498b 
  0x00000214a641af40: d048 c1e2 | 0348 b880 | e7d7 b414 

  0x00000214a641af4c: ;   {virtual_call}
  0x00000214a641af4c: 0200 00e8 

  0x00000214a641af50: ; ImmutableOopMap {rbp=Oop [32]=Oop [80]=NarrowOop }
                      ;*invokeinterface get {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.beans.property.DoublePropertyBase::get@23 (line 134)
                      ; - javafx.scene.Node::getLayoutX@15 (line 2809)
                      ; - Alastor$1::handle@271 (line 249)
  0x00000214a641af50: 0c3e 8fff 

  0x00000214a641af54: ;   {post_call_nop}
  0x00000214a641af54: 0f1f 8400 | 4c86 00f5 | 4c8b 5424 | 20c4 c17b | 586a 288b | 4c24 5045 | 8b54 cc64 | 4585 d20f 
  0x00000214a641af74: 84e5 0f00 | 00c5 fb10 | 4c24 30c5 | fb10 5c24 | 38c5 fb10 | 5424 40c5 | fb10 6424 | 48e9 f097 
  0x00000214a641af94: ffff c5fb | 1164 2440 | c5fb 1154 | 2438 c5fb | 115c 2448 | c5fb 114c 

  0x00000214a641afac: ;   {metadata('java/util/ArrayList')}
  0x00000214a641afac: 2430 48ba | 38e9 1fb5 | 1402 0000 

  0x00000214a641afb8: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641afb8: 6666 90e8 

  0x00000214a641afbc: ; ImmutableOopMap {[32]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@2048 (line 381)
  0x00000214a641afbc: a087 9bff 

  0x00000214a641afc0: ;   {post_call_nop}
  0x00000214a641afc0: 0f1f 8400 | b886 00f6 | e96b 9eff | ffc5 fb11 | 4424 5844 | 894c 2450 | c5fb 1164 | 2448 c5fb 
  0x00000214a641afe0: 1154 2440 | c5fb 115c | 2438 c5fb | 114c 2430 | 498b d348 | c1e2 0366 | 9048 b8a8 | e7d7 b414 
  0x00000214a641b000: ;   {virtual_call}
  0x00000214a641b000: 0200 00e8 

  0x00000214a641b004: ; ImmutableOopMap {rbp=Oop [32]=Oop [80]=NarrowOop }
                      ;*invokeinterface get {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.beans.property.DoublePropertyBase::get@23 (line 134)
                      ; - javafx.scene.Node::getLayoutY@15 (line 2883)
                      ; - Alastor$1::handle@515 (line 268)
  0x00000214a641b004: 583d 8fff 

  0x00000214a641b008: ;   {post_call_nop}
  0x00000214a641b008: 0f1f 8400 | 0087 00f7 | c5fb 586c | 2458 448b | 4c24 5047 | 8b54 cc68 | 4585 d20f | 8477 1500 
  0x00000214a641b028: 00c5 fb10 | 4c24 30c5 | fb10 5c24 | 38c5 fb10 | 5424 40c5 | fb10 6424 | 48e9 1c9c | ffff baf6 
  0x00000214a641b048: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641b048: ffff ffe8 

  0x00000214a641b04c: ; ImmutableOopMap {}
                      ;*invokevirtual getMinX {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2149 (line 390)
  0x00000214a641b04c: 1090 9bff 

  0x00000214a641b050: ;   {post_call_nop}
  0x00000214a641b050: 0f1f 8400 | 4887 00f8 | baf6 ffff 

  0x00000214a641b05c: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641b05c: ff66 90e8 

  0x00000214a641b060: ; ImmutableOopMap {}
                      ;*invokevirtual getBoundsInParent {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2505 (line 417)
  0x00000214a641b060: fc8f 9bff 

  0x00000214a641b064: ;   {post_call_nop}
  0x00000214a641b064: 0f1f 8400 | 5c87 00f9 | baf6 ffff | ff48 8be8 

  0x00000214a641b074: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641b074: 6666 90e8 

  0x00000214a641b078: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual intersects {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2508 (line 417)
  0x00000214a641b078: e48f 9bff 

  0x00000214a641b07c: ;   {post_call_nop}
  0x00000214a641b07c: 0f1f 8400 | 7487 00fa | bade ffff | ffc5 fb10 | 4c24 28c5 | fb11 4c24 | 20c5 fb10 | 4c24 30c5 
  0x00000214a641b09c: fb11 4c24 | 28c5 fb11 | 4424 30c5 | fb10 4424 | 40c5 fb11 | 4424 38c5 | fb10 4424 | 48c5 fb11 
  0x00000214a641b0bc: 4424 404c | 8b44 2450 | 4c89 4424 | 4844 8954 | 2454 4489 

  0x00000214a641b0d0: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641b0d0: 5c24 58e8 

  0x00000214a641b0d4: ; ImmutableOopMap {rbp=Oop [72]=Oop [84]=NarrowOop }
                      ;*invokeinterface get {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2080 (line 383)
  0x00000214a641b0d4: 888f 9bff 

  0x00000214a641b0d8: ;   {post_call_nop}
  0x00000214a641b0d8: 0f1f 8400 | d087 00fb | bade ffff | ffc5 fb10 | 4424 28c5 | fb11 4424 | 20c5 fb10 | 4424 30c5 
  0x00000214a641b0f8: fb11 4424 | 28c5 fb10 | 4424 38c5 | fb11 4424 | 30c5 fb10 | 4424 40c5 | fb11 4424 | 38c5 fb10 
  0x00000214a641b118: 4424 48c5 | fb11 4424 | 404c 8b5c | 2450 4c89 | 5c24 4844 | 8b44 2478 | 4889 4424 | 5845 8bd8 
  0x00000214a641b138: 4489 5c24 | 6044 8954 | 2464 4489 

  0x00000214a641b144: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641b144: 5c24 68e8 

  0x00000214a641b148: ; ImmutableOopMap {rbp=Oop [72]=Oop [88]=Oop [100]=NarrowOop }
                      ;*invokeinterface get {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2102 (line 384)
  0x00000214a641b148: 148f 9bff 

  0x00000214a641b14c: ;   {post_call_nop}
  0x00000214a641b14c: 0f1f 8400 | 4488 00fc | bae4 ffff | ff48 8b6c | 2420 c5fb | 104c 2428 | c5fb 114c | 2420 c5fb 
  0x00000214a641b16c: 104c 2430 | c5fb 114c | 2428 c5fb | 104c 2438 | c5fb 114c | 2430 c5fb | 104c 2440 | c5fb 114c 
  0x00000214a641b18c: 2438 c5fb | 104c 2448 | c5fb 114c | 2440 4c8b | 5424 504c | 8954 2448 | 4c8b 5424 | 604c 8954 
  0x00000214a641b1ac: 2458 4c8b | 5424 684c | 8954 2460 | c5fb 1144 | 2468 4489 

  0x00000214a641b1c0: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641b1c0: 5c24 54e8 

  0x00000214a641b1c4: ; ImmutableOopMap {rbp=Oop [72]=Oop [84]=NarrowOop [88]=Oop [96]=Oop }
                      ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2141 (line 389)
  0x00000214a641b1c4: 988e 9bff 

  0x00000214a641b1c8: ;   {post_call_nop}
  0x00000214a641b1c8: 0f1f 8400 | c088 00fd | bade ffff | ffc5 fb10 | 4424 28c5 | fb11 4424 | 20c5 fb10 | 4424 30c5 
  0x00000214a641b1e8: fb11 4424 | 28c5 fb10 | 4424 38c5 | fb11 4424 | 30c5 fb10 | 4424 40c5 | fb11 4424 | 38c5 fb10 
  0x00000214a641b208: 4424 48c5 | fb11 4424 | 404c 8b5c | 2450 4c89 | 5c24 4844 | 8b44 2478 | 4c8b 5c24 | 604c 895c 
  0x00000214a641b228: 2458 4c8b | 5c24 684c | 895c 2460 | 4489 5424 | 5444 8944 

  0x00000214a641b23c: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641b23c: 2468 90e8 

  0x00000214a641b240: ; ImmutableOopMap {rbp=Oop [72]=Oop [84]=NarrowOop [88]=Oop [96]=Oop }
                      ;*invokeinterface get {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2233 (line 399)
  0x00000214a641b240: 1c8e 9bff 

  0x00000214a641b244: ;   {post_call_nop}
  0x00000214a641b244: 0f1f 8400 | 3c89 00fe | bade ffff | ff44 895c 

  0x00000214a641b254: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641b254: 245c 90e8 

  0x00000214a641b258: ; ImmutableOopMap {[32]=Oop [80]=Oop [92]=NarrowOop }
                      ;*invokeinterface size {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2066 (line 382)
  0x00000214a641b258: 048e 9bff 

  0x00000214a641b25c: ;   {post_call_nop}
  0x00000214a641b25c: 0f1f 8400 | 5489 00ff | bade ffff | ffc5 fb10 | 4424 28c5 | fb11 4424 | 20c5 fb10 | 4424 30c5 
  0x00000214a641b27c: fb11 4424 | 28c5 fb10 | 4424 38c5 | fb11 4424 | 30c5 fb10 | 4424 40c5 | fb11 4424 | 38c5 fb10 
  0x00000214a641b29c: 4424 48c5 | fb11 4424 | 404c 8b5c | 2450 4c89 | 5c24 4844 | 8b44 2478 | 4c8b 5c24 | 604c 895c 
  0x00000214a641b2bc: 2458 4c8b | 5c24 684c | 895c 2460 | 4489 5424 | 5444 8944 

  0x00000214a641b2d0: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641b2d0: 2468 90e8 

  0x00000214a641b2d4: ; ImmutableOopMap {rbp=Oop [72]=Oop [84]=NarrowOop [88]=Oop [96]=Oop }
                      ;*invokeinterface get {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2298 (line 402)
  0x00000214a641b2d4: 888d 9bff 

  0x00000214a641b2d8: ;   {post_call_nop}
  0x00000214a641b2d8: 0f1f 8400 | 0000 0000 | bade ffff | ffc5 fb10 | 4424 28c5 | fb11 4424 | 20c5 fb10 | 4424 30c5 
  0x00000214a641b2f8: fb11 4424 | 28c5 fb10 | 4424 38c5 | fb11 4424 | 30c5 fb10 | 4424 40c5 | fb11 4424 | 38c5 fb10 
  0x00000214a641b318: 4424 48c5 | fb11 4424 | 404c 8b5c | 2450 4c89 | 5c24 4844 | 8b44 2478 | 4c8b 5c24 | 604c 895c 
  0x00000214a641b338: 2458 4c8b | 5c24 684c | 895c 2460 | c5fb 1044 | 2470 c5fb | 1144 2468 | 4489 5424 | 5444 8944 
  0x00000214a641b358: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641b358: 2470 90e8 

  0x00000214a641b35c: ; ImmutableOopMap {rbp=Oop [72]=Oop [84]=NarrowOop [88]=Oop [96]=Oop }
                      ;*invokeinterface get {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2315 (line 402)
  0x00000214a641b35c: 008d 9bff 

  0x00000214a641b360: ;   {post_call_nop}
  0x00000214a641b360: 0f1f 8400 | 0000 0000 | bade ffff | ffc5 fb10 | 4424 28c5 | fb11 4424 | 20c5 fb10 | 4424 30c5 
  0x00000214a641b380: fb11 4424 | 28c5 fb10 | 4424 38c5 | fb11 4424 | 30c5 fb10 | 4424 40c5 | fb11 4424 | 38c5 fb10 
  0x00000214a641b3a0: 4424 48c5 | fb11 4424 | 404c 8b5c | 2450 4c89 | 5c24 484c | 8b5c 2460 | 4c89 5c24 | 584c 8b5c 
  0x00000214a641b3c0: 2468 4c89 | 5c24 60c5 | fb10 4424 | 70c5 fb11 | 4424 6844 | 8954 2454 

  0x00000214a641b3d8: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641b3d8: 6666 90e8 

  0x00000214a641b3dc: ; ImmutableOopMap {rbp=Oop [72]=Oop [84]=NarrowOop [88]=Oop [96]=Oop }
                      ;*invokeinterface get {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2332 (line 402)
  0x00000214a641b3dc: 808c 9bff 

  0x00000214a641b3e0: ;   {post_call_nop}
  0x00000214a641b3e0: 0f1f 8400 | 0000 0000 | bade ffff | ffc5 fb10 | 4c24 28c5 | fb11 4c24 | 20c5 fb10 | 4c24 30c5 
  0x00000214a641b400: fb11 4c24 | 28c5 fb10 | 4c24 38c5 | fb11 4c24 | 30c5 fb10 | 4c24 40c5 | fb11 4c24 | 38c5 fb10 
  0x00000214a641b420: 4c24 48c5 | fb11 4c24 | 404c 8b54 | 2450 4c89 | 5424 484c | 8b54 2460 | 4c89 5424 | 584c 8b54 
  0x00000214a641b440: 2468 4c89 | 5424 60c5 | fb10 4c24 | 70c5 fb11 | 4c24 68c5 | fb11 4424 | 7044 895c 

  0x00000214a641b45c: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641b45c: 2454 90e8 

  0x00000214a641b460: ; ImmutableOopMap {rbp=Oop [72]=Oop [84]=NarrowOop [88]=Oop [96]=Oop }
                      ;*invokeinterface get {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2350 (line 402)
  0x00000214a641b460: fc8b 9bff 

  0x00000214a641b464: ;   {post_call_nop}
  0x00000214a641b464: 0f1f 8400 | 0000 0000 | bade ffff | ffc5 fb10 | 4424 28c5 | fb11 4424 | 20c5 fb10 | 4424 30c5 
  0x00000214a641b484: fb11 4424 | 28c5 fb10 | 4424 38c5 | fb11 4424 | 30c5 fb10 | 4424 40c5 | fb11 4424 | 38c5 fb10 
  0x00000214a641b4a4: 4424 48c5 | fb11 4424 | 404c 8b5c | 2450 4c89 | 5c24 484c | 8b5c 2460 | 4c89 5c24 | 584c 8b5c 
  0x00000214a641b4c4: 2468 4c89 | 5c24 60c5 | fb10 4424 | 70c5 fb11 | 4424 6844 | 8954 2454 

  0x00000214a641b4dc: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641b4dc: 6666 90e8 

  0x00000214a641b4e0: ; ImmutableOopMap {rbp=Oop [72]=Oop [84]=NarrowOop [88]=Oop [96]=Oop }
                      ;*invokeinterface get {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2371 (line 402)
  0x00000214a641b4e0: 7c8b 9bff 

  0x00000214a641b4e4: ;   {post_call_nop}
  0x00000214a641b4e4: 0f1f 8400 | 0000 0000 | c5f9 2e44 | 2458 bdff | ffff ff0f | 8a0e 0000 | 000f 8208 | 0000 0040 
  0x00000214a641b504: 0f95 c540 | 0fb6 edba | 4dff ffff 

  0x00000214a641b510: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641b510: 6666 90e8 

  0x00000214a641b514: ; ImmutableOopMap {[80]=Oop [96]=Oop [112]=Oop }
                      ;*ifle {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) Alastor$1::handle@2480 (line 412)
  0x00000214a641b514: 488b 9bff 

  0x00000214a641b518: ;   {post_call_nop}
  0x00000214a641b518: 0f1f 8400 | 0000 0000 | 448b 5c24 | 5845 85db | 0f84 ba0b | 0000 41bb | 0100 0000 | e951 b0ff 
  0x00000214a641b538: ffc5 fb11 

  0x00000214a641b53c: ;   {metadata('javafx/scene/shape/Rectangle')}
  0x00000214a641b53c: 5424 5848 | ba00 d002 | b614 0200 

  0x00000214a641b548: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641b548: 0066 90e8 

  0x00000214a641b54c: ; ImmutableOopMap {[32]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@1675 (line 353)
  0x00000214a641b54c: 1082 9bff 

  0x00000214a641b550: ;   {post_call_nop}
  0x00000214a641b550: 0f1f 8400 | 0000 0000 | 4c8b c0e9 | 9fb2 ffff 

  0x00000214a641b560: ;   {metadata('javafx/scene/shape/Polygon')}
  0x00000214a641b560: 48ba b8e4 | 23b6 1402 

  0x00000214a641b568: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641b568: 0000 90e8 

  0x00000214a641b56c: ; ImmutableOopMap {[32]=Oop [104]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@1706 (line 356)
  0x00000214a641b56c: f081 9bff 

  0x00000214a641b570: ;   {post_call_nop}
  0x00000214a641b570: 0f1f 8400 | 0000 0000 | 4c8b d8e9 | 6cb3 ffff 

  0x00000214a641b580: ;   {metadata('java/lang/Double'[])}
  0x00000214a641b580: 48ba 4864 | 07b6 1402 | 0000 41b8 | 0600 0000 

  0x00000214a641b590: ;   {runtime_call C2 Runtime new_array}
  0x00000214a641b590: 6666 90e8 

  0x00000214a641b594: ; ImmutableOopMap {[32]=Oop [104]=Oop [120]=Oop [128]=Oop }
                      ;*anewarray {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@1722 (line 357)
  0x00000214a641b594: 4894 9bff 

  0x00000214a641b598: ;   {post_call_nop}
  0x00000214a641b598: 0f1f 8400 | 0000 0000 | e9de b3ff 

  0x00000214a641b5a4: ;   {metadata('javafx/scene/Node'[])}
  0x00000214a641b5a4: ff48 baf0 | ca17 b614 | 0200 0041 | b802 0000 

  0x00000214a641b5b4: ;   {runtime_call C2 Runtime new_array}
  0x00000214a641b5b4: 0066 90e8 

  0x00000214a641b5b8: ; ImmutableOopMap {[32]=Oop [104]=Oop [120]=Oop [128]=Oop }
                      ;*anewarray {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@1808 (line 361)
  0x00000214a641b5b8: 2494 9bff 

  0x00000214a641b5bc: ;   {post_call_nop}
  0x00000214a641b5bc: 0f1f 8400 | 0000 0000 | 4c8b c0e9 | 55b7 ffff 

  0x00000214a641b5cc: ;   {metadata('javafx/scene/Group')}
  0x00000214a641b5cc: 48ba 38d8 | 1cb6 1402 

  0x00000214a641b5d4: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641b5d4: 0000 90e8 

  0x00000214a641b5d8: ; ImmutableOopMap {[32]=Oop [104]=Oop [120]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@1803 (line 361)
  0x00000214a641b5d8: 8481 9bff 

  0x00000214a641b5dc: ;   {post_call_nop}
  0x00000214a641b5dc: 0f1f 8400 | 0000 0000 | 4c8b d8e9 | d4b6 ffff | 4489 5c24 | 74c5 7b11 | 8424 8000 | 0000 c5fb 
  0x00000214a641b5fc: 117c 2478 | c5fb 1174 | 2460 c5fb | 116c 2458 | c5fb 1164 | 2450 c5fb | 1154 2440 | c5fb 115c 
  0x00000214a641b61c: 2448 c5fb | 114c 2438 

  0x00000214a641b624: ;   {metadata('javafx/scene/shape/Polygon')}
  0x00000214a641b624: 48ba b8e4 | 23b6 1402 | 0000 488b 

  0x00000214a641b630: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641b630: 6c24 30e8 

  0x00000214a641b634: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@649 (line 284)
  0x00000214a641b634: 2881 9bff 

  0x00000214a641b638: ;   {post_call_nop}
  0x00000214a641b638: 0f1f 8400 | 0000 0000 | 4c8b d0e9 | 0dc1 ffff 

  0x00000214a641b648: ;   {metadata('com/sun/javafx/geom/RectBounds')}
  0x00000214a641b648: 48ba 18ef | 01b6 1402 | 0000 488b 

  0x00000214a641b654: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641b654: 6c24 30e8 

  0x00000214a641b658: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::<init>@38 (line 788)
                      ; - javafx.scene.shape.Shape::<init>@1 (line 174)
                      ; - javafx.scene.shape.Polygon::<init>@1 (line 96)
                      ; - Alastor$1::handle@653 (line 284)
  0x00000214a641b658: 0481 9bff 

  0x00000214a641b65c: ;   {post_call_nop}
  0x00000214a641b65c: 0f1f 8400 | 0000 0000 | 488b d8e9 | 32c2 ffff 

  0x00000214a641b66c: ;   {metadata('java/util/ArrayList')}
  0x00000214a641b66c: 48ba 38e9 | 1fb5 1402 | 0000 4c8b | 5424 304c | 8954 2420 

  0x00000214a641b680: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641b680: 6666 90e8 

  0x00000214a641b684: ; ImmutableOopMap {rbp=Oop [32]=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.javafx.collections.TrackableObservableList::<init>@1 (line 42)
                      ; - javafx.scene.Node$4::<init>@6 (line 1301)
                      ; - javafx.scene.Node::<init>@84 (line 1301)
                      ; - javafx.scene.shape.Shape::<init>@1 (line 174)
                      ; - javafx.scene.shape.Polygon::<init>@1 (line 96)
                      ; - Alastor$1::handle@653 (line 284)
  0x00000214a641b684: d880 9bff 

  0x00000214a641b688: ;   {post_call_nop}
  0x00000214a641b688: 0f1f 8400 | 0000 0000 | e9db c3ff 

  0x00000214a641b694: ;   {metadata('com/sun/javafx/geom/RectBounds')}
  0x00000214a641b694: ff48 ba18 | ef01 b614 | 0200 0048 | 8b6c 2430 

  0x00000214a641b6a4: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641b6a4: 6666 90e8 

  0x00000214a641b6a8: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::<init>@19 (line 787)
                      ; - javafx.scene.shape.Shape::<init>@1 (line 174)
                      ; - javafx.scene.shape.Polygon::<init>@1 (line 96)
                      ; - Alastor$1::handle@653 (line 284)
  0x00000214a641b6a8: b480 9bff 

  0x00000214a641b6ac: ;   {post_call_nop}
  0x00000214a641b6ac: 0f1f 8400 | 0000 0000 | 488b c8e9 | 49c1 ffff 

  0x00000214a641b6bc: ;   {metadata('javafx/scene/Node$ReadOnlyObjectWrapperManualFire')}
  0x00000214a641b6bc: 48ba 08b3 | 0ab6 1402 | 0000 488b 

  0x00000214a641b6c8: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641b6c8: 6c24 30e8 

  0x00000214a641b6cc: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::<init>@67 (line 1072)
                      ; - javafx.scene.shape.Shape::<init>@1 (line 174)
                      ; - javafx.scene.shape.Polygon::<init>@1 (line 96)
                      ; - Alastor$1::handle@653 (line 284)
  0x00000214a641b6cc: 9080 9bff 

  0x00000214a641b6d0: ;   {post_call_nop}
  0x00000214a641b6d0: 0f1f 8400 | 0000 0000 | e98a c2ff 

  0x00000214a641b6dc: ;   {metadata('javafx/scene/Node$4')}
  0x00000214a641b6dc: ff48 ba10 | b80a b614 | 0200 0048 | 8b6c 2430 

  0x00000214a641b6ec: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641b6ec: 6666 90e8 

  0x00000214a641b6f0: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::<init>@79 (line 1301)
                      ; - javafx.scene.shape.Shape::<init>@1 (line 174)
                      ; - javafx.scene.shape.Polygon::<init>@1 (line 96)
                      ; - Alastor$1::handle@653 (line 284)
  0x00000214a641b6f0: 6c80 9bff 

  0x00000214a641b6f4: ;   {post_call_nop}
  0x00000214a641b6f4: 0f1f 8400 | 0000 0000 | 488b e8e9 | 24c3 ffff 

  0x00000214a641b704: ;   {metadata('com/sun/javafx/collections/TrackableObservableList$$Lambda+0x00000214b60ac120')}
  0x00000214a641b704: 48ba 20c1 | 0ab6 1402 | 0000 4c8b | 5424 304c | 8954 2420 

  0x00000214a641b718: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641b718: 6666 90e8 

  0x00000214a641b71c: ; ImmutableOopMap {rbp=Oop [32]=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop }
                      ;*invokevirtual allocateInstance {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.lang.invoke.DirectMethodHandle::allocateInstance@12 (line 506)
                      ; - java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial@1
                      ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                      ; - com.sun.javafx.collections.TrackableObservableList::<init>@13 (line 43)
                      ; - javafx.scene.Node$4::<init>@6 (line 1301)
                      ; - javafx.scene.Node::<init>@84 (line 1301)
                      ; - javafx.scene.shape.Shape::<init>@1 (line 174)
                      ; - javafx.scene.shape.Polygon::<init>@1 (line 96)
                      ; - Alastor$1::handle@653 (line 284)
  0x00000214a641b71c: 4080 9bff 

  0x00000214a641b720: ;   {post_call_nop}
  0x00000214a641b720: 0f1f 8400 | 0000 0000 | 4c8b c0e9 | d2c3 ffff 

  0x00000214a641b730: ;   {metadata('javafx/scene/Node$18')}
  0x00000214a641b730: 48ba 2094 | 03b6 1402 | 0000 488b 

  0x00000214a641b73c: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641b73c: 6c24 30e8 

  0x00000214a641b740: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::<init>@179 (line 8371)
                      ; - javafx.scene.shape.Shape::<init>@1 (line 174)
                      ; - javafx.scene.shape.Polygon::<init>@1 (line 96)
                      ; - Alastor$1::handle@653 (line 284)
  0x00000214a641b740: 1c80 9bff 

  0x00000214a641b744: ;   {post_call_nop}
  0x00000214a641b744: 0f1f 8400 | 0000 0000 | 488b d8e9 | c8c7 ffff 

  0x00000214a641b754: ;   {metadata('com/sun/javafx/geom/RectBounds')}
  0x00000214a641b754: 48ba 18ef | 01b6 1402 | 0000 488b 

  0x00000214a641b760: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641b760: 6c24 30e8 

  0x00000214a641b764: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::<init>@131 (line 3690)
                      ; - javafx.scene.shape.Shape::<init>@1 (line 174)
                      ; - javafx.scene.shape.Polygon::<init>@1 (line 96)
                      ; - Alastor$1::handle@653 (line 284)
  0x00000214a641b764: f87f 9bff 

  0x00000214a641b768: ;   {post_call_nop}
  0x00000214a641b768: 0f1f 8400 | 0000 0000 | 488b d8e9 | 36c6 ffff 

  0x00000214a641b778: ;   {metadata('javafx/scene/Node$17')}
  0x00000214a641b778: 48ba 0090 | 03b6 1402 | 0000 488b 

  0x00000214a641b784: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641b784: 6c24 30e8 

  0x00000214a641b788: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::<init>@167 (line 8313)
                      ; - javafx.scene.shape.Shape::<init>@1 (line 174)
                      ; - javafx.scene.shape.Polygon::<init>@1 (line 96)
                      ; - Alastor$1::handle@653 (line 284)
  0x00000214a641b788: d47f 9bff 

  0x00000214a641b78c: ;   {post_call_nop}
  0x00000214a641b78c: 0f1f 8400 | 0000 0000 | 4c8b d0e9 | dfc6 ffff 

  0x00000214a641b79c: ;   {metadata('javafx/scene/Node$13')}
  0x00000214a641b79c: 48ba e8b8 | 03b6 1402 | 0000 488b 

  0x00000214a641b7a8: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641b7a8: 6c24 30e8 

  0x00000214a641b7ac: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::<init>@96 (line 3567)
                      ; - javafx.scene.shape.Shape::<init>@1 (line 174)
                      ; - javafx.scene.shape.Polygon::<init>@1 (line 96)
                      ; - Alastor$1::handle@653 (line 284)
  0x00000214a641b7ac: b07f 9bff 

  0x00000214a641b7b0: ;   {post_call_nop}
  0x00000214a641b7b0: 0f1f 8400 | 0000 0000 | 488b c8e9 | 56c4 ffff 

  0x00000214a641b7c0: ;   {metadata('com/sun/javafx/css/PseudoClassState')}
  0x00000214a641b7c0: 48ba d8d6 | 09b6 1402 | 0000 488b 

  0x00000214a641b7cc: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641b7cc: 6c24 30e8 

  0x00000214a641b7d0: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::<init>@225 (line 9798)
                      ; - javafx.scene.shape.Shape::<init>@1 (line 174)
                      ; - javafx.scene.shape.Polygon::<init>@1 (line 96)
                      ; - Alastor$1::handle@653 (line 284)
  0x00000214a641b7d0: 8c7f 9bff 

  0x00000214a641b7d4: ;   {post_call_nop}
  0x00000214a641b7d4: 0f1f 8400 | 0000 0000 | 488b d0e9 | f5c8 ffff 

  0x00000214a641b7e4: ;   {metadata('javafx/scene/Node$FocusWithinProperty')}
  0x00000214a641b7e4: 48ba 182c | 08b6 1402 | 0000 488b 

  0x00000214a641b7f0: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641b7f0: 6c24 30e8 

  0x00000214a641b7f4: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::<init>@191 (line 8398)
                      ; - javafx.scene.shape.Shape::<init>@1 (line 174)
                      ; - javafx.scene.shape.Polygon::<init>@1 (line 96)
                      ; - Alastor$1::handle@653 (line 284)
  0x00000214a641b7f4: 687f 9bff 

  0x00000214a641b7f8: ;   {post_call_nop}
  0x00000214a641b7f8: 0f1f 8400 | 0000 0000 | e9b9 c7ff 

  0x00000214a641b804: ;   {metadata('com/sun/javafx/geom/RectBounds')}
  0x00000214a641b804: ff48 ba18 | ef01 b614 | 0200 0048 | 8b6c 2430 

  0x00000214a641b814: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641b814: 6666 90e8 

  0x00000214a641b818: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::<init>@120 (line 3683)
                      ; - javafx.scene.shape.Shape::<init>@1 (line 174)
                      ; - javafx.scene.shape.Polygon::<init>@1 (line 96)
                      ; - Alastor$1::handle@653 (line 284)
  0x00000214a641b818: 447f 9bff 

  0x00000214a641b81c: ;   {post_call_nop}
  0x00000214a641b81c: 0f1f 8400 | 0000 0000 | 4c8b d0e9 | e6c4 ffff 

  0x00000214a641b82c: ;   {metadata('javafx/scene/shape/Shape$3')}
  0x00000214a641b82c: 48ba 7067 | 0ab6 1402 | 0000 488b 

  0x00000214a641b838: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641b838: 6c24 30e8 

  0x00000214a641b83c: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.shape.Shape::<init>@12 (line 490)
                      ; - javafx.scene.shape.Polygon::<init>@1 (line 96)
                      ; - Alastor$1::handle@653 (line 284)
  0x00000214a641b83c: 207f 9bff 

  0x00000214a641b840: ;   {post_call_nop}
  0x00000214a641b840: 0f1f 8400 | 0000 0000 | 488b e8e9 | f6c9 ffff 

  0x00000214a641b850: ;   {metadata('javafx/beans/WeakInvalidationListener')}
  0x00000214a641b850: 48ba 10d1 | 0ab6 1402 | 0000 4c8b | 5424 304c | 8954 2420 

  0x00000214a641b864: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641b864: 6666 90e8 

  0x00000214a641b868: ; ImmutableOopMap {rbp=Oop [32]=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.javafx.beans.event.AbstractNotifyListener::<init>@5 (line 61)
                      ; - javafx.scene.shape.Shape$3::<init>@6 (line 491)
                      ; - javafx.scene.shape.Shape::<init>@17 (line 490)
                      ; - javafx.scene.shape.Polygon::<init>@1 (line 96)
                      ; - Alastor$1::handle@653 (line 284)
  0x00000214a641b868: f47e 9bff 

  0x00000214a641b86c: ;   {post_call_nop}
  0x00000214a641b86c: 0f1f 8400 | 0000 0000 | 4c8b d8e9 | 13ca ffff 

  0x00000214a641b87c: ;   {metadata('java/lang/ref/WeakReference')}
  0x00000214a641b87c: 48ba 10af | 19b5 1402 

  0x00000214a641b884: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641b884: 0000 90e8 

  0x00000214a641b888: ; ImmutableOopMap {rbp=Oop [32]=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.beans.WeakInvalidationListener::<init>@19 (line 64)
                      ; - com.sun.javafx.beans.event.AbstractNotifyListener::<init>@10 (line 61)
                      ; - javafx.scene.shape.Shape$3::<init>@6 (line 491)
                      ; - javafx.scene.shape.Shape::<init>@17 (line 490)
                      ; - javafx.scene.shape.Polygon::<init>@1 (line 96)
                      ; - Alastor$1::handle@653 (line 284)
  0x00000214a641b888: d47e 9bff 

  0x00000214a641b88c: ;   {post_call_nop}
  0x00000214a641b88c: 0f1f 8400 | 0000 0000 | e93b caff 

  0x00000214a641b898: ;   {metadata('com/sun/javafx/geom/Path2D')}
  0x00000214a641b898: ff48 baf8 | 1401 b614 | 0200 0048 | 8b6c 2430 

  0x00000214a641b8a8: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641b8a8: 6666 90e8 

  0x00000214a641b8ac: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.shape.Polygon::<init>@5 (line 86)
                      ; - Alastor$1::handle@653 (line 284)
  0x00000214a641b8ac: b07e 9bff 

  0x00000214a641b8b0: ;   {post_call_nop}
  0x00000214a641b8b0: 0f1f 8400 | 0000 0000 | 488b e8e9 | bccb ffff | 41b8 1400 

  0x00000214a641b8c4: ;   {metadata({type array byte})}
  0x00000214a641b8c4: 0000 48ba | 187e 16b5 | 1402 0000 | 4c8b 5424 | 304c 8954 

  0x00000214a641b8d8: ;   {runtime_call C2 Runtime new_array}
  0x00000214a641b8d8: 2420 90e8 

  0x00000214a641b8dc: ; ImmutableOopMap {rbp=Oop [32]=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop }
                      ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.javafx.geom.Path2D::<init>@11 (line 149)
                      ; - com.sun.javafx.geom.Path2D::<init>@4 (line 117)
                      ; - javafx.scene.shape.Polygon::<init>@9 (line 86)
                      ; - Alastor$1::handle@653 (line 284)
  0x00000214a641b8dc: 0091 9bff 

  0x00000214a641b8e0: ;   {post_call_nop}
  0x00000214a641b8e0: 0f1f 8400 | 0000 0000 | 488b c8e9 | fdcb ffff 

  0x00000214a641b8f0: ;   {metadata({type array float})}
  0x00000214a641b8f0: 48ba 087a | 16b5 1402 | 0000 41b8 | 2800 0000 | 4c8b 5424 | 304c 8954 

  0x00000214a641b908: ;   {runtime_call C2 Runtime new_array}
  0x00000214a641b908: 2420 90e8 

  0x00000214a641b90c: ; ImmutableOopMap {rbp=Oop [32]=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop }
                      ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.javafx.geom.Path2D::<init>@20 (line 150)
                      ; - com.sun.javafx.geom.Path2D::<init>@4 (line 117)
                      ; - javafx.scene.shape.Polygon::<init>@9 (line 86)
                      ; - Alastor$1::handle@653 (line 284)
  0x00000214a641b90c: d090 9bff 

  0x00000214a641b910: ;   {post_call_nop}
  0x00000214a641b910: 0f1f 8400 | 0000 0000 | 488b d8e9 | b3cc ffff 

  0x00000214a641b920: ;   {metadata('java/util/ArrayList')}
  0x00000214a641b920: 48ba 38e9 | 1fb5 1402 | 0000 4c8b | 5424 304c | 8954 2420 

  0x00000214a641b934: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641b934: 6666 90e8 

  0x00000214a641b938: ; ImmutableOopMap {rbp=Oop [32]=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.javafx.collections.TrackableObservableList::<init>@1 (line 42)
                      ; - javafx.scene.shape.Polygon$2::<init>@6 (line 116)
                      ; - javafx.scene.shape.Polygon::<init>@25 (line 116)
                      ; - Alastor$1::handle@653 (line 284)
  0x00000214a641b938: 247e 9bff 

  0x00000214a641b93c: ;   {post_call_nop}
  0x00000214a641b93c: 0f1f 8400 | 0000 0000 | e9bc cdff 

  0x00000214a641b948: ;   {metadata('javafx/scene/shape/Polygon$2')}
  0x00000214a641b948: ff48 ba38 | f423 b614 | 0200 0048 | 8b6c 2430 

  0x00000214a641b958: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641b958: 6666 90e8 

  0x00000214a641b95c: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.shape.Polygon::<init>@20 (line 116)
                      ; - Alastor$1::handle@653 (line 284)
  0x00000214a641b95c: 007e 9bff 

  0x00000214a641b960: ;   {post_call_nop}
  0x00000214a641b960: 0f1f 8400 | 0000 0000 | 488b e8e9 | 4dcd ffff 

  0x00000214a641b970: ;   {metadata('com/sun/javafx/collections/TrackableObservableList$$Lambda+0x00000214b60ac120')}
  0x00000214a641b970: 48ba 20c1 | 0ab6 1402 | 0000 4c8b | 5424 304c | 8954 2420 

  0x00000214a641b984: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641b984: 6666 90e8 

  0x00000214a641b988: ; ImmutableOopMap {rbp=Oop [32]=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop }
                      ;*invokevirtual allocateInstance {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.lang.invoke.DirectMethodHandle::allocateInstance@12 (line 506)
                      ; - java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial@1
                      ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                      ; - com.sun.javafx.collections.TrackableObservableList::<init>@13 (line 43)
                      ; - javafx.scene.shape.Polygon$2::<init>@6 (line 116)
                      ; - javafx.scene.shape.Polygon::<init>@25 (line 116)
                      ; - Alastor$1::handle@653 (line 284)
  0x00000214a641b988: d47d 9bff 

  0x00000214a641b98c: ;   {post_call_nop}
  0x00000214a641b98c: 0f1f 8400 | 0000 0000 | 4c8b c0e9 | fbcd ffff 

  0x00000214a641b99c: ;   {metadata('javafx/scene/shape/Rectangle')}
  0x00000214a641b99c: 48ba 00d0 | 02b6 1402 | 0000 488b 

  0x00000214a641b9a8: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641b9a8: 6c24 30e8 

  0x00000214a641b9ac: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@658 (line 285)
  0x00000214a641b9ac: b07d 9bff 

  0x00000214a641b9b0: ;   {post_call_nop}
  0x00000214a641b9b0: 0f1f 8400 | 0000 0000 | 4c8b d8e9 | 2fcf ffff 

  0x00000214a641b9c0: ;   {metadata('com/sun/javafx/geom/RectBounds')}
  0x00000214a641b9c0: 48ba 18ef | 01b6 1402 | 0000 488b 

  0x00000214a641b9cc: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641b9cc: 6c24 30e8 

  0x00000214a641b9d0: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::<init>@38 (line 788)
                      ; - javafx.scene.shape.Shape::<init>@1 (line 174)
                      ; - javafx.scene.shape.Rectangle::<init>@1 (line 126)
                      ; - Alastor$1::handle@668 (line 285)
  0x00000214a641b9d0: 8c7d 9bff 

  0x00000214a641b9d4: ;   {post_call_nop}
  0x00000214a641b9d4: 0f1f 8400 | 0000 0000 | 488b d8e9 | 56d0 ffff 

  0x00000214a641b9e4: ;   {metadata('javafx/scene/Node$ReadOnlyObjectWrapperManualFire')}
  0x00000214a641b9e4: 48ba 08b3 | 0ab6 1402 | 0000 488b 

  0x00000214a641b9f0: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641b9f0: 6c24 30e8 

  0x00000214a641b9f4: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::<init>@67 (line 1072)
                      ; - javafx.scene.shape.Shape::<init>@1 (line 174)
                      ; - javafx.scene.shape.Rectangle::<init>@1 (line 126)
                      ; - Alastor$1::handle@668 (line 285)
  0x00000214a641b9f4: 687d 9bff 

  0x00000214a641b9f8: ;   {post_call_nop}
  0x00000214a641b9f8: 0f1f 8400 | 0000 0000 | e9fd d0ff 

  0x00000214a641ba04: ;   {metadata('javafx/scene/Node$4')}
  0x00000214a641ba04: ff48 ba10 | b80a b614 | 0200 0048 | 8b6c 2430 

  0x00000214a641ba14: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641ba14: 6666 90e8 

  0x00000214a641ba18: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::<init>@79 (line 1301)
                      ; - javafx.scene.shape.Shape::<init>@1 (line 174)
                      ; - javafx.scene.shape.Rectangle::<init>@1 (line 126)
                      ; - Alastor$1::handle@668 (line 285)
  0x00000214a641ba18: 447d 9bff 

  0x00000214a641ba1c: ;   {post_call_nop}
  0x00000214a641ba1c: 0f1f 8400 | 0000 0000 | 488b e8e9 | 97d1 ffff 

  0x00000214a641ba2c: ;   {metadata('java/util/ArrayList')}
  0x00000214a641ba2c: 48ba 38e9 | 1fb5 1402 | 0000 4c8b | 5424 304c | 8954 2420 

  0x00000214a641ba40: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641ba40: 6666 90e8 

  0x00000214a641ba44: ; ImmutableOopMap {rbp=Oop [32]=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.javafx.collections.TrackableObservableList::<init>@1 (line 42)
                      ; - javafx.scene.Node$4::<init>@6 (line 1301)
                      ; - javafx.scene.Node::<init>@84 (line 1301)
                      ; - javafx.scene.shape.Shape::<init>@1 (line 174)
                      ; - javafx.scene.shape.Rectangle::<init>@1 (line 126)
                      ; - Alastor$1::handle@668 (line 285)
  0x00000214a641ba44: 187d 9bff 

  0x00000214a641ba48: ;   {post_call_nop}
  0x00000214a641ba48: 0f1f 8400 | 0000 0000 | e9b6 d1ff 

  0x00000214a641ba54: ;   {metadata('com/sun/javafx/geom/RectBounds')}
  0x00000214a641ba54: ff48 ba18 | ef01 b614 | 0200 0048 | 8b6c 2430 

  0x00000214a641ba64: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641ba64: 6666 90e8 

  0x00000214a641ba68: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::<init>@19 (line 787)
                      ; - javafx.scene.shape.Shape::<init>@1 (line 174)
                      ; - javafx.scene.shape.Rectangle::<init>@1 (line 126)
                      ; - Alastor$1::handle@668 (line 285)
  0x00000214a641ba68: f47c 9bff 

  0x00000214a641ba6c: ;   {post_call_nop}
  0x00000214a641ba6c: 0f1f 8400 | 0000 0000 | 488b c8e9 | 25cf ffff 

  0x00000214a641ba7c: ;   {metadata('com/sun/javafx/collections/TrackableObservableList$$Lambda+0x00000214b60ac120')}
  0x00000214a641ba7c: 48ba 20c1 | 0ab6 1402 | 0000 4c8b | 5424 304c | 8954 2420 

  0x00000214a641ba90: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641ba90: 6666 90e8 

  0x00000214a641ba94: ; ImmutableOopMap {rbp=Oop [32]=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop }
                      ;*invokevirtual allocateInstance {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.lang.invoke.DirectMethodHandle::allocateInstance@12 (line 506)
                      ; - java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial@1
                      ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                      ; - com.sun.javafx.collections.TrackableObservableList::<init>@13 (line 43)
                      ; - javafx.scene.Node$4::<init>@6 (line 1301)
                      ; - javafx.scene.Node::<init>@84 (line 1301)
                      ; - javafx.scene.shape.Shape::<init>@1 (line 174)
                      ; - javafx.scene.shape.Rectangle::<init>@1 (line 126)
                      ; - Alastor$1::handle@668 (line 285)
  0x00000214a641ba94: c87c 9bff 

  0x00000214a641ba98: ;   {post_call_nop}
  0x00000214a641ba98: 0f1f 8400 | 0000 0000 | 4c8b c0e9 | f5d1 ffff 

  0x00000214a641baa8: ;   {metadata('com/sun/javafx/css/PseudoClassState')}
  0x00000214a641baa8: 48ba d8d6 | 09b6 1402 | 0000 488b 

  0x00000214a641bab4: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641bab4: 6c24 30e8 

  0x00000214a641bab8: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::<init>@225 (line 9798)
                      ; - javafx.scene.shape.Shape::<init>@1 (line 174)
                      ; - javafx.scene.shape.Rectangle::<init>@1 (line 126)
                      ; - Alastor$1::handle@668 (line 285)
  0x00000214a641bab8: a47c 9bff 

  0x00000214a641babc: ;   {post_call_nop}
  0x00000214a641babc: 0f1f 8400 | 0000 0000 | 488b d0e9 | a9d7 ffff 

  0x00000214a641bacc: ;   {metadata('javafx/scene/Node$18')}
  0x00000214a641bacc: 48ba 2094 | 03b6 1402 | 0000 488b 

  0x00000214a641bad8: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641bad8: 6c24 30e8 

  0x00000214a641badc: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::<init>@179 (line 8371)
                      ; - javafx.scene.shape.Shape::<init>@1 (line 174)
                      ; - javafx.scene.shape.Rectangle::<init>@1 (line 126)
                      ; - Alastor$1::handle@668 (line 285)
  0x00000214a641badc: 807c 9bff 

  0x00000214a641bae0: ;   {post_call_nop}
  0x00000214a641bae0: 0f1f 8400 | 0000 0000 | 488b d8e9 | c6d5 ffff 

  0x00000214a641baf0: ;   {metadata('javafx/scene/Node$13')}
  0x00000214a641baf0: 48ba e8b8 | 03b6 1402 | 0000 488b 

  0x00000214a641bafc: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641bafc: 6c24 30e8 

  0x00000214a641bb00: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::<init>@96 (line 3567)
                      ; - javafx.scene.shape.Shape::<init>@1 (line 174)
                      ; - javafx.scene.shape.Rectangle::<init>@1 (line 126)
                      ; - Alastor$1::handle@668 (line 285)
  0x00000214a641bb00: 5c7c 9bff 

  0x00000214a641bb04: ;   {post_call_nop}
  0x00000214a641bb04: 0f1f 8400 | 0000 0000 | 488b c8e9 | 9bd2 ffff 

  0x00000214a641bb14: ;   {metadata('com/sun/javafx/geom/RectBounds')}
  0x00000214a641bb14: 48ba 18ef | 01b6 1402 | 0000 488b 

  0x00000214a641bb20: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641bb20: 6c24 30e8 

  0x00000214a641bb24: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::<init>@120 (line 3683)
                      ; - javafx.scene.shape.Shape::<init>@1 (line 174)
                      ; - javafx.scene.shape.Rectangle::<init>@1 (line 126)
                      ; - Alastor$1::handle@668 (line 285)
  0x00000214a641bb24: 387c 9bff 

  0x00000214a641bb28: ;   {post_call_nop}
  0x00000214a641bb28: 0f1f 8400 | 0000 0000 | 4c8b d0e9 | 72d3 ffff 

  0x00000214a641bb38: ;   {metadata('com/sun/javafx/geom/RectBounds')}
  0x00000214a641bb38: 48ba 18ef | 01b6 1402 | 0000 488b 

  0x00000214a641bb44: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641bb44: 6c24 30e8 

  0x00000214a641bb48: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::<init>@131 (line 3690)
                      ; - javafx.scene.shape.Shape::<init>@1 (line 174)
                      ; - javafx.scene.shape.Rectangle::<init>@1 (line 126)
                      ; - Alastor$1::handle@668 (line 285)
  0x00000214a641bb48: 147c 9bff 

  0x00000214a641bb4c: ;   {post_call_nop}
  0x00000214a641bb4c: 0f1f 8400 | 0000 0000 | 488b d8e9 | ead3 ffff 

  0x00000214a641bb5c: ;   {metadata('javafx/scene/Node$17')}
  0x00000214a641bb5c: 48ba 0090 | 03b6 1402 | 0000 488b 

  0x00000214a641bb68: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641bb68: 6c24 30e8 

  0x00000214a641bb6c: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::<init>@167 (line 8313)
                      ; - javafx.scene.shape.Shape::<init>@1 (line 174)
                      ; - javafx.scene.shape.Rectangle::<init>@1 (line 126)
                      ; - Alastor$1::handle@668 (line 285)
  0x00000214a641bb6c: f07b 9bff 

  0x00000214a641bb70: ;   {post_call_nop}
  0x00000214a641bb70: 0f1f 8400 | 0000 0000 | 4c8b d0e9 | 95d4 ffff 

  0x00000214a641bb80: ;   {metadata('javafx/scene/Node$FocusWithinProperty')}
  0x00000214a641bb80: 48ba 182c | 08b6 1402 | 0000 488b 

  0x00000214a641bb8c: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641bb8c: 6c24 30e8 

  0x00000214a641bb90: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::<init>@191 (line 8398)
                      ; - javafx.scene.shape.Shape::<init>@1 (line 174)
                      ; - javafx.scene.shape.Rectangle::<init>@1 (line 126)
                      ; - Alastor$1::handle@668 (line 285)
  0x00000214a641bb90: cc7b 9bff 

  0x00000214a641bb94: ;   {post_call_nop}
  0x00000214a641bb94: 0f1f 8400 | 0000 0000 | e9b7 d5ff 

  0x00000214a641bba0: ;   {metadata('javafx/scene/shape/Shape$3')}
  0x00000214a641bba0: ff48 ba70 | 670a b614 | 0200 0048 | 8b6c 2430 

  0x00000214a641bbb0: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641bbb0: 6666 90e8 

  0x00000214a641bbb4: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.shape.Shape::<init>@12 (line 490)
                      ; - javafx.scene.shape.Rectangle::<init>@1 (line 126)
                      ; - Alastor$1::handle@668 (line 285)
  0x00000214a641bbb4: a87b 9bff 

  0x00000214a641bbb8: ;   {post_call_nop}
  0x00000214a641bbb8: 0f1f 8400 | 0000 0000 | 488b c8e9 | 09d8 ffff 

  0x00000214a641bbc8: ;   {metadata('javafx/beans/WeakInvalidationListener')}
  0x00000214a641bbc8: 48ba 10d1 | 0ab6 1402 | 0000 488b 

  0x00000214a641bbd4: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641bbd4: 6c24 30e8 

  0x00000214a641bbd8: ; ImmutableOopMap {rbp=Oop [32]=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.javafx.beans.event.AbstractNotifyListener::<init>@5 (line 61)
                      ; - javafx.scene.shape.Shape$3::<init>@6 (line 491)
                      ; - javafx.scene.shape.Shape::<init>@17 (line 490)
                      ; - javafx.scene.shape.Rectangle::<init>@1 (line 126)
                      ; - Alastor$1::handle@668 (line 285)
  0x00000214a641bbd8: 847b 9bff 

  0x00000214a641bbdc: ;   {post_call_nop}
  0x00000214a641bbdc: 0f1f 8400 | 0000 0000 | 4c8b d8e9 | 33d8 ffff 

  0x00000214a641bbec: ;   {metadata('java/lang/ref/WeakReference')}
  0x00000214a641bbec: 48ba 10af | 19b5 1402 | 0000 488b 

  0x00000214a641bbf8: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641bbf8: 6c24 30e8 

  0x00000214a641bbfc: ; ImmutableOopMap {rbp=Oop [32]=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop [168]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.beans.WeakInvalidationListener::<init>@19 (line 64)
                      ; - com.sun.javafx.beans.event.AbstractNotifyListener::<init>@10 (line 61)
                      ; - javafx.scene.shape.Shape$3::<init>@6 (line 491)
                      ; - javafx.scene.shape.Shape::<init>@17 (line 490)
                      ; - javafx.scene.shape.Rectangle::<init>@1 (line 126)
                      ; - Alastor$1::handle@668 (line 285)
  0x00000214a641bbfc: 607b 9bff 

  0x00000214a641bc00: ;   {post_call_nop}
  0x00000214a641bc00: 0f1f 8400 | 0000 0000 | e95a d8ff 

  0x00000214a641bc0c: ;   {metadata('com/sun/javafx/geom/RoundRectangle2D')}
  0x00000214a641bc0c: ff48 baf8 | 1701 b614 | 0200 0048 | 8b6c 2430 

  0x00000214a641bc1c: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641bc1c: 6666 90e8 

  0x00000214a641bc20: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.shape.Rectangle::<init>@5 (line 102)
                      ; - Alastor$1::handle@668 (line 285)
  0x00000214a641bc20: 3c7b 9bff 

  0x00000214a641bc24: ;   {post_call_nop}
  0x00000214a641bc24: 0f1f 8400 | 0000 0000 | e9e5 d9ff 

  0x00000214a641bc30: ;   {metadata('javafx/scene/shape/Rectangle$5')}
  0x00000214a641bc30: ff48 ba30 | 9a15 b614 | 0200 0048 | 8b6c 2430 

  0x00000214a641bc40: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641bc40: 6666 90e8 

  0x00000214a641bc44: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.shape.Rectangle::<init>@32 (line 280)
                      ; - Alastor$1::handle@668 (line 285)
  0x00000214a641bc44: 187b 9bff 

  0x00000214a641bc48: ;   {post_call_nop}
  0x00000214a641bc48: 0f1f 8400 | 0000 0000 | e910 dbff 

  0x00000214a641bc54: ;   {metadata('javafx/scene/shape/Rectangle$4')}
  0x00000214a641bc54: ff48 bad8 | 8f15 b614 | 0200 0048 | 8b6c 2430 

  0x00000214a641bc64: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641bc64: 6666 90e8 

  0x00000214a641bc68: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.shape.Rectangle::<init>@20 (line 244)
                      ; - Alastor$1::handle@668 (line 285)
  0x00000214a641bc68: f47a 9bff 

  0x00000214a641bc6c: ;   {post_call_nop}
  0x00000214a641bc6c: 0f1f 8400 | 0000 0000 | 488b c8e9 | 40da ffff 

  0x00000214a641bc7c: ;   {metadata('javafx/scene/Group')}
  0x00000214a641bc7c: 48ba 38d8 | 1cb6 1402 

  0x00000214a641bc84: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641bc84: 0000 90e8 

  0x00000214a641bc88: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@857 (line 297)
  0x00000214a641bc88: d47a 9bff 

  0x00000214a641bc8c: ;   {post_call_nop}
  0x00000214a641bc8c: 0f1f 8400 | 0000 0000 | 4c8b d8e9 | 9ce5 ffff 

  0x00000214a641bc9c: ;   {metadata('javafx/scene/Node'[])}
  0x00000214a641bc9c: 48ba f0ca | 17b6 1402 | 0000 488b | ac24 8800 | 0000 4c8b | 9424 9800 | 0000 4c89 | 5424 2041 
  0x00000214a641bcbc: b802 0000 

  0x00000214a641bcc0: ;   {runtime_call C2 Runtime new_array}
  0x00000214a641bcc0: 0066 90e8 

  0x00000214a641bcc4: ; ImmutableOopMap {rbp=Oop [32]=Oop [48]=Oop [104]=Oop [148]=NarrowOop [160]=NarrowOop [168]=Oop }
                      ;*anewarray {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@862 (line 297)
  0x00000214a641bcc4: 188d 9bff 

  0x00000214a641bcc8: ;   {post_call_nop}
  0x00000214a641bcc8: 0f1f 8400 | 0000 0000 | 4c8b c0e9 | c5e5 ffff 

  0x00000214a641bcd8: ;   {metadata('javafx/scene/effect/DropShadow')}
  0x00000214a641bcd8: 48ba d82b | 0cb6 1402 

  0x00000214a641bce0: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641bce0: 0000 90e8 

  0x00000214a641bce4: ; ImmutableOopMap {rbp=Oop [80]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@2534 (line 420)
  0x00000214a641bce4: 787a 9bff 

  0x00000214a641bce8: ;   {post_call_nop}
  0x00000214a641bce8: 0f1f 8400 | 0000 0000 | e9ab 9bff 

  0x00000214a641bcf4: ;   {metadata('javafx/animation/PauseTransition')}
  0x00000214a641bcf4: ff48 bab0 | c823 b614 

  0x00000214a641bcfc: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641bcfc: 0200 00e8 

  0x00000214a641bd00: ; ImmutableOopMap {rbp=Oop [80]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@2568 (line 424)
  0x00000214a641bd00: 5c7a 9bff 

  0x00000214a641bd04: ;   {post_call_nop}
  0x00000214a641bd04: 0f1f 8400 | 0000 0000 | 4c8b d8e9 | 909c ffff | 4c89 5c24 

  0x00000214a641bd18: ;   {metadata('Alastor$1$$Lambda+0x00000214b623a9e0')}
  0x00000214a641bd18: 2048 bae0 | a923 b614 

  0x00000214a641bd20: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641bd20: 0200 00e8 

  0x00000214a641bd24: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [80]=Oop [96]=Oop }
                      ;*invokevirtual allocateInstance {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.lang.invoke.DirectMethodHandle::allocateInstance@12 (line 506)
                      ; - java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial@1
                      ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                      ; - Alastor$1::handle@2589 (line 425)
  0x00000214a641bd24: 387a 9bff 

  0x00000214a641bd28: ;   {post_call_nop}
  0x00000214a641bd28: 0f1f 8400 | 0000 0000 | 4c8b c0e9 | fe9c ffff 

  0x00000214a641bd38: ;   {metadata('javafx/scene/shape/Rectangle')}
  0x00000214a641bd38: 48ba 00d0 | 02b6 1402 

  0x00000214a641bd40: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641bd40: 0000 90e8 

  0x00000214a641bd44: ; ImmutableOopMap {[32]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@1273 (line 327)
  0x00000214a641bd44: 187a 9bff 

  0x00000214a641bd48: ;   {post_call_nop}
  0x00000214a641bd48: 0f1f 8400 | 0000 0000 | 4c8b d0e9 | bf9f ffff 

  0x00000214a641bd58: ;   {metadata('javafx/scene/shape/Polygon')}
  0x00000214a641bd58: 48ba b8e4 | 23b6 1402 

  0x00000214a641bd60: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641bd60: 0000 90e8 

  0x00000214a641bd64: ; ImmutableOopMap {[32]=Oop [136]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@1304 (line 330)
  0x00000214a641bd64: f879 9bff 

  0x00000214a641bd68: ;   {post_call_nop}
  0x00000214a641bd68: 0f1f 8400 | 0000 0000 | 4c8b d0e9 | 98a0 ffff 

  0x00000214a641bd78: ;   {metadata('java/lang/Double'[])}
  0x00000214a641bd78: 48ba 4864 | 07b6 1402 | 0000 41b8 | 0600 0000 

  0x00000214a641bd88: ;   {runtime_call C2 Runtime new_array}
  0x00000214a641bd88: 6666 90e8 

  0x00000214a641bd8c: ; ImmutableOopMap {[32]=Oop [136]=Oop [144]=Oop [152]=Oop }
                      ;*anewarray {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@1320 (line 331)
  0x00000214a641bd8c: 508c 9bff 

  0x00000214a641bd90: ;   {post_call_nop}
  0x00000214a641bd90: 0f1f 8400 | 0000 0000 | e90e a1ff 

  0x00000214a641bd9c: ;   {metadata('javafx/scene/Group')}
  0x00000214a641bd9c: ff48 ba38 | d81c b614 

  0x00000214a641bda4: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641bda4: 0200 00e8 

  0x00000214a641bda8: ; ImmutableOopMap {[32]=Oop [136]=Oop [144]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@1399 (line 335)
  0x00000214a641bda8: b479 9bff 

  0x00000214a641bdac: ;   {post_call_nop}
  0x00000214a641bdac: 0f1f 8400 | 0000 0000 | 4c8b d0e9 | 64a4 ffff 

  0x00000214a641bdbc: ;   {metadata('javafx/scene/Node'[])}
  0x00000214a641bdbc: 48ba f0ca | 17b6 1402 | 0000 41b8 | 0200 0000 

  0x00000214a641bdcc: ;   {runtime_call C2 Runtime new_array}
  0x00000214a641bdcc: 6666 90e8 

  0x00000214a641bdd0: ; ImmutableOopMap {[32]=Oop [136]=Oop [144]=Oop [152]=Oop }
                      ;*anewarray {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@1404 (line 335)
  0x00000214a641bdd0: 0c8c 9bff 

  0x00000214a641bdd4: ;   {post_call_nop}
  0x00000214a641bdd4: 0f1f 8400 | 0000 0000 | 4c8b c0e9 | 9da4 ffff 

  0x00000214a641bde4: ;   {metadata('java/lang/Double')}
  0x00000214a641bde4: 48ba 3805 | 19b5 1402 | 0000 4c8b | 5424 304c | 8954 2420 

  0x00000214a641bdf8: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641bdf8: 6666 90e8 

  0x00000214a641bdfc: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop [168]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.lang.Double::valueOf@0 (line 951)
                      ; - Alastor$1::handle@748 (line 289)
  0x00000214a641bdfc: 6079 9bff 

  0x00000214a641be00: ;   {post_call_nop}
  0x00000214a641be00: 0f1f 8400 | 0000 0000 | e9fa e1ff 

  0x00000214a641be0c: ;   {metadata('java/lang/Double')}
  0x00000214a641be0c: ff48 ba38 | 0519 b514 | 0200 004c | 8b54 2430 | 4c89 5424 

  0x00000214a641be20: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641be20: 2066 90e8 

  0x00000214a641be24: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop [168]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.lang.Double::valueOf@0 (line 951)
                      ; - Alastor$1::handle@714 (line 289)
  0x00000214a641be24: 3879 9bff 

  0x00000214a641be28: ;   {post_call_nop}
  0x00000214a641be28: 0f1f 8400 | 0000 0000 | 4c8b d8e9 | 83df ffff 

  0x00000214a641be38: ;   {metadata('java/lang/Double')}
  0x00000214a641be38: 48ba 3805 | 19b5 1402 | 0000 4c8b | 5424 304c | 8954 2420 

  0x00000214a641be4c: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641be4c: 6666 90e8 

  0x00000214a641be50: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop [168]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.lang.Double::valueOf@0 (line 951)
                      ; - Alastor$1::handle@723 (line 289)
  0x00000214a641be50: 0c79 9bff 

  0x00000214a641be54: ;   {post_call_nop}
  0x00000214a641be54: 0f1f 8400 | 0000 0000 | 4c8b d8e9 | e5df ffff 

  0x00000214a641be64: ;   {metadata('java/lang/Double')}
  0x00000214a641be64: 48ba 3805 | 19b5 1402 | 0000 4c8b | 5424 304c | 8954 2420 

  0x00000214a641be78: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641be78: 6666 90e8 

  0x00000214a641be7c: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop [168]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.lang.Double::valueOf@0 (line 951)
                      ; - Alastor$1::handle@707 (line 289)
  0x00000214a641be7c: e078 9bff 

  0x00000214a641be80: ;   {post_call_nop}
  0x00000214a641be80: 0f1f 8400 | 0000 0000 | 4c8b d0e9 | 9cde ffff 

  0x00000214a641be90: ;   {metadata('java/lang/Double')}
  0x00000214a641be90: 48ba 3805 | 19b5 1402 | 0000 4c8b | 5424 304c | 8954 2420 

  0x00000214a641bea4: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641bea4: 6666 90e8 

  0x00000214a641bea8: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop [168]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.lang.Double::valueOf@0 (line 951)
                      ; - Alastor$1::handle@730 (line 289)
  0x00000214a641bea8: b478 9bff 

  0x00000214a641beac: ;   {post_call_nop}
  0x00000214a641beac: 0f1f 8400 | 0000 0000 | 4c8b d8e9 | 27e0 ffff 

  0x00000214a641bebc: ;   {metadata('java/lang/Double'[])}
  0x00000214a641bebc: 48ba 4864 | 07b6 1402 | 0000 41b8 | 0600 0000 | 4c8b 5424 | 304c 8954 

  0x00000214a641bed4: ;   {runtime_call C2 Runtime new_array}
  0x00000214a641bed4: 2420 90e8 

  0x00000214a641bed8: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop }
                      ;*anewarray {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@701 (line 289)
  0x00000214a641bed8: 048b 9bff 

  0x00000214a641bedc: ;   {post_call_nop}
  0x00000214a641bedc: 0f1f 8400 | 0000 0000 | 4c8b d8e9 | f4dd ffff 

  0x00000214a641beec: ;   {metadata('java/lang/Double')}
  0x00000214a641beec: 48ba 3805 | 19b5 1402 | 0000 4c8b | 5424 304c | 8954 2420 

  0x00000214a641bf00: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641bf00: 6666 90e8 

  0x00000214a641bf04: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop [168]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.lang.Double::valueOf@0 (line 951)
                      ; - Alastor$1::handle@739 (line 289)
  0x00000214a641bf04: 5878 9bff 

  0x00000214a641bf08: ;   {post_call_nop}
  0x00000214a641bf08: 0f1f 8400 | 0000 0000 | 4c8b d8e9 | 59e0 ffff 

  0x00000214a641bf18: ;   {metadata('java/lang/Double'[])}
  0x00000214a641bf18: 48ba 4864 | 07b6 1402 | 0000 41b8 | 0600 0000 | 488b 6c24 

  0x00000214a641bf2c: ;   {runtime_call C2 Runtime new_array}
  0x00000214a641bf2c: 3066 90e8 

  0x00000214a641bf30: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop [168]=Oop }
                      ;*anewarray {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@776 (line 292)
  0x00000214a641bf30: ac8a 9bff 

  0x00000214a641bf34: ;   {post_call_nop}
  0x00000214a641bf34: 0f1f 8400 | 0000 0000 | e972 daff | ffc5 fb10 | 4c24 30c5 | fb10 5c24 | 38c5 fb10 | 5424 40c5 
  0x00000214a641bf54: fb10 6424 | 48e9 e5ec | ffff c5fb | 104c 2430 | c5fb 105c | 2438 c5fb | 1054 2440 | c5fb 1064 
  0x00000214a641bf74: 2448 e96b | edff ffc5 | fb11 7c24 | 58c5 fb11 | 7424 50c5 | fb11 6c24 | 48c5 fb11 | 6424 40c5 
  0x00000214a641bf94: fb11 5424 | 38c5 fb11 | 5c24 20c4 | e1f9 7ecd 

  0x00000214a641bfa4: ;   {metadata({type array bool})}
  0x00000214a641bfa4: 48ba f875 | 16b5 1402 | 0000 41b8 | 0200 0000 

  0x00000214a641bfb4: ;   {runtime_call C2 Runtime new_array}
  0x00000214a641bfb4: 6666 90e8 

  0x00000214a641bfb8: ; ImmutableOopMap {[48]=Oop }
                      ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                      ; - Alastor$1::handle@615 (line 283)
  0x00000214a641bfb8: 248a 9bff 

  0x00000214a641bfbc: ;   {post_call_nop}
  0x00000214a641bfbc: 0f1f 8400 | 0000 0000 | 4c8b d0c4 | e1f9 6ecd | c5fb 105c | 2420 c5fb | 1054 2438 | c5fb 1064 
  0x00000214a641bfdc: 2440 c5fb | 106c 2448 | c5fb 1074 | 2450 c5fb | 107c 2458 | e974 b6ff | ffba deff | ffff c5fb 
  0x00000214a641bffc: 1044 2428 | c5fb 1144 | 2420 c5fb | 1044 2430 | c5fb 1144 | 2428 c5fb | 1044 2438 | c5fb 1144 
  0x00000214a641c01c: 2430 c5fb | 1044 2440 | c5fb 1144 | 2438 c5fb | 1044 2448 | c5fb 1144 | 2440 4c8b | 5c24 504c 
  0x00000214a641c03c: 895c 2448 | 448b 4424 | 784c 8b5c | 2460 4c89 | 5c24 584c | 8b5c 2468 | 4c89 5c24 | 6044 8954 
  0x00000214a641c05c: 2454 4489 

  0x00000214a641c060: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641c060: 4424 68e8 

  0x00000214a641c064: ; ImmutableOopMap {rbp=Oop [72]=Oop [84]=NarrowOop [88]=Oop [96]=Oop }
                      ;*invokeinterface get {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2255 (line 399)
  0x00000214a641c064: f87f 9bff 

  0x00000214a641c068: ;   {post_call_nop}
  0x00000214a641c068: 0f1f 8400 | 0000 0000 | bae4 ffff | ffc5 fb10 | 4c24 28c5 | fb11 4c24 | 20c5 fb10 | 4c24 30c5 
  0x00000214a641c088: fb11 4c24 | 28c5 fb10 | 4c24 38c5 | fb11 4c24 | 30c5 fb10 | 4c24 40c5 | fb11 4c24 | 38c5 fb10 
  0x00000214a641c0a8: 4c24 48c5 | fb11 4c24 | 404c 8b5c | 2450 4c89 | 5c24 484c | 8b5c 2460 | 4c89 5c24 | 584c 8b5c 
  0x00000214a641c0c8: 2468 4c89 | 5c24 60c5 | fb11 4424 | 6844 8954 

  0x00000214a641c0d8: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641c0d8: 2454 90e8 

  0x00000214a641c0dc: ; ImmutableOopMap {rbp=Oop [72]=Oop [84]=NarrowOop [88]=Oop [96]=Oop }
                      ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2281 (line 400)
  0x00000214a641c0dc: 807f 9bff 

  0x00000214a641c0e0: ;   {post_call_nop}
  0x00000214a641c0e0: 0f1f 8400 | 0000 0000 | 4533 dbe9 | 9aa4 ffff 

  0x00000214a641c0f0: ;   {section_word}
  0x00000214a641c0f0: c5f9 2e05 | 887f ffff | bdff ffff | ff0f 8a0e | 0000 000f | 8208 0000 | 0040 0f95 | c540 0fb6 
  0x00000214a641c110: edba 4dff 

  0x00000214a641c114: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641c114: ffff 90e8 

  0x00000214a641c118: ; ImmutableOopMap {[32]=Oop [80]=Oop [96]=Oop [104]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) Alastor$1::handle@2268 (line 399)
  0x00000214a641c118: 447f 9bff 

  0x00000214a641c11c: ;   {post_call_nop}
  0x00000214a641c11c: 0f1f 8400 | 0000 0000 | c5fb 116c | 2460 4489 | 4c24 58c5 | fb11 6424 | 50c5 fb11 | 5424 48c5 
  0x00000214a641c13c: fb11 5c24 | 40c5 fb11 | 4c24 384c | 8b54 2420 | 4c89 5424 

  0x00000214a641c150: ;   {metadata('javafx/scene/Node$12')}
  0x00000214a641c150: 3048 ba98 | 0a08 b614 

  0x00000214a641c158: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641c158: 0200 00e8 

  0x00000214a641c15c: ; ImmutableOopMap {rbp=Oop [48]=Oop [88]=NarrowOop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::layoutYProperty@8 (line 2888)
                      ; - javafx.scene.Node::setLayoutY@1 (line 2879)
                      ; - Alastor$1::handle@354 (line 256)
  0x00000214a641c15c: 0076 9bff 

  0x00000214a641c160: ;   {post_call_nop}
  0x00000214a641c160: 0f1f 8400 | 0000 0000 | 4c8b 5424 | 304c 8954 | 2420 c5fb | 104c 2438 | c5fb 105c | 2440 c5fb 
  0x00000214a641c180: 1054 2448 | c5fb 1064 | 2450 448b | 4c24 58c5 | fb10 6c24 | 60e9 1aaf | ffff baf6 

  0x00000214a641c19c: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641c19c: ffff ffe8 

  0x00000214a641c1a0: ; ImmutableOopMap {}
                      ;*invokevirtual getBoundsInLocal {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@49 (line 228)
  0x00000214a641c1a0: bc7e 9bff 

  0x00000214a641c1a4: ;   {post_call_nop}
  0x00000214a641c1a4: 0f1f 8400 | 0000 0000 | bade ffff | ff48 8be8 

  0x00000214a641c1b4: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641c1b4: 6666 90e8 

  0x00000214a641c1b8: ; ImmutableOopMap {rbp=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.scene.Node::getBoundsInLocal@7 (line 3498)
                      ; - Alastor$1::handle@49 (line 228)
  0x00000214a641c1b8: a47e 9bff 

  0x00000214a641c1bc: ;   {post_call_nop}
  0x00000214a641c1bc: 0f1f 8400 | 0000 0000 | bade ffff | ff48 8b6c | 2420 c5fb | 1044 2428 | c5fb 1144 | 2420 c5fb 
  0x00000214a641c1dc: 114c 2428 | c5fb 1154 | 2430 c5fb | 1164 2438 | c5fb 115c | 2440 4489 

  0x00000214a641c1f4: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641c1f4: 5424 48e8 

  0x00000214a641c1f8: ; ImmutableOopMap {rbp=Oop [72]=NarrowOop }
                      ;*invokeinterface contains {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@221 (line 248)
  0x00000214a641c1f8: 647e 9bff 

  0x00000214a641c1fc: ;   {post_call_nop}
  0x00000214a641c1fc: 0f1f 8400 | 0000 0000 | bade ffff | ff48 8b6c | 2420 c5fb | 1044 2428 | c5fb 1144 | 2420 c5fb 
  0x00000214a641c21c: 114c 2428 | c5fb 1154 | 2430 c5fb | 1164 2438 | c5fb 115c | 2440 4489 

  0x00000214a641c234: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641c234: 5424 48e8 

  0x00000214a641c238: ; ImmutableOopMap {rbp=Oop [72]=NarrowOop }
                      ;*invokevirtual containsKey {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.HashSet::contains@5 (line 214)
                      ; - Alastor$1::handle@221 (line 248)
  0x00000214a641c238: 247e 9bff 

  0x00000214a641c23c: ;   {post_call_nop}
  0x00000214a641c23c: 0f1f 8400 | 0000 0000 | bade ffff | ff48 8b6c | 2420 c5fb | 1044 2428 | c5fb 1144 | 2420 c5fb 
  0x00000214a641c25c: 114c 2428 | c5fb 1154 | 2430 c5fb | 1164 2438 | c5fb 115c | 2440 4489 

  0x00000214a641c274: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641c274: 5424 48e8 

  0x00000214a641c278: ; ImmutableOopMap {rbp=Oop [72]=NarrowOop }
                      ;*invokeinterface contains {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@255 (line 249)
  0x00000214a641c278: e47d 9bff 

  0x00000214a641c27c: ;   {post_call_nop}
  0x00000214a641c27c: 0f1f 8400 | 0000 0000 | bade ffff | ff48 8b6c | 2420 c5fb | 1044 2428 | c5fb 1144 | 2420 c5fb 
  0x00000214a641c29c: 114c 2428 | c5fb 1154 | 2430 c5fb | 1164 2438 | c5fb 115c | 2440 4489 

  0x00000214a641c2b4: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641c2b4: 5424 48e8 

  0x00000214a641c2b8: ; ImmutableOopMap {rbp=Oop [72]=NarrowOop }
                      ;*invokevirtual containsKey {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.HashSet::contains@5 (line 214)
                      ; - Alastor$1::handle@255 (line 249)
  0x00000214a641c2b8: a47d 9bff 

  0x00000214a641c2bc: ;   {post_call_nop}
  0x00000214a641c2bc: 0f1f 8400 | 0000 0000 | bade ffff | ff48 8b6c | 2420 c5fb | 1044 2428 | c5fb 1144 | 2420 c5fb 
  0x00000214a641c2dc: 114c 2428 | c5fb 1154 | 2430 c5fb | 1164 2438 | c5fb 115c | 2440 4489 

  0x00000214a641c2f4: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641c2f4: 5424 48e8 

  0x00000214a641c2f8: ; ImmutableOopMap {rbp=Oop [72]=NarrowOop }
                      ;*invokeinterface contains {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@289 (line 250)
  0x00000214a641c2f8: 647d 9bff 

  0x00000214a641c2fc: ;   {post_call_nop}
  0x00000214a641c2fc: 0f1f 8400 | 0000 0000 | bade ffff | ff48 8b6c | 2420 c5fb | 1044 2428 | c5fb 1144 | 2420 c5fb 
  0x00000214a641c31c: 114c 2428 | c5fb 1154 | 2430 c5fb | 1164 2438 | c5fb 115c | 2440 4489 

  0x00000214a641c334: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641c334: 5424 48e8 

  0x00000214a641c338: ; ImmutableOopMap {rbp=Oop [72]=NarrowOop }
                      ;*invokevirtual containsKey {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.HashSet::contains@5 (line 214)
                      ; - Alastor$1::handle@289 (line 250)
  0x00000214a641c338: 247d 9bff 

  0x00000214a641c33c: ;   {post_call_nop}
  0x00000214a641c33c: 0f1f 8400 | 0000 0000 | bae4 ffff | ff48 8b6c | 2420 c5fb | 1044 2428 | c5fb 1144 | 2420 c5fb 
  0x00000214a641c35c: 114c 2428 | c5fb 1154 | 2430 c5fb | 1164 2438 | c5fb 115c | 2440 894c 

  0x00000214a641c374: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641c374: 244c 90e8 

  0x00000214a641c378: ; ImmutableOopMap {rbp=Oop [76]=NarrowOop }
                      ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@329 (line 255)
  0x00000214a641c378: e47c 9bff 

  0x00000214a641c37c: ;   {post_call_nop}
  0x00000214a641c37c: 0f1f 8400 | 0000 0000 | bae4 ffff | ff48 8b6c | 2420 c5fb | 106c 2428 | c5fb 116c | 2420 c5fb 
  0x00000214a641c39c: 114c 2428 | c5fb 1154 | 2430 c5fb | 1164 2438 | c5fb 115c | 2440 4489 | 4c24 48c5 | fb11 4424 
  0x00000214a641c3bc: 5089 4c24 

  0x00000214a641c3c0: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641c3c0: 4c66 90e8 

  0x00000214a641c3c4: ; ImmutableOopMap {rbp=Oop [72]=NarrowOop [76]=NarrowOop }
                      ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@352 (line 256)
  0x00000214a641c3c4: 987c 9bff 

  0x00000214a641c3c8: ;   {post_call_nop}
  0x00000214a641c3c8: 0f1f 8400 | 0000 0000 | bade ffff | ff48 8b6c | 2420 c5fb | 1044 2428 | c5fb 1144 | 2420 c5fb 
  0x00000214a641c3e8: 114c 2428 | c5fb 1154 | 2430 c5fb | 1164 2438 | c5fb 115c | 2440 4889 | 4424 48c5 | fb11 6c24 
  0x00000214a641c408: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641c408: 5066 90e8 

  0x00000214a641c40c: ; ImmutableOopMap {rbp=Oop [72]=Oop }
                      ;*invokevirtual set {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.scene.Node::setLayoutY@5 (line 2879)
                      ; - Alastor$1::handle@354 (line 256)
  0x00000214a641c40c: 507c 9bff 

  0x00000214a641c410: ;   {post_call_nop}
  0x00000214a641c410: 0f1f 8400 | 0000 0000 | bae4 ffff | ff48 8b6c | 2420 c5fb | 1044 2428 | c5fb 1144 | 2420 c5fb 
  0x00000214a641c430: 114c 2428 | c5fb 1154 | 2430 c5fb | 1164 2438 | c5fb 115c | 2440 4489 

  0x00000214a641c448: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641c448: 4424 4ce8 

  0x00000214a641c44c: ; ImmutableOopMap {rbp=Oop [76]=NarrowOop }
                      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@542 (line 274)
  0x00000214a641c44c: 107c 9bff 

  0x00000214a641c450: ;   {post_call_nop}
  0x00000214a641c450: 0f1f 8400 | 0000 0000 | bae4 ffff | ff48 8b6c | 2420 c5fb | 1044 2428 | c5fb 1144 | 2420 c5fb 
  0x00000214a641c470: 114c 2428 | c5fb 1154 | 2430 c5fb | 1164 2438 | c5fb 115c | 2440 4489 

  0x00000214a641c488: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641c488: 5424 4ce8 

  0x00000214a641c48c: ; ImmutableOopMap {rbp=Oop [76]=NarrowOop }
                      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@552 (line 275)
  0x00000214a641c48c: d07b 9bff 

  0x00000214a641c490: ;   {post_call_nop}
  0x00000214a641c490: 0f1f 8400 | 0000 0000 | bae4 ffff | ff48 8b6c | 2420 c5fb | 1044 2428 | c5fb 1144 | 2420 c5fb 
  0x00000214a641c4b0: 114c 2428 | c5fb 1154 | 2430 c5fb | 1164 2438 | c5fb 115c | 2440 4489 

  0x00000214a641c4c8: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641c4c8: 5424 48e8 

  0x00000214a641c4cc: ; ImmutableOopMap {rbp=Oop [72]=NarrowOop }
                      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2011 (line 376)
  0x00000214a641c4cc: 907b 9bff 

  0x00000214a641c4d0: ;   {post_call_nop}
  0x00000214a641c4d0: 0f1f 8400 | 0000 0000 | bade ffff | ff48 8b6c | 2420 c5fb | 1044 2428 | c5fb 1144 | 2420 c5fb 
  0x00000214a641c4f0: 1044 2430 | c5fb 1144 | 2428 c5fb | 1044 2438 | c5fb 1144 | 2430 c5fb | 1044 2440 | c5fb 1144 
  0x00000214a641c510: 2438 c5fb | 1044 2448 | c5fb 1144 | 2440 4c8b | 5c24 504c | 895c 2448 | 4489 5424 

  0x00000214a641c52c: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641c52c: 5066 90e8 

  0x00000214a641c530: ; ImmutableOopMap {rbp=Oop [72]=Oop [80]=NarrowOop }
                      ;*invokeinterface size {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2066 (line 382)
  0x00000214a641c530: 2c7b 9bff 

  0x00000214a641c534: ;   {post_call_nop}
  0x00000214a641c534: 0f1f 8400 | 0000 0000 | ba3f ffff | ff48 8b6c | 2420 c5fb | 1044 2428 | c5fb 1144 | 2420 c5fb 
  0x00000214a641c554: 114c 2428 | c5fb 1154 | 2430 c5fb | 1164 2438 | c5fb 115c | 2440 4489 | 4c24 4844 | 8954 244c 
  0x00000214a641c574: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641c574: 6666 90e8 

  0x00000214a641c578: ; ImmutableOopMap {rbp=Oop [72]=NarrowOop [76]=NarrowOop }
                      ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.scene.Node::getLayoutY@15 (line 2883)
                      ; - Alastor$1::handle@344 (line 256)
  0x00000214a641c578: e47a 9bff 

  0x00000214a641c57c: ;   {post_call_nop}
  0x00000214a641c57c: 0f1f 8400 | 0000 0000 | bade ffff | ff48 8b6c | 2420 4889 

  0x00000214a641c590: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641c590: 4424 28e8 

  0x00000214a641c594: ; ImmutableOopMap {rbp=Oop [40]=Oop }
                      ;*invokeinterface hasNext {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2624 (line 431)
  0x00000214a641c594: c87a 9bff 

  0x00000214a641c598: ;   {post_call_nop}
  0x00000214a641c598: 0f1f 8400 | 0000 0000 | c5fb 104c | 2430 c5fb | 105c 2438 | c5fb 1054 | 2440 c5fb | 1064 2448 
  0x00000214a641c5b8: e952 e8ff | ffba deff | ffff 488b | 6c24 20c5 | fb10 4424 | 28c5 fb11 | 4424 20c5 | fb11 4c24 
  0x00000214a641c5d8: 28c5 fb11 | 5424 30c5 | fb11 6424 | 38c5 fb11 | 5c24 4048 | 8944 2448 | c5fb 116c 

  0x00000214a641c5f4: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641c5f4: 2450 90e8 

  0x00000214a641c5f8: ; ImmutableOopMap {rbp=Oop [72]=Oop }
                      ;*invokevirtual set {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.scene.Node::setLayoutX@5 (line 2805)
                      ; - Alastor$1::handle@245 (line 248)
  0x00000214a641c5f8: 647a 9bff 

  0x00000214a641c5fc: ;   {post_call_nop}
  0x00000214a641c5fc: 0f1f 8400 | 0000 0000 | ba3f ffff | ff48 8b6c | 2420 c5fb | 1044 2428 | c5fb 1144 | 2420 c5fb 
  0x00000214a641c61c: 114c 2428 | c5fb 1154 | 2430 c5fb | 1164 2438 | c5fb 115c | 2440 894c | 2448 4489 

  0x00000214a641c638: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641c638: 5424 4ce8 

  0x00000214a641c63c: ; ImmutableOopMap {rbp=Oop [72]=NarrowOop [76]=NarrowOop }
                      ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.scene.Node::getLayoutX@15 (line 2809)
                      ; - Alastor$1::handle@237 (line 248)
  0x00000214a641c63c: 207a 9bff 

  0x00000214a641c640: ;   {post_call_nop}
  0x00000214a641c640: 0f1f 8400 | 0000 0000 | bae4 ffff | ff48 8b6c | 2420 c5fb | 1044 2428 | c5fb 1144 | 2420 c5fb 
  0x00000214a641c660: 114c 2428 | c5fb 1154 | 2430 c5fb | 1164 2438 | c5fb 115c | 2440 4489 

  0x00000214a641c678: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641c678: 5c24 48e8 

  0x00000214a641c67c: ; ImmutableOopMap {rbp=Oop [72]=NarrowOop }
                      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@302 (line 250)
  0x00000214a641c67c: e079 9bff 

  0x00000214a641c680: ;   {post_call_nop}
  0x00000214a641c680: 0f1f 8400 | 0000 0000 | bade ffff | ff48 8b6c | 2420 c5fb | 1044 2428 | c5fb 1144 | 2420 c5fb 
  0x00000214a641c6a0: 114c 2428 | c5fb 1154 | 2430 c5fb | 1164 2438 | c5fb 115c | 2440 4889 | 4424 48c5 | fb11 6c24 
  0x00000214a641c6c0: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641c6c0: 5066 90e8 

  0x00000214a641c6c4: ; ImmutableOopMap {rbp=Oop [72]=Oop }
                      ;*invokevirtual set {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.scene.Node::setLayoutX@5 (line 2805)
                      ; - Alastor$1::handle@279 (line 249)
  0x00000214a641c6c4: 9879 9bff 

  0x00000214a641c6c8: ;   {post_call_nop}
  0x00000214a641c6c8: 0f1f 8400 | 0000 0000 | ba3f ffff | ff48 8b6c | 2420 c5fb | 1044 2428 | c5fb 1144 | 2420 c5fb 
  0x00000214a641c6e8: 114c 2428 | c5fb 1154 | 2430 c5fb | 1164 2438 | c5fb 115c | 2440 894c | 2448 4489 

  0x00000214a641c704: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641c704: 5424 4ce8 

  0x00000214a641c708: ; ImmutableOopMap {rbp=Oop [72]=NarrowOop [76]=NarrowOop }
                      ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.scene.Node::getLayoutX@15 (line 2809)
                      ; - Alastor$1::handle@271 (line 249)
  0x00000214a641c708: 5479 9bff 

  0x00000214a641c70c: ;   {post_call_nop}
  0x00000214a641c70c: 0f1f 8400 | 0000 0000 | ba4d ffff | ff48 8b6c | 2420 c5fb | 1044 2428 | c5fb 1144 | 2420 c5fb 
  0x00000214a641c72c: 114c 2428 | c5fb 1154 | 2430 c5fb | 1164 2438 | c5fb 115c | 2440 4489 

  0x00000214a641c744: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641c744: 5c24 48e8 

  0x00000214a641c748: ; ImmutableOopMap {rbp=Oop }
                      ;*ifle {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.HashMap::getNode@14 (line 576)
                      ; - java.util.HashMap::containsKey@2 (line 603)
                      ; - java.util.HashSet::contains@5 (line 214)
                      ; - Alastor$1::handle@221 (line 248)
  0x00000214a641c748: 1479 9bff 

  0x00000214a641c74c: ;   {post_call_nop}
  0x00000214a641c74c: 0f1f 8400 | 0000 0000 | ba4d ffff | ff48 8b6c | 2420 c5fb | 1044 2428 | c5fb 1144 | 2420 c5fb 
  0x00000214a641c76c: 114c 2428 | c5fb 1154 | 2430 c5fb | 1164 2438 | c5fb 115c | 2440 4489 

  0x00000214a641c784: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641c784: 5c24 48e8 

  0x00000214a641c788: ; ImmutableOopMap {rbp=Oop }
                      ;*ifle {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.HashMap::getNode@14 (line 576)
                      ; - java.util.HashMap::containsKey@2 (line 603)
                      ; - java.util.HashSet::contains@5 (line 214)
                      ; - Alastor$1::handle@255 (line 249)
  0x00000214a641c788: d478 9bff 

  0x00000214a641c78c: ;   {post_call_nop}
  0x00000214a641c78c: 0f1f 8400 | 0000 0000 | ba4d ffff | ff48 8b6c | 2420 c5fb | 1044 2428 | c5fb 1144 | 2420 c5fb 
  0x00000214a641c7ac: 114c 2428 | c5fb 1154 | 2430 c5fb | 1164 2438 | c5fb 115c | 2440 4489 

  0x00000214a641c7c4: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641c7c4: 5c24 48e8 

  0x00000214a641c7c8: ; ImmutableOopMap {rbp=Oop }
                      ;*ifle {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.HashMap::getNode@14 (line 576)
                      ; - java.util.HashMap::containsKey@2 (line 603)
                      ; - java.util.HashSet::contains@5 (line 214)
                      ; - Alastor$1::handle@289 (line 250)
  0x00000214a641c7c8: 9478 9bff 

  0x00000214a641c7cc: ;   {post_call_nop}
  0x00000214a641c7cc: 0f1f 8400 | 0000 0000 | ba4d ffff | ff48 8b6c | 2420 c5fb | 1044 2428 | c5fb 1144 | 2420 c5fb 
  0x00000214a641c7ec: 114c 2428 | c5fb 1154 | 2430 c5fb | 1164 2438 | c5fb 115c | 2440 4489 | 5424 4844 | 8944 244c 
  0x00000214a641c80c: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641c80c: 6666 90e8 

  0x00000214a641c810: ; ImmutableOopMap {rbp=Oop [72]=NarrowOop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.HashMap::getNode@66 (line 579)
                      ; - java.util.HashMap::containsKey@2 (line 603)
                      ; - java.util.HashSet::contains@5 (line 214)
                      ; - Alastor$1::handle@221 (line 248)
  0x00000214a641c810: 4c78 9bff 

  0x00000214a641c814: ;   {post_call_nop}
  0x00000214a641c814: 0f1f 8400 | 0000 0000 | ba4d ffff | ff48 8b6c | 2420 c5fb | 1044 2428 | c5fb 1144 | 2420 c5fb 
  0x00000214a641c834: 114c 2428 | c5fb 1154 | 2430 c5fb | 1164 2438 | c5fb 115c | 2440 4489 | 5c24 4844 | 8944 244c 
  0x00000214a641c854: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641c854: 6666 90e8 

  0x00000214a641c858: ; ImmutableOopMap {rbp=Oop [72]=NarrowOop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.HashMap::getNode@66 (line 579)
                      ; - java.util.HashMap::containsKey@2 (line 603)
                      ; - java.util.HashSet::contains@5 (line 214)
                      ; - Alastor$1::handle@255 (line 249)
  0x00000214a641c858: 0478 9bff 

  0x00000214a641c85c: ;   {post_call_nop}
  0x00000214a641c85c: 0f1f 8400 | 0000 0000 | ba4d ffff | ff48 8b6c | 2420 c5fb | 1044 2428 | c5fb 1144 | 2420 c5fb 
  0x00000214a641c87c: 114c 2428 | c5fb 1154 | 2430 c5fb | 1164 2438 | c5fb 115c | 2440 4489 | 5424 4844 | 8944 244c 
  0x00000214a641c89c: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641c89c: 6666 90e8 

  0x00000214a641c8a0: ; ImmutableOopMap {rbp=Oop [72]=NarrowOop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.HashMap::getNode@66 (line 579)
                      ; - java.util.HashMap::containsKey@2 (line 603)
                      ; - java.util.HashSet::contains@5 (line 214)
                      ; - Alastor$1::handle@289 (line 250)
  0x00000214a641c8a0: bc77 9bff 

  0x00000214a641c8a4: ;   {post_call_nop}
  0x00000214a641c8a4: 0f1f 8400 | 0000 0000 | ba4d ffff | ff48 8b6c | 2420 c5fb | 1044 2428 | c5fb 1144 | 2420 c5fb 
  0x00000214a641c8c4: 114c 2428 | c5fb 1154 | 2430 c5fb | 1164 2438 | c5fb 115c | 2440 4889 | 4424 48c5 | fb11 6c24 
  0x00000214a641c8e4: 5044 8954 

  0x00000214a641c8e8: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641c8e8: 2458 90e8 

  0x00000214a641c8ec: ; ImmutableOopMap {rbp=Oop [72]=Oop [88]=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) javafx.beans.property.DoublePropertyBase::isBound@4 (line 157)
                      ; - javafx.beans.property.DoublePropertyBase::set@1 (line 142)
                      ; - javafx.scene.Node::setLayoutY@5 (line 2879)
                      ; - Alastor$1::handle@354 (line 256)
  0x00000214a641c8ec: 7077 9bff 

  0x00000214a641c8f0: ;   {post_call_nop}
  0x00000214a641c8f0: 0f1f 8400 | 0000 0000 | c5f9 2ec8 | bdff ffff | ff0f 8a0e | 0000 000f | 8208 0000 | 0040 0f95 
  0x00000214a641c910: c540 0fb6 | edf7 ddba | 4dff ffff | c5fb 114c | 2430 c5fb | 1154 2438 | c5fb 1164 | 2440 c5fb 
  0x00000214a641c930: 115c 2448 | 4489 5c24 

  0x00000214a641c938: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641c938: 5066 90e8 

  0x00000214a641c93c: ; ImmutableOopMap {[32]=Oop [80]=NarrowOop }
                      ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) Alastor$1::handle@374 (line 260)
  0x00000214a641c93c: 2077 9bff 

  0x00000214a641c940: ;   {post_call_nop}
  0x00000214a641c940: 0f1f 8400 | 0000 0000 | c5f9 2eea | bdff ffff | ff0f 8a0e | 0000 000f | 8208 0000 | 0040 0f95 
  0x00000214a641c960: c540 0fb6 | edba 4dff | ffff c5fb | 114c 2430 | c5fb 1154 | 2438 c5fb | 1164 2440 | c5fb 115c 
  0x00000214a641c980: 2448 4489 

  0x00000214a641c984: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641c984: 5c24 50e8 

  0x00000214a641c988: ; ImmutableOopMap {[32]=Oop [80]=NarrowOop }
                      ;*ifle {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) Alastor$1::handle@411 (line 261)
  0x00000214a641c988: d476 9bff 

  0x00000214a641c98c: ;   {post_call_nop}
  0x00000214a641c98c: 0f1f 8400 | 0000 0000 | c5f9 2ee0 | bdff ffff | ff0f 8a0e | 0000 000f | 8208 0000 | 0040 0f95 
  0x00000214a641c9ac: c540 0fb6 | edf7 ddba | 4dff ffff | c5fb 114c | 2430 c5fb | 1154 2438 | c5fb 1164 | 2440 c5fb 
  0x00000214a641c9cc: 115c 2448 | 4489 5c24 

  0x00000214a641c9d4: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641c9d4: 5066 90e8 

  0x00000214a641c9d8: ; ImmutableOopMap {[32]=Oop [80]=NarrowOop }
                      ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) Alastor$1::handle@445 (line 263)
  0x00000214a641c9d8: 8476 9bff 

  0x00000214a641c9dc: ;   {post_call_nop}
  0x00000214a641c9dc: 0f1f 8400 | 0000 0000 | ba4d ffff | ff89 4424 

  0x00000214a641c9ec: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641c9ec: 2866 90e8 

  0x00000214a641c9f0: ; ImmutableOopMap {rbp=Oop [32]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) Alastor$1::handle@2629 (line 431)
  0x00000214a641c9f0: 6c76 9bff 

  0x00000214a641c9f4: ;   {post_call_nop}
  0x00000214a641c9f4: 0f1f 8400 | 0000 0000 | ba4d ffff | ff48 8b6c | 2420 c5fb | 1044 2428 | c5fb 1144 | 2420 c5fb 
  0x00000214a641ca14: 114c 2428 | c5fb 1154 | 2430 c5fb | 1164 2438 | c5fb 115c | 2440 4889 | 4424 48c5 | fb11 6c24 
  0x00000214a641ca34: 5044 895c 

  0x00000214a641ca38: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ca38: 2458 90e8 

  0x00000214a641ca3c: ; ImmutableOopMap {rbp=Oop [72]=Oop [88]=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) javafx.beans.property.DoublePropertyBase::isBound@4 (line 157)
                      ; - javafx.beans.property.DoublePropertyBase::set@1 (line 142)
                      ; - javafx.scene.Node::setLayoutX@5 (line 2805)
                      ; - Alastor$1::handle@245 (line 248)
  0x00000214a641ca3c: 2076 9bff 

  0x00000214a641ca40: ;   {post_call_nop}
  0x00000214a641ca40: 0f1f 8400 | 0000 0000 | ba4d ffff | ff48 8b6c | 2420 c5fb | 1044 2428 | c5fb 1144 | 2420 c5fb 
  0x00000214a641ca60: 114c 2428 | c5fb 1154 | 2430 c5fb | 1164 2438 | c5fb 115c | 2440 4889 | 4424 48c5 | fb11 6c24 
  0x00000214a641ca80: 5044 895c 

  0x00000214a641ca84: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ca84: 2458 90e8 

  0x00000214a641ca88: ; ImmutableOopMap {rbp=Oop [72]=Oop [88]=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) javafx.beans.property.DoublePropertyBase::isBound@4 (line 157)
                      ; - javafx.beans.property.DoublePropertyBase::set@1 (line 142)
                      ; - javafx.scene.Node::setLayoutX@5 (line 2805)
                      ; - Alastor$1::handle@279 (line 249)
  0x00000214a641ca88: d475 9bff 

  0x00000214a641ca8c: ;   {post_call_nop}
  0x00000214a641ca8c: 0f1f 8400 | 0000 0000 | bade ffff | ff48 8b6c | 2420 c5fb | 1044 2428 | c5fb 1144 | 2420 c5fb 
  0x00000214a641caac: 114c 2428 | c5fb 1154 | 2430 c5fb | 1164 2438 | c5fb 115c | 2440 4889 | 4424 48c5 | fb11 6c24 
  0x00000214a641cacc: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641cacc: 5066 90e8 

  0x00000214a641cad0: ; ImmutableOopMap {rbp=Oop [72]=Oop }
                      ;*invokevirtual set {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.scene.Node::setLayoutY@5 (line 2879)
                      ; - Alastor$1::handle@519 (line 268)
  0x00000214a641cad0: 8c75 9bff 

  0x00000214a641cad4: ;   {post_call_nop}
  0x00000214a641cad4: 0f1f 8400 | 0000 0000 | bae4 ffff | ff48 8b6c | 2420 c5fb | 1044 2428 | c5fb 1144 | 2420 c5fb 
  0x00000214a641caf4: 114c 2428 | c5fb 1154 | 2430 c5fb | 1164 2438 | c5fb 115c | 2440 4489 

  0x00000214a641cb0c: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641cb0c: 5424 48e8 

  0x00000214a641cb10: ; ImmutableOopMap {rbp=Oop [72]=NarrowOop }
                      ;*dastore {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@528 (line 269)
  0x00000214a641cb10: 4c75 9bff 

  0x00000214a641cb14: ;   {post_call_nop}
  0x00000214a641cb14: 0f1f 8400 | 0000 0000 | bae4 ffff | ff48 8b6c | 2420 c5fb | 1044 2428 | c5fb 1144 | 2420 c5fb 
  0x00000214a641cb34: 114c 2428 | c5fb 1154 | 2430 c5fb | 1164 2438 | c5fb 115c | 2440 4489 

  0x00000214a641cb4c: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641cb4c: 5424 48e8 

  0x00000214a641cb50: ; ImmutableOopMap {rbp=Oop [72]=NarrowOop }
                      ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@535 (line 270)
  0x00000214a641cb50: 0c75 9bff 

  0x00000214a641cb54: ;   {post_call_nop}
  0x00000214a641cb54: 0f1f 8400 | 0000 0000 | ba3f ffff | ff48 8b6c | 2420 c5fb | 106c 2428 | c5fb 116c | 2420 c5fb 
  0x00000214a641cb74: 114c 2428 | c5fb 1154 | 2430 c5fb | 1164 2438 | c5fb 115c | 2440 4489 | 4c24 48c5 | fb11 4424 
  0x00000214a641cb94: 5044 8954 

  0x00000214a641cb98: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641cb98: 244c 90e8 

  0x00000214a641cb9c: ; ImmutableOopMap {rbp=Oop [72]=NarrowOop [76]=NarrowOop }
                      ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.scene.Node::getLayoutY@15 (line 2883)
                      ; - Alastor$1::handle@515 (line 268)
  0x00000214a641cb9c: c074 9bff 

  0x00000214a641cba0: ;   {post_call_nop}
  0x00000214a641cba0: 0f1f 8400 | 0000 0000 | ba66 ffff | ff48 8b6c | 2420 c5fb | 1044 2428 | c5fb 1144 | 2420 c5fb 
  0x00000214a641cbc0: 114c 2428 | c5fb 1154 | 2430 c5fb | 1164 2438 | c5fb 115c | 2440 4c89 | 4424 504c | 8944 2458 
  0x00000214a641cbe0: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641cbe0: 6666 90e8 

  0x00000214a641cbe4: ; ImmutableOopMap {rbp=Oop [80]=Oop [88]=Oop }
                      ;*invokevirtual computeBounds {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.scene.Node$LazyBoundsProperty::get@9 (line 10191)
                      ; - javafx.scene.Node$LazyBoundsProperty::get@1 (line 10182)
                      ; - javafx.scene.Node::getBoundsInParent@4 (line 3457)
                      ; - Alastor$1::handle@361 (line 258)
  0x00000214a641cbe4: 7874 9bff 

  0x00000214a641cbe8: ;   {post_call_nop}
  0x00000214a641cbe8: 0f1f 8400 | 0000 0000 

  0x00000214a641cbf0: ;   {metadata('javafx/scene/Node$11')}
  0x00000214a641cbf0: 48ba f014 | 08b6 1402 | 0000 488b 

  0x00000214a641cbfc: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641cbfc: 6c24 30e8 

  0x00000214a641cc00: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::layoutXProperty@8 (line 2814)
                      ; - javafx.scene.Node::setLayoutX@1 (line 2805)
                      ; - Alastor$1::handle@686 (line 287)
  0x00000214a641cc00: 5c6b 9bff 

  0x00000214a641cc04: ;   {post_call_nop}
  0x00000214a641cc04: 0f1f 8400 | 0000 0000 | e904 d8ff | ffba f6ff 

  0x00000214a641cc14: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641cc14: ffff 90e8 

  0x00000214a641cc18: ; ImmutableOopMap {}
                      ;*invokevirtual getChildren {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1844 (line 364)
  0x00000214a641cc18: 4474 9bff 

  0x00000214a641cc1c: ;   {post_call_nop}
  0x00000214a641cc1c: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641cc28: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641cc28: ff66 90e8 

  0x00000214a641cc2c: ; ImmutableOopMap {}
                      ;*invokevirtual nextDouble {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1893 (line 367)
  0x00000214a641cc2c: 3074 9bff 

  0x00000214a641cc30: ;   {post_call_nop}
  0x00000214a641cc30: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641cc3c: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641cc3c: ff66 90e8 

  0x00000214a641cc40: ; ImmutableOopMap {}
                      ;*invokevirtual nextDouble {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1930 (line 368)
  0x00000214a641cc40: 1c74 9bff 

  0x00000214a641cc44: ;   {post_call_nop}
  0x00000214a641cc44: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641cc50: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641cc50: ff66 90e8 

  0x00000214a641cc54: ; ImmutableOopMap {}
                      ;*invokevirtual nextDouble {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1966 (line 369)
  0x00000214a641cc54: 0874 9bff 

  0x00000214a641cc58: ;   {post_call_nop}
  0x00000214a641cc58: 0f1f 8400 | 0000 0000 | bade ffff | ff48 8b6c | 2420 c5fb | 1044 2428 | c5fb 1144 | 2420 c5fb 
  0x00000214a641cc78: 1044 2430 | c5fb 1144 | 2428 c5fb | 1044 2438 | c5fb 1144 | 2430 c5fb | 1044 2440 | c5fb 1144 
  0x00000214a641cc98: 2438 c5fb | 1044 2450 | c5fb 1144 | 2448 448b | 5c24 7044 | 895c 2450 | 448b 5424 | 7444 8954 
  0x00000214a641ccb8: 2454 4c8b | 5424 784c | 8954 2470 | 4c8b 9424 | 8000 0000 | 4c89 5424 

  0x00000214a641ccd0: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ccd0: 7866 90e8 

  0x00000214a641ccd4: ; ImmutableOopMap {rbp=Oop [104]=Oop [112]=Oop [120]=Oop [136]=Oop }
                      ;*invokeinterface addAll {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1775 (line 357)
  0x00000214a641ccd4: 8873 9bff 

  0x00000214a641ccd8: ;   {post_call_nop}
  0x00000214a641ccd8: 0f1f 8400 | 0000 0000 | bade ffff | ff48 8b6c | 2420 c5fb | 1044 2428 | c5fb 1144 | 2420 c5fb 
  0x00000214a641ccf8: 1044 2430 | c5fb 1144 | 2428 c5fb | 1044 2438 | c5fb 1144 | 2430 c5fb | 1044 2440 | c5fb 1144 
  0x00000214a641cd18: 2438 c5fb | 1044 2460 | c5fb 1144 | 2440 c5fb | 1044 2450 | c5fb 1144 | 2448 448b | 5424 7044 
  0x00000214a641cd38: 8954 2450 | 448b 5c24 | 7444 895c | 2454 4c8b | 9424 8000 | 0000 4889 | 4424 684c | 8954 2470 
  0x00000214a641cd58: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641cd58: 6666 90e8 

  0x00000214a641cd5c: ; ImmutableOopMap {rbp=Oop [104]=Oop [112]=Oop [128]=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1849 (line 364)
  0x00000214a641cd5c: 0073 9bff 

  0x00000214a641cd60: ;   {post_call_nop}
  0x00000214a641cd60: 0f1f 8400 | 0000 0000 | bade ffff | ff48 8b6c | 2420 c5fb | 1044 2428 | c5fb 1144 | 2420 c5fb 
  0x00000214a641cd80: 1044 2430 | c5fb 1144 | 2428 c5fb | 1044 2438 | c5fb 1144 | 2430 c5fb | 1044 2440 | c5fb 1144 
  0x00000214a641cda0: 2438 c5fb | 1044 2460 | c5fb 1144 | 2440 c5fb | 1044 2450 | c5fb 1144 | 2448 4489 

  0x00000214a641cdbc: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641cdbc: 4424 60e8 

  0x00000214a641cdc0: ; ImmutableOopMap {rbp=Oop [96]=NarrowOop [128]=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1861 (line 365)
  0x00000214a641cdc0: 9c72 9bff 

  0x00000214a641cdc4: ;   {post_call_nop}
  0x00000214a641cdc4: 0f1f 8400 | 0000 0000 | bade ffff | ffc5 fb10 | 4424 60c5 | fb11 4424 | 4848 8944 

  0x00000214a641cde0: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641cde0: 2460 90e8 

  0x00000214a641cde4: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [96]=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1876 (line 366)
  0x00000214a641cde4: 7872 9bff 

  0x00000214a641cde8: ;   {post_call_nop}
  0x00000214a641cde8: 0f1f 8400 | 0000 0000 | bae4 ffff | ffc5 fb10 | 4c24 60c5 | fb11 4c24 | 48c5 fb11 | 4424 6044 
  0x00000214a641ce08: 894c 2468 

  0x00000214a641ce0c: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ce0c: 6666 90e8 

  0x00000214a641ce10: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [104]=NarrowOop }
                      ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1906 (line 367)
  0x00000214a641ce10: 4c72 9bff 

  0x00000214a641ce14: ;   {post_call_nop}
  0x00000214a641ce14: 0f1f 8400 | 0000 0000 | bade ffff | ffc5 fb10 | 4424 60c5 | fb11 4424 | 4848 8944 

  0x00000214a641ce30: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ce30: 2460 90e8 

  0x00000214a641ce34: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [96]=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1915 (line 367)
  0x00000214a641ce34: 2872 9bff 

  0x00000214a641ce38: ;   {post_call_nop}
  0x00000214a641ce38: 0f1f 8400 | 0000 0000 | bae4 ffff | ffc5 fb10 | 4c24 60c5 | fb11 4c24 | 48c5 fb11 | 4424 6044 
  0x00000214a641ce58: 8944 2468 

  0x00000214a641ce5c: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ce5c: 6666 90e8 

  0x00000214a641ce60: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [104]=NarrowOop }
                      ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1943 (line 368)
  0x00000214a641ce60: fc71 9bff 

  0x00000214a641ce64: ;   {post_call_nop}
  0x00000214a641ce64: 0f1f 8400 | 0000 0000 | bade ffff | ffc5 fb10 | 4424 60c5 | fb11 4424 | 4848 8944 

  0x00000214a641ce80: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ce80: 2460 90e8 

  0x00000214a641ce84: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [96]=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1952 (line 368)
  0x00000214a641ce84: d871 9bff 

  0x00000214a641ce88: ;   {post_call_nop}
  0x00000214a641ce88: 0f1f 8400 | 0000 0000 | bade ffff | ffc5 fb10 | 4424 60c5 | fb11 4424 | 4848 8944 

  0x00000214a641cea4: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641cea4: 2460 90e8 

  0x00000214a641cea8: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [96]=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1980 (line 369)
  0x00000214a641cea8: b471 9bff 

  0x00000214a641ceac: ;   {post_call_nop}
  0x00000214a641ceac: 0f1f 8400 | 0000 0000 | bade ffff | ffc5 fb10 | 4424 60c5 | fb11 4424 | 4848 8944 

  0x00000214a641cec8: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641cec8: 2460 90e8 

  0x00000214a641cecc: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [96]=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1994 (line 370)
  0x00000214a641cecc: 9071 9bff 

  0x00000214a641ced0: ;   {post_call_nop}
  0x00000214a641ced0: 0f1f 8400 | 0000 0000 | 4c89 4c24 | 50c5 fb11 | 6424 48c5 | fb11 5424 | 40c5 fb11 | 5c24 38c5 
  0x00000214a641cef0: fb11 4c24 | 3048 8b6c 

  0x00000214a641cef8: ;   {metadata('javafx/scene/Node$MiscProperties$2')}
  0x00000214a641cef8: 2420 48ba | f83a 1eb6 | 1402 0000 

  0x00000214a641cf04: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641cf04: 6666 90e8 

  0x00000214a641cf08: ; ImmutableOopMap {rbp=Oop [80]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node$MiscProperties::boundsInParentProperty@8 (line 6855)
                      ; - javafx.scene.Node::boundsInParentProperty@4 (line 3488)
                      ; - javafx.scene.Node::getBoundsInParent@1 (line 3457)
                      ; - Alastor$1::handle@361 (line 258)
  0x00000214a641cf08: 5468 9bff 

  0x00000214a641cf0c: ;   {post_call_nop}
  0x00000214a641cf0c: 0f1f 8400 | 0000 0000 | 4889 6c24 | 20c5 fb10 | 4c24 30c5 | fb10 5c24 | 38c5 fb10 | 5424 40c5 
  0x00000214a641cf2c: fb10 6424 | 484c 8b4c | 2450 4c8b | c0e9 8cd5 | ffff c5fb | 1164 2448 | c5fb 1154 | 2440 c5fb 
  0x00000214a641cf4c: 115c 2438 | c5fb 114c | 2430 448b | 5424 504b 

  0x00000214a641cf5c: ;   {metadata('javafx/scene/Node$MiscProperties')}
  0x00000214a641cf5c: 8d2c d448 | ba78 061e | b614 0200 

  0x00000214a641cf68: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641cf68: 0066 90e8 

  0x00000214a641cf6c: ; ImmutableOopMap {rbp=Oop [32]=Oop [80]=NarrowOop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::getMiscProperties@8 (line 6779)
                      ; - javafx.scene.Node::boundsInParentProperty@1 (line 3488)
                      ; - javafx.scene.Node::getBoundsInParent@1 (line 3457)
                      ; - Alastor$1::handle@361 (line 258)
  0x00000214a641cf6c: f067 9bff 

  0x00000214a641cf70: ;   {post_call_nop}
  0x00000214a641cf70: 0f1f 8400 | 0000 0000 | c5fb 104c | 2430 c5fb | 105c 2438 | c5fb 1054 | 2440 c5fb | 1064 2448 
  0x00000214a641cf90: 4c8b c8e9 | e2d5 ffff | baf6 ffff 

  0x00000214a641cf9c: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641cf9c: ff66 90e8 

  0x00000214a641cfa0: ; ImmutableOopMap {}
                      ;*invokevirtual getChildren {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@919 (line 301)
  0x00000214a641cfa0: bc70 9bff 

  0x00000214a641cfa4: ;   {post_call_nop}
  0x00000214a641cfa4: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641cfb0: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641cfb0: ff66 90e8 

  0x00000214a641cfb4: ; ImmutableOopMap {}
                      ;*invokevirtual nextDouble {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@968 (line 304)
  0x00000214a641cfb4: a870 9bff 

  0x00000214a641cfb8: ;   {post_call_nop}
  0x00000214a641cfb8: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641cfc4: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641cfc4: ff66 90e8 

  0x00000214a641cfc8: ; ImmutableOopMap {}
                      ;*invokevirtual nextDouble {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1005 (line 305)
  0x00000214a641cfc8: 9470 9bff 

  0x00000214a641cfcc: ;   {post_call_nop}
  0x00000214a641cfcc: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641cfd8: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641cfd8: ff66 90e8 

  0x00000214a641cfdc: ; ImmutableOopMap {}
                      ;*invokevirtual nextDouble {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1041 (line 306)
  0x00000214a641cfdc: 8070 9bff 

  0x00000214a641cfe0: ;   {post_call_nop}
  0x00000214a641cfe0: 0f1f 8400 | 0000 0000 | ba4d ffff | ffc5 fb11 | 4c24 30c5 | fb11 5424 | 38c5 fb11 | 6424 40c5 
  0x00000214a641d000: fb11 5c24 | 48c5 fb11 | 6c24 5044 | 8954 2458 

  0x00000214a641d010: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641d010: 6666 90e8 

  0x00000214a641d014: ; ImmutableOopMap {rbp=Oop [32]=Oop [88]=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) javafx.beans.property.DoublePropertyBase::isBound@4 (line 157)
                      ; - javafx.beans.property.DoublePropertyBase::set@1 (line 142)
                      ; - javafx.scene.Node::setLayoutY@5 (line 2879)
                      ; - Alastor$1::handle@519 (line 268)
  0x00000214a641d014: 4870 9bff 

  0x00000214a641d018: ;   {post_call_nop}
  0x00000214a641d018: 0f1f 8400 | 0000 0000 | bacc ffff | ff4c 8b54 | 2430 4c89 | 5424 20c5 | fb10 4424 | 38c5 fb11 
  0x00000214a641d038: 4424 30c5 | fb10 4424 | 40c5 fb11 | 4424 38c5 | fb10 4424 | 50c5 fb11 | 4424 40c5 | fb10 4424 
  0x00000214a641d058: 58c5 fb11 | 4424 5044 | 8b9c 2490 | 0000 0044 | 895c 2458 | c5fb 1044 | 2478 c5fb | 1144 2460 
  0x00000214a641d078: 4c8b 9424 | 8800 0000 | 4c89 9424 | 8000 0000 

  0x00000214a641d088: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641d088: 6666 90e8 

  0x00000214a641d08c: ; ImmutableOopMap {rbp=Oop [32]=Oop [104]=Oop [128]=Oop [136]=Oop }
                      ;*invokevirtual allocateInstance {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.invoke.DirectMethodHandle::allocateInstance@12 (line 506)
                      ; - java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial@1
                      ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                      ; - com.sun.javafx.collections.TrackableObservableList::<init>@13 (line 43)
                      ; - javafx.scene.Node$4::<init>@6 (line 1301)
                      ; - javafx.scene.Node::<init>@84 (line 1301)
                      ; - javafx.scene.shape.Shape::<init>@1 (line 174)
                      ; - javafx.scene.shape.Polygon::<init>@1 (line 96)
                      ; - Alastor$1::handle@653 (line 284)
  0x00000214a641d08c: d06f 9bff 

  0x00000214a641d090: ;   {post_call_nop}
  0x00000214a641d090: 0f1f 8400 | 0000 0000 | bacc ffff | ff4c 8b54 | 2430 4c89 | 5424 20c5 | fb10 4424 | 38c5 fb11 
  0x00000214a641d0b0: 4424 30c5 | fb10 4424 | 40c5 fb11 | 4424 38c5 | fb10 4424 | 50c5 fb11 | 4424 40c5 | fb10 4424 
  0x00000214a641d0d0: 58c5 fb11 | 4424 5044 | 8b94 2490 | 0000 0044 | 8954 2458 | c5fb 1044 | 2478 c5fb | 1144 2460 
  0x00000214a641d0f0: 4c8b 9424 | 8800 0000 | 4c89 9424 | 8000 0000 

  0x00000214a641d100: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641d100: 6666 90e8 

  0x00000214a641d104: ; ImmutableOopMap {rbp=Oop [32]=Oop [104]=Oop [128]=Oop }
                      ;*invokevirtual allocateInstance {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.invoke.DirectMethodHandle::allocateInstance@12 (line 506)
                      ; - java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial@1
                      ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                      ; - com.sun.javafx.collections.TrackableObservableList::<init>@13 (line 43)
                      ; - javafx.scene.shape.Polygon$2::<init>@6 (line 116)
                      ; - javafx.scene.shape.Polygon::<init>@25 (line 116)
                      ; - Alastor$1::handle@653 (line 284)
  0x00000214a641d104: 586f 9bff 

  0x00000214a641d108: ;   {post_call_nop}
  0x00000214a641d108: 0f1f 8400 | 0000 0000 | bacc ffff | ff4c 8b54 | 2430 4c89 | 5424 20c5 | fb10 4424 | 38c5 fb11 
  0x00000214a641d128: 4424 30c5 | fb10 4424 | 40c5 fb11 | 4424 38c5 | fb10 4424 | 50c5 fb11 | 4424 40c5 | fb10 4424 
  0x00000214a641d148: 58c5 fb11 | 4424 5044 | 8b9c 2490 | 0000 0044 | 895c 2458 | c5fb 1044 | 2478 c5fb | 1144 2460 
  0x00000214a641d168: 4c8b 9424 | 8800 0000 | 4c89 5424 | 784c 8b94 | 2498 0000 | 004c 8994 | 2488 0000 | 004c 8994 
  0x00000214a641d188: 2490 0000 

  0x00000214a641d18c: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641d18c: 0066 90e8 

  0x00000214a641d190: ; ImmutableOopMap {rbp=Oop [32]=Oop [104]=Oop [120]=Oop [136]=Oop [144]=Oop }
                      ;*invokevirtual allocateInstance {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.invoke.DirectMethodHandle::allocateInstance@12 (line 506)
                      ; - java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial@1
                      ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                      ; - com.sun.javafx.collections.TrackableObservableList::<init>@13 (line 43)
                      ; - javafx.scene.Node$4::<init>@6 (line 1301)
                      ; - javafx.scene.Node::<init>@84 (line 1301)
                      ; - javafx.scene.shape.Shape::<init>@1 (line 174)
                      ; - javafx.scene.shape.Rectangle::<init>@1 (line 126)
                      ; - Alastor$1::handle@668 (line 285)
  0x00000214a641d190: cc6e 9bff 

  0x00000214a641d194: ;   {post_call_nop}
  0x00000214a641d194: 0f1f 8400 | 0000 0000 | bade ffff | ff48 8b6c | 2430 c5fb | 1044 2428 | c5fb 1144 | 2420 c5fb 
  0x00000214a641d1b4: 1044 2438 | c5fb 1144 | 2428 c5fb | 1044 2440 | c5fb 1144 | 2430 c5fb | 1044 2450 | c5fb 1144 
  0x00000214a641d1d4: 2438 c5fb | 1044 2448 | c5fb 1144 | 2440 c5fb | 1044 2458 | c5fb 1144 | 2448 c5fb | 1044 2478 
  0x00000214a641d1f4: c5fb 1144 | 2458 4c8b | 5424 684c | 8954 2460 | 448b 5424 | 7444 8954 | 2454 448b | 5c24 7044 
  0x00000214a641d214: 895c 2468 | 4889 8424 | 8000 0000 

  0x00000214a641d220: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641d220: 6666 90e8 

  0x00000214a641d224: ; ImmutableOopMap {rbp=Oop [96]=Oop [128]=Oop [136]=Oop [152]=Oop }
                      ;*invokevirtual set {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.scene.Node::setLayoutX@5 (line 2805)
                      ; - Alastor$1::handle@686 (line 287)
  0x00000214a641d224: 386e 9bff 

  0x00000214a641d228: ;   {post_call_nop}
  0x00000214a641d228: 0f1f 8400 | 0000 0000 | bade ffff | ffc5 fb10 | 4424 28c5 | fb11 4424 | 20c5 fb10 | 4424 38c5 
  0x00000214a641d248: fb11 4424 | 28c5 fb10 | 4424 40c5 | fb11 4424 | 30c5 fb10 | 4424 50c5 | fb11 4424 | 38c5 fb10 
  0x00000214a641d268: 4424 48c5 | fb11 4424 | 40c5 fb10 | 4424 58c5 | fb11 4424 | 48c5 fb10 | 4424 78c5 | fb11 4424 
  0x00000214a641d288: 584c 8b54 | 2468 4c89 | 5424 6044 | 8b5c 2474 | 4489 5c24 | 544c 8b94 | 24a8 0000 | 0048 8944 
  0x00000214a641d2a8: 2478 4c89 | 9424 8000 

  0x00000214a641d2b0: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641d2b0: 0000 90e8 

  0x00000214a641d2b4: ; ImmutableOopMap {rbp=Oop [96]=Oop [120]=Oop [128]=Oop [168]=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@924 (line 301)
  0x00000214a641d2b4: a86d 9bff 

  0x00000214a641d2b8: ;   {post_call_nop}
  0x00000214a641d2b8: 0f1f 8400 | 0000 0000 | bade ffff | ffc5 fb10 | 4424 28c5 | fb11 4424 | 20c5 fb10 | 4424 38c5 
  0x00000214a641d2d8: fb11 4424 | 28c5 fb10 | 4424 40c5 | fb11 4424 | 30c5 fb10 | 4424 50c5 | fb11 4424 | 38c5 fb10 
  0x00000214a641d2f8: 4424 48c5 | fb11 4424 | 40c5 fb10 | 4424 58c5 | fb11 4424 | 48c5 fb10 | 4424 78c5 | fb11 4424 
  0x00000214a641d318: 584c 8b5c | 2468 4c89 | 5c24 6044 | 8954 2470 

  0x00000214a641d328: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641d328: 6666 90e8 

  0x00000214a641d32c: ; ImmutableOopMap {rbp=Oop [96]=Oop [112]=NarrowOop [168]=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@936 (line 302)
  0x00000214a641d32c: 306d 9bff 

  0x00000214a641d330: ;   {post_call_nop}
  0x00000214a641d330: 0f1f 8400 | 0000 0000 | bade ffff | ff4c 8b54 | 2430 4c89 | 5424 20c5 | fb10 4424 | 38c5 fb11 
  0x00000214a641d350: 4424 30c5 | fb10 4424 | 40c5 fb11 | 4424 38c5 | fb10 4424 | 50c5 fb11 | 4424 40c5 | fb10 4424 
  0x00000214a641d370: 58c5 fb11 | 4424 5044 | 8b54 2474 | 4489 5424 | 5c48 8944 

  0x00000214a641d384: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641d384: 2470 90e8 

  0x00000214a641d388: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [104]=Oop [112]=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@951 (line 303)
  0x00000214a641d388: d46c 9bff 

  0x00000214a641d38c: ;   {post_call_nop}
  0x00000214a641d38c: 0f1f 8400 | 0000 0000 | bae4 ffff | ff4c 8954 | 2420 c5fb | 104c 2438 | c5fb 114c | 2430 c5fb 
  0x00000214a641d3ac: 104c 2440 | c5fb 114c | 2438 c5fb | 104c 2450 | c5fb 114c | 2440 c5fb | 104c 2458 | c5fb 114c 
  0x00000214a641d3cc: 2450 c5fb | 104c 2478 | c5fb 114c | 2460 448b | 5424 7444 | 8954 245c | c5fb 1144 | 2470 4489 
  0x00000214a641d3ec: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641d3ec: 4424 78e8 

  0x00000214a641d3f0: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [104]=Oop [120]=NarrowOop }
                      ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@981 (line 304)
  0x00000214a641d3f0: 6c6c 9bff 

  0x00000214a641d3f4: ;   {post_call_nop}
  0x00000214a641d3f4: 0f1f 8400 | 0000 0000 | bade ffff | ff4c 8b54 | 2430 4c89 | 5424 20c5 | fb10 4424 | 38c5 fb11 
  0x00000214a641d414: 4424 30c5 | fb10 4424 | 40c5 fb11 | 4424 38c5 | fb10 4424 | 50c5 fb11 | 4424 40c5 | fb10 4424 
  0x00000214a641d434: 58c5 fb11 | 4424 5044 | 8b54 2474 | 4489 5424 | 5c48 8944 

  0x00000214a641d448: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641d448: 2470 90e8 

  0x00000214a641d44c: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [104]=Oop [112]=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@990 (line 304)
  0x00000214a641d44c: 106c 9bff 

  0x00000214a641d450: ;   {post_call_nop}
  0x00000214a641d450: 0f1f 8400 | 0000 0000 | bae4 ffff | ff4c 8954 | 2420 c5fb | 104c 2438 | c5fb 114c | 2430 c5fb 
  0x00000214a641d470: 104c 2440 | c5fb 114c | 2438 c5fb | 104c 2450 | c5fb 114c | 2440 c5fb | 104c 2458 | c5fb 114c 
  0x00000214a641d490: 2450 c5fb | 104c 2478 | c5fb 114c | 2460 448b | 5424 7444 | 8954 245c | c5fb 1144 | 2470 4489 
  0x00000214a641d4b0: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641d4b0: 4c24 78e8 

  0x00000214a641d4b4: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [104]=Oop [120]=NarrowOop }
                      ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1018 (line 305)
  0x00000214a641d4b4: a86b 9bff 

  0x00000214a641d4b8: ;   {post_call_nop}
  0x00000214a641d4b8: 0f1f 8400 | 0000 0000 | bade ffff | ff4c 8b54 | 2430 4c89 | 5424 20c5 | fb10 4424 | 38c5 fb11 
  0x00000214a641d4d8: 4424 30c5 | fb10 4424 | 40c5 fb11 | 4424 38c5 | fb10 4424 | 50c5 fb11 | 4424 40c5 | fb10 4424 
  0x00000214a641d4f8: 58c5 fb11 | 4424 5044 | 8b5c 2474 | 4489 5c24 | 5c48 8944 

  0x00000214a641d50c: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641d50c: 2470 90e8 

  0x00000214a641d510: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [104]=Oop [112]=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1027 (line 305)
  0x00000214a641d510: 4c6b 9bff 

  0x00000214a641d514: ;   {post_call_nop}
  0x00000214a641d514: 0f1f 8400 | 0000 0000 | bade ffff | ff4c 8b54 | 2430 4c89 | 5424 20c5 | fb10 4424 | 38c5 fb11 
  0x00000214a641d534: 4424 30c5 | fb10 4424 | 40c5 fb11 | 4424 38c5 | fb10 4424 | 50c5 fb11 | 4424 40c5 | fb10 4424 
  0x00000214a641d554: 58c5 fb11 | 4424 5044 | 8b5c 2474 | 4489 5c24 | 5c48 8944 

  0x00000214a641d568: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641d568: 2470 90e8 

  0x00000214a641d56c: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [104]=Oop [112]=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1055 (line 306)
  0x00000214a641d56c: f06a 9bff 

  0x00000214a641d570: ;   {post_call_nop}
  0x00000214a641d570: 0f1f 8400 | 0000 0000 | bade ffff | ff4c 8b54 | 2430 4c89 | 5424 20c5 | fb10 4424 | 38c5 fb11 
  0x00000214a641d590: 4424 30c5 | fb10 4424 | 40c5 fb11 | 4424 38c5 | fb10 4424 | 50c5 fb11 | 4424 40c5 | fb10 4424 
  0x00000214a641d5b0: 58c5 fb11 | 4424 5044 | 8b54 2474 | 4489 5424 | 5c48 8944 

  0x00000214a641d5c4: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641d5c4: 2470 90e8 

  0x00000214a641d5c8: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [104]=Oop [112]=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1069 (line 307)
  0x00000214a641d5c8: 946a 9bff 

  0x00000214a641d5cc: ;   {post_call_nop}
  0x00000214a641d5cc: 0f1f 8400 | 0000 0000 

  0x00000214a641d5d4: ;   {metadata({type array byte})}
  0x00000214a641d5d4: 48ba 187e | 16b5 1402 | 0000 458b 

  0x00000214a641d5e0: ;   {runtime_call C2 Runtime new_array}
  0x00000214a641d5e0: c266 90e8 

  0x00000214a641d5e4: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [80]=Oop }
                      ;*invokevirtual allocateUninitializedArray0 {reexecute=0 rethrow=0 return_oop=1}
                      ; - jdk.internal.misc.Unsafe::allocateUninitializedArray@51 (line 1386)
                      ; - java.lang.StringConcatHelper::newArray@21 (line 575)
                      ; - java.lang.StringConcatHelper$Concat1::concat0@23 (line 72)
                      ; - java.lang.StringConcatHelper$Concat1::concat@5 (line 133)
                      ; - java.lang.invoke.DirectMethodHandle$Holder::invokeSpecial@13
                      ; - java.lang.invoke.LambdaForm$MH/0x00000214b6218400::invoke@23
                      ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                      ; - Alastor$1::handle@2040 (line 378)
  0x00000214a641d5e4: f873 9bff 

  0x00000214a641d5e8: ;   {post_call_nop}
  0x00000214a641d5e8: 0f1f 8400 | 0000 0000 | e92f d1ff 

  0x00000214a641d5f4: ;   {metadata('java/lang/String')}
  0x00000214a641d5f4: ff48 ba48 | ae16 b514 

  0x00000214a641d5fc: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641d5fc: 0200 00e8 

  0x00000214a641d600: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [96]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.lang.StringConcatHelper$Concat1::concat0@79 (line 77)
                      ; - java.lang.StringConcatHelper$Concat1::concat@5 (line 133)
                      ; - java.lang.invoke.DirectMethodHandle$Holder::invokeSpecial@13
                      ; - java.lang.invoke.LambdaForm$MH/0x00000214b6218400::invoke@23
                      ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                      ; - Alastor$1::handle@2040 (line 378)
  0x00000214a641d600: 5c61 9bff 

  0x00000214a641d604: ;   {post_call_nop}
  0x00000214a641d604: 0f1f 8400 | 0000 0000 | e90b d2ff 

  0x00000214a641d610: ;   {metadata('java/util/ArrayList$Itr')}
  0x00000214a641d610: ff48 bab8 | f728 b514 

  0x00000214a641d618: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641d618: 0200 00e8 

  0x00000214a641d61c: ; ImmutableOopMap {rbp=Oop [32]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.ArrayList::iterator@0 (line 1030)
                      ; - Alastor$1::handle@108 (line 236)
  0x00000214a641d61c: 4061 9bff 

  0x00000214a641d620: ;   {post_call_nop}
  0x00000214a641d620: 0f1f 8400 | 0000 0000 | e9e4 d2ff | ffba e4ff | ffff 488b | 6c24 20c5 | fb10 6c24 | 28c5 fb11 
  0x00000214a641d640: 6c24 20c5 | fb11 4c24 | 28c5 fb11 | 5424 30c5 | fb11 6424 | 38c5 fb11 | 5c24 4089 | 4c24 48c5 
  0x00000214a641d660: fb11 4424 

  0x00000214a641d664: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641d664: 5066 90e8 

  0x00000214a641d668: ; ImmutableOopMap {rbp=Oop [72]=NarrowOop }
                      ;*dastore {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@315 (line 251)
  0x00000214a641d668: f469 9bff 

  0x00000214a641d66c: ;   {post_call_nop}
  0x00000214a641d66c: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641d678: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641d678: ff66 90e8 

  0x00000214a641d67c: ; ImmutableOopMap {}
                      ;*invokevirtual println {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2520 (line 418)
  0x00000214a641d67c: e069 9bff 

  0x00000214a641d680: ;   {post_call_nop}
  0x00000214a641d680: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641d68c: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641d68c: ff66 90e8 

  0x00000214a641d690: ; ImmutableOopMap {}
                      ;*invokevirtual getdmg {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2531 (line 419)
  0x00000214a641d690: cc69 9bff 

  0x00000214a641d694: ;   {post_call_nop}
  0x00000214a641d694: 0f1f 8400 | 0000 0000 | baf6 ffff | ff48 8b6c 

  0x00000214a641d6a4: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641d6a4: 2420 90e8 

  0x00000214a641d6a8: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual setEffect {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2565 (line 423)
  0x00000214a641d6a8: b469 9bff 

  0x00000214a641d6ac: ;   {post_call_nop}
  0x00000214a641d6ac: 0f1f 8400 | 0000 0000 | bacc ffff | ff4c 895c 

  0x00000214a641d6bc: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641d6bc: 2420 90e8 

  0x00000214a641d6c0: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [80]=Oop [96]=Oop }
                      ;*invokevirtual allocateInstance {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.invoke.DirectMethodHandle::allocateInstance@12 (line 506)
                      ; - java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial@1
                      ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                      ; - Alastor$1::handle@2589 (line 425)
  0x00000214a641d6c0: 9c69 9bff 

  0x00000214a641d6c4: ;   {post_call_nop}
  0x00000214a641d6c4: 0f1f 8400 | 0000 0000 

  0x00000214a641d6cc: ;   {metadata('javafx/scene/Node$12')}
  0x00000214a641d6cc: 48ba 980a | 08b6 1402 

  0x00000214a641d6d4: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641d6d4: 0000 90e8 

  0x00000214a641d6d8: ; ImmutableOopMap {rbp=Oop [48]=Oop [104]=Oop [136]=Oop [148]=NarrowOop [152]=Oop [160]=NarrowOop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::layoutYProperty@8 (line 2888)
                      ; - javafx.scene.Node::setLayoutY@1 (line 2879)
                      ; - Alastor$1::handle@763 (line 290)
  0x00000214a641d6d8: 8460 9bff 

  0x00000214a641d6dc: ;   {post_call_nop}
  0x00000214a641d6dc: 0f1f 8400 | 0000 0000 | e97c d4ff | ffba f6ff 

  0x00000214a641d6ec: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641d6ec: ffff 90e8 

  0x00000214a641d6f0: ; ImmutableOopMap {}
                      ;*invokevirtual nextDouble {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1256 (line 326)
  0x00000214a641d6f0: 6c69 9bff 

  0x00000214a641d6f4: ;   {post_call_nop}
  0x00000214a641d6f4: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641d700: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641d700: ff66 90e8 

  0x00000214a641d704: ; ImmutableOopMap {}
                      ;*invokevirtual getChildren {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1454 (line 338)
  0x00000214a641d704: 5869 9bff 

  0x00000214a641d708: ;   {post_call_nop}
  0x00000214a641d708: 0f1f 8400 | 0000 0000 | bade ffff | ff48 8b6c | 2420 c5fb | 1044 2428 | c5fb 1144 | 2420 c5fb 
  0x00000214a641d728: 1044 2430 | c5fb 1144 | 2428 c5fb | 1044 2438 | c5fb 1144 | 2430 c5fb | 1044 2440 | c5fb 1144 
  0x00000214a641d748: 2438 c5fb | 1044 2460 | c5fb 1144 | 2440 c5fb | 1044 2450 | c5fb 1144 | 2448 448b | 5424 5c44 
  0x00000214a641d768: 8954 2454 | 448b 9c24 | 8400 0000 | 4489 5c24 | 58c5 fb10 | 4424 70c5 | fb11 4424 | 6044 8b94 
  0x00000214a641d788: 2480 0000 | 0044 8954 | 245c 4c8b | 9424 8800 | 0000 4c89 

  0x00000214a641d79c: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641d79c: 5424 70e8 

  0x00000214a641d7a0: ; ImmutableOopMap {rbp=Oop [112]=Oop [144]=Oop [152]=Oop [160]=Oop }
                      ;*invokeinterface addAll {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1371 (line 331)
  0x00000214a641d7a0: bc68 9bff 

  0x00000214a641d7a4: ;   {post_call_nop}
  0x00000214a641d7a4: 0f1f 8400 | 0000 0000 | bade ffff | ff48 8b6c | 2420 c5fb | 1044 2428 | c5fb 1144 | 2420 c5fb 
  0x00000214a641d7c4: 1044 2430 | c5fb 1144 | 2428 c5fb | 1044 2438 | c5fb 1144 | 2430 c5fb | 1044 2440 | c5fb 1144 
  0x00000214a641d7e4: 2438 c5fb | 1044 2460 | c5fb 1144 | 2440 c5fb | 1044 2450 | c5fb 1144 | 2448 448b | 5c24 5c44 
  0x00000214a641d804: 895c 2454 | c5fb 1044 | 2468 c5fb | 1144 2460 | 448b 5c24 | 7044 895c | 245c 4c8b | 9424 9800 
  0x00000214a641d824: 0000 4889 | 4424 704c | 8954 2478 

  0x00000214a641d830: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641d830: 6666 90e8 

  0x00000214a641d834: ; ImmutableOopMap {rbp=Oop [112]=Oop [120]=Oop [152]=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1459 (line 338)
  0x00000214a641d834: 2868 9bff 

  0x00000214a641d838: ;   {post_call_nop}
  0x00000214a641d838: 0f1f 8400 | 0000 0000 | bade ffff | ff48 8b6c | 2420 c5fb | 1044 2428 | c5fb 1144 | 2420 c5fb 
  0x00000214a641d858: 1044 2430 | c5fb 1144 | 2428 c5fb | 1044 2438 | c5fb 1144 | 2430 c5fb | 1044 2440 | c5fb 1144 
  0x00000214a641d878: 2438 c5fb | 1044 2460 | c5fb 1144 | 2440 c5fb | 1044 2450 | c5fb 1144 | 2448 448b | 5424 5c44 
  0x00000214a641d898: 8954 2454 | c5fb 1044 | 2468 c5fb | 1144 2460 | 448b 5424 | 7044 8954 | 245c 4c8b | 9424 9800 
  0x00000214a641d8b8: 0000 4489 | 4424 704c | 8954 2478 

  0x00000214a641d8c4: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641d8c4: 6666 90e8 

  0x00000214a641d8c8: ; ImmutableOopMap {rbp=Oop [112]=NarrowOop [120]=Oop [152]=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1471 (line 339)
  0x00000214a641d8c8: 9467 9bff 

  0x00000214a641d8cc: ;   {post_call_nop}
  0x00000214a641d8cc: 0f1f 8400 | 0000 0000 | bade ffff | ff48 8b6c | 2420 c5fb | 1044 2428 | c5fb 1144 | 2420 c5fb 
  0x00000214a641d8ec: 1044 2430 | c5fb 1144 | 2428 c5fb | 1044 2438 | c5fb 1144 | 2430 c5fb | 1044 2440 | c5fb 1144 
  0x00000214a641d90c: 2438 c5fb | 1044 2460 | c5fb 1144 | 2440 c5fb | 1044 2450 | c5fb 1144 | 2448 448b | 5c24 5c44 
  0x00000214a641d92c: 895c 2454 | 4889 4424 

  0x00000214a641d934: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641d934: 6866 90e8 

  0x00000214a641d938: ; ImmutableOopMap {rbp=Oop [104]=Oop [116]=NarrowOop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1499 (line 340)
  0x00000214a641d938: 2467 9bff 

  0x00000214a641d93c: ;   {post_call_nop}
  0x00000214a641d93c: 0f1f 8400 | 0000 0000 | bade ffff | ff48 8b6c | 2420 c5fb | 1044 2428 | c5fb 1144 | 2420 c5fb 
  0x00000214a641d95c: 1044 2430 | c5fb 1144 | 2428 c5fb | 1044 2438 | c5fb 1144 | 2430 c5fb | 1044 2440 | c5fb 1144 
  0x00000214a641d97c: 2438 c5fb | 1044 2460 | c5fb 1144 | 2440 c5fb | 1044 2450 | c5fb 1144 | 2448 448b | 5c24 5c44 
  0x00000214a641d99c: 895c 2454 | 4889 4424 

  0x00000214a641d9a4: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641d9a4: 6866 90e8 

  0x00000214a641d9a8: ; ImmutableOopMap {rbp=Oop [104]=Oop [116]=NarrowOop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1547 (line 341)
  0x00000214a641d9a8: b466 9bff 

  0x00000214a641d9ac: ;   {post_call_nop}
  0x00000214a641d9ac: 0f1f 8400 | 0000 0000 | bade ffff | ff48 8b6c | 2420 c5fb | 1044 2428 | c5fb 1144 | 2420 c5fb 
  0x00000214a641d9cc: 1044 2430 | c5fb 1144 | 2428 c5fb | 1044 2438 | c5fb 1144 | 2430 c5fb | 1044 2440 | c5fb 1144 
  0x00000214a641d9ec: 2438 c5fb | 1044 2460 | c5fb 1144 | 2440 c5fb | 1044 2450 | c5fb 1144 | 2448 448b | 5424 5c44 
  0x00000214a641da0c: 8954 2454 | 4889 4424 

  0x00000214a641da14: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641da14: 6066 90e8 

  0x00000214a641da18: ; ImmutableOopMap {rbp=Oop [96]=Oop [116]=NarrowOop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1593 (line 342)
  0x00000214a641da18: 4466 9bff 

  0x00000214a641da1c: ;   {post_call_nop}
  0x00000214a641da1c: 0f1f 8400 | 0000 0000 | bade ffff | ffc5 fb10 | 4424 60c5 | fb11 4424 | 4848 8944 

  0x00000214a641da38: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641da38: 2468 90e8 

  0x00000214a641da3c: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [104]=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1607 (line 343)
  0x00000214a641da3c: 2066 9bff 

  0x00000214a641da40: ;   {post_call_nop}
  0x00000214a641da40: 0f1f 8400 | 0000 0000 | bade ffff | ffc5 fb10 | 4424 60c5 | fb11 4424 | 4848 8944 

  0x00000214a641da5c: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641da5c: 2468 90e8 

  0x00000214a641da60: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [104]=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1621 (line 344)
  0x00000214a641da60: fc65 9bff 

  0x00000214a641da64: ;   {post_call_nop}
  0x00000214a641da64: 0f1f 8400 | 0000 0000 | bade ffff | ff4c 8b54 | 2430 4c89 | 5424 20c5 | fb10 4424 | 38c5 fb11 
  0x00000214a641da84: 4424 30c5 | fb10 4424 | 40c5 fb11 | 4424 38c5 | fb10 4424 | 50c5 fb11 | 4424 40c5 | fb10 4424 
  0x00000214a641daa4: 58c5 fb11 | 4424 50c5 | fb10 4424 | 78c5 fb11 | 4424 604c | 8b94 2488 | 0000 004c | 8954 2478 
  0x00000214a641dac4: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641dac4: 6666 90e8 

  0x00000214a641dac8: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [104]=Oop [120]=Oop [152]=Oop [168]=Oop }
                      ;*invokeinterface addAll {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@752 (line 289)
  0x00000214a641dac8: 9465 9bff 

  0x00000214a641dacc: ;   {post_call_nop}
  0x00000214a641dacc: 0f1f 8400 | 0000 0000 | bade ffff | ffc5 fb10 | 4424 28c5 | fb11 4424 | 20c5 fb10 | 4424 38c5 
  0x00000214a641daec: fb11 4424 | 28c5 fb10 | 4424 40c5 | fb11 4424 | 30c5 fb10 | 4424 50c5 | fb11 4424 | 38c5 fb10 
  0x00000214a641db0c: 4424 48c5 | fb11 4424 | 40c5 fb10 | 4424 58c5 | fb11 4424 | 48c5 fb10 | 4424 78c5 | fb11 4424 
  0x00000214a641db2c: 584c 8b54 | 2468 4c89 | 5424 6044 | 8b54 2474 | 4489 5424 | 5444 8b5c | 2470 4489 | 5c24 6848 
  0x00000214a641db4c: 8984 2480 

  0x00000214a641db50: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641db50: 0000 00e8 

  0x00000214a641db54: ; ImmutableOopMap {rbp=Oop [96]=Oop [128]=Oop [136]=Oop [152]=Oop }
                      ;*invokevirtual set {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.scene.Node::setLayoutY@5 (line 2879)
                      ; - Alastor$1::handle@763 (line 290)
  0x00000214a641db54: 0865 9bff 

  0x00000214a641db58: ;   {post_call_nop}
  0x00000214a641db58: 0f1f 8400 | 0000 0000 | bade ffff | ffc5 fb10 | 4424 28c5 | fb11 4424 | 20c5 fb10 | 4424 38c5 
  0x00000214a641db78: fb11 4424 | 28c5 fb10 | 4424 40c5 | fb11 4424 | 30c5 fb10 | 4424 50c5 | fb11 4424 | 38c5 fb10 
  0x00000214a641db98: 4424 48c5 | fb11 4424 | 40c5 fb10 | 4424 58c5 | fb11 4424 | 48c5 fb10 | 4424 78c5 | fb11 4424 
  0x00000214a641dbb8: 584c 8b54 | 2468 4c89 | 5424 6044 | 8b54 2474 | 4489 5424 

  0x00000214a641dbcc: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641dbcc: 5466 90e8 

  0x00000214a641dbd0: ; ImmutableOopMap {rbp=Oop [96]=Oop [136]=Oop [152]=Oop [168]=Oop [176]=Oop }
                      ;*invokeinterface addAll {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@829 (line 292)
  0x00000214a641dbd0: 8c64 9bff 

  0x00000214a641dbd4: ;   {post_call_nop}
  0x00000214a641dbd4: 0f1f 8400 | 0000 0000 | ba4d ffff | ff48 8b6c | 2430 c5fb | 1044 2428 | c5fb 1144 | 2420 c5fb 
  0x00000214a641dbf4: 1044 2438 | c5fb 1144 | 2428 c5fb | 1044 2440 | c5fb 1144 | 2430 c5fb | 1044 2450 | c5fb 1144 
  0x00000214a641dc14: 2438 c5fb | 1044 2448 | c5fb 1144 | 2440 c5fb | 1044 2458 | c5fb 1144 | 2448 c5fb | 1044 2478 
  0x00000214a641dc34: c5fb 1144 | 2458 4c8b | 5424 684c | 8954 2460 | 448b 5424 | 7444 8954 | 2454 448b | 5c24 7044 
  0x00000214a641dc54: 895c 2468 | 4489 4424 

  0x00000214a641dc5c: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641dc5c: 6c66 90e8 

  0x00000214a641dc60: ; ImmutableOopMap {rbp=Oop [96]=Oop [108]=NarrowOop [136]=Oop [152]=Oop [168]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) javafx.beans.property.DoublePropertyBase::isBound@4 (line 157)
                      ; - javafx.beans.property.DoublePropertyBase::set@1 (line 142)
                      ; - javafx.scene.Node::setLayoutX@5 (line 2805)
                      ; - Alastor$1::handle@686 (line 287)
  0x00000214a641dc60: fc63 9bff 

  0x00000214a641dc64: ;   {post_call_nop}
  0x00000214a641dc64: 0f1f 8400 | 0000 0000 | c5fb 116c | 2460 894c | 2458 c5fb | 1164 2450 | c5fb 1154 | 2448 c5fb 
  0x00000214a641dc84: 115c 2440 | c5fb 114c | 2438 4c8b | 5424 204c | 8954 2430 

  0x00000214a641dc98: ;   {metadata('javafx/scene/Node$11')}
  0x00000214a641dc98: 48ba f014 | 08b6 1402 

  0x00000214a641dca0: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641dca0: 0000 90e8 

  0x00000214a641dca4: ; ImmutableOopMap {rbp=Oop [48]=Oop [88]=NarrowOop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::layoutXProperty@8 (line 2814)
                      ; - javafx.scene.Node::setLayoutX@1 (line 2805)
                      ; - Alastor$1::handle@245 (line 248)
  0x00000214a641dca4: b85a 9bff 

  0x00000214a641dca8: ;   {post_call_nop}
  0x00000214a641dca8: 0f1f 8400 | 0000 0000 | 4c8b 5424 | 304c 8954 | 2420 c5fb | 104c 2438 | c5fb 105c | 2440 c5fb 
  0x00000214a641dcc8: 1054 2448 | c5fb 1064 | 2450 8b4c | 2458 c5fb | 106c 2460 | e9a6 cfff | ffc5 fb11 | 6c24 6089 
  0x00000214a641dce8: 4c24 58c5 | fb11 6424 | 50c5 fb11 | 5424 48c5 | fb11 5c24 | 40c5 fb11 | 4c24 384c | 8b54 2420 
  0x00000214a641dd08: 4c89 5424 

  0x00000214a641dd0c: ;   {metadata('javafx/scene/Node$11')}
  0x00000214a641dd0c: 3048 baf0 | 1408 b614 

  0x00000214a641dd14: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641dd14: 0200 00e8 

  0x00000214a641dd18: ; ImmutableOopMap {rbp=Oop [48]=Oop [88]=NarrowOop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::layoutXProperty@8 (line 2814)
                      ; - javafx.scene.Node::setLayoutX@1 (line 2805)
                      ; - Alastor$1::handle@279 (line 249)
  0x00000214a641dd18: 445a 9bff 

  0x00000214a641dd1c: ;   {post_call_nop}
  0x00000214a641dd1c: 0f1f 8400 | 0000 0000 | 4c8b 5424 | 304c 8954 | 2420 c5fb | 104c 2438 | c5fb 105c | 2440 c5fb 
  0x00000214a641dd3c: 1054 2448 | c5fb 1064 | 2450 8b4c | 2458 c5fb | 106c 2460 | e9d5 cfff | ffba e4ff | ffff 488b 
  0x00000214a641dd5c: 6c24 20c5 | fb10 4424 | 28c5 fb11 | 4424 20c5 | fb11 4c24 | 28c5 fb11 | 5424 30c5 | fb11 6424 
  0x00000214a641dd7c: 38c5 fb11 | 5c24 40c5 | fb11 6c24 | 4844 895c 

  0x00000214a641dd8c: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641dd8c: 2454 90e8 

  0x00000214a641dd90: ; ImmutableOopMap {rbp=Oop [84]=NarrowOop }
                      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@582 (line 278)
  0x00000214a641dd90: cc62 9bff 

  0x00000214a641dd94: ;   {post_call_nop}
  0x00000214a641dd94: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641dda0: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641dda0: ff66 90e8 

  0x00000214a641dda4: ; ImmutableOopMap {}
                      ;*invokevirtual nextBoolean {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1120 (line 313)
  0x00000214a641dda4: b862 9bff 

  0x00000214a641dda8: ;   {post_call_nop}
  0x00000214a641dda8: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641ddb4: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ddb4: ff66 90e8 

  0x00000214a641ddb8: ; ImmutableOopMap {}
                      ;*invokevirtual nextBoolean {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1142 (line 314)
  0x00000214a641ddb8: a462 9bff 

  0x00000214a641ddbc: ;   {post_call_nop}
  0x00000214a641ddbc: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641ddc8: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ddc8: ff66 90e8 

  0x00000214a641ddcc: ; ImmutableOopMap {}
                      ;*invokevirtual nextInt {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1644 (line 349)
  0x00000214a641ddcc: 9062 9bff 

  0x00000214a641ddd0: ;   {post_call_nop}
  0x00000214a641ddd0: 0f1f 8400 | 0000 0000 | c5fb 116c | 2460 4489 | 4c24 58c5 | fb11 6424 | 50c5 fb11 | 5424 48c5 
  0x00000214a641ddf0: fb11 5c24 | 40c5 fb11 | 4c24 384c | 8b54 2420 | 4c89 5424 

  0x00000214a641de04: ;   {metadata('javafx/scene/Node$12')}
  0x00000214a641de04: 3048 ba98 | 0a08 b614 

  0x00000214a641de0c: ;   {runtime_call C2 Runtime new_instance}
  0x00000214a641de0c: 0200 00e8 

  0x00000214a641de10: ; ImmutableOopMap {rbp=Oop [48]=Oop [88]=NarrowOop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - javafx.scene.Node::layoutYProperty@8 (line 2888)
                      ; - javafx.scene.Node::setLayoutY@1 (line 2879)
                      ; - Alastor$1::handle@519 (line 268)
  0x00000214a641de10: 4c59 9bff 

  0x00000214a641de14: ;   {post_call_nop}
  0x00000214a641de14: 0f1f 8400 | 0000 0000 | 4c8b 5424 | 304c 8954 | 2420 c5fb | 104c 2438 | c5fb 105c | 2440 c5fb 
  0x00000214a641de34: 1054 2448 | c5fb 1064 | 2450 448b | 4c24 58c5 | fb10 6c24 | 60e9 05d0 | ffff ba4d | ffff ffc5 
  0x00000214a641de54: fb10 4424 | 28c5 fb11 | 4424 20c5 | fb10 4424 | 38c5 fb11 | 4424 28c5 | fb10 4424 | 40c5 fb11 
  0x00000214a641de74: 4424 30c5 | fb10 4424 | 50c5 fb11 | 4424 38c5 | fb10 4424 | 48c5 fb11 | 4424 40c5 | fb10 4424 
  0x00000214a641de94: 58c5 fb11 | 4424 48c5 | fb10 4424 | 78c5 fb11 | 4424 584c | 8b54 2468 | 4c89 5424 | 6044 8b54 
  0x00000214a641deb4: 2474 4489 | 5424 5444 | 8b5c 2470 | 4489 5c24 | 6844 8944 

  0x00000214a641dec8: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641dec8: 246c 90e8 

  0x00000214a641decc: ; ImmutableOopMap {rbp=Oop [96]=Oop [108]=NarrowOop [136]=Oop [152]=Oop [168]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) javafx.beans.property.DoublePropertyBase::isBound@4 (line 157)
                      ; - javafx.beans.property.DoublePropertyBase::set@1 (line 142)
                      ; - javafx.scene.Node::setLayoutY@5 (line 2879)
                      ; - Alastor$1::handle@763 (line 290)
  0x00000214a641decc: 9061 9bff 

  0x00000214a641ded0: ;   {post_call_nop}
  0x00000214a641ded0: 0f1f 8400 | 0000 0000 | bade ffff | ff4c 8944 

  0x00000214a641dee0: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641dee0: 2430 90e8 

  0x00000214a641dee4: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [40]=Oop [48]=Oop }
                      ;*invokeinterface remove {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@146 (line 236)
  0x00000214a641dee4: 7861 9bff 

  0x00000214a641dee8: ;   {post_call_nop}
  0x00000214a641dee8: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641def4: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641def4: ff66 90e8 

  0x00000214a641def8: ; ImmutableOopMap {}
                      ;*invokevirtual nextDouble {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1525 (line 341)
  0x00000214a641def8: 6461 9bff 

  0x00000214a641defc: ;   {post_call_nop}
  0x00000214a641defc: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641df08: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641df08: ff66 90e8 

  0x00000214a641df0c: ; ImmutableOopMap {}
                      ;*invokevirtual nextDouble {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1571 (line 342)
  0x00000214a641df0c: 5061 9bff 

  0x00000214a641df10: ;   {post_call_nop}
  0x00000214a641df10: 0f1f 8400 | 0000 0000 | bae4 ffff | ffc5 fb10 | 4424 60c5 | fb11 4424 | 48c5 fb11 

  0x00000214a641df2c: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641df2c: 5424 68e8 

  0x00000214a641df30: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [116]=NarrowOop }
                      ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1538 (line 341)
  0x00000214a641df30: 2c61 9bff 

  0x00000214a641df34: ;   {post_call_nop}
  0x00000214a641df34: 0f1f 8400 | 0000 0000 | bae4 ffff | ffc5 fb10 | 4424 60c5 | fb11 4424 | 48c5 fb11 

  0x00000214a641df50: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641df50: 5424 68e8 

  0x00000214a641df54: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [116]=NarrowOop }
                      ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1584 (line 342)
  0x00000214a641df54: 0861 9bff 

  0x00000214a641df58: ;   {post_call_nop}
  0x00000214a641df58: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641df64: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641df64: ff66 90e8 

  0x00000214a641df68: ; ImmutableOopMap {}
                      ;*invokevirtual coder {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.StringConcatHelper$Concat1::concat0@14 (line 71)
                      ; - java.lang.StringConcatHelper$Concat1::concat@5 (line 133)
                      ; - java.lang.invoke.DirectMethodHandle$Holder::invokeSpecial@13
                      ; - java.lang.invoke.LambdaForm$MH/0x00000214b6218400::invoke@23
                      ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                      ; - Alastor$1::handle@2040 (line 378)
  0x00000214a641df68: f460 9bff 

  0x00000214a641df6c: ;   {post_call_nop}
  0x00000214a641df6c: 0f1f 8400 | 0000 0000 | baf6 ffff | ff49 8bea 

  0x00000214a641df7c: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641df7c: 6666 90e8 

  0x00000214a641df80: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual println {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2045 (line 378)
  0x00000214a641df80: dc60 9bff 

  0x00000214a641df84: ;   {post_call_nop}
  0x00000214a641df84: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641df90: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641df90: ff66 90e8 

  0x00000214a641df94: ; ImmutableOopMap {}
                      ;*invokevirtual println {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@101 (line 235)
  0x00000214a641df94: c860 9bff 

  0x00000214a641df98: ;   {post_call_nop}
  0x00000214a641df98: 0f1f 8400 | 0000 0000 | bae4 ffff | ffc5 fb11 | 4c24 30c5 | fb11 5424 | 38c5 fb11 | 6424 40c5 
  0x00000214a641dfb8: fb11 5c24 

  0x00000214a641dfbc: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641dfbc: 4866 90e8 

  0x00000214a641dfc0: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop }
                      ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2025 (line 377)
  0x00000214a641dfc0: 9c60 9bff 

  0x00000214a641dfc4: ;   {post_call_nop}
  0x00000214a641dfc4: 0f1f 8400 | 0000 0000 | bade ffff 

  0x00000214a641dfd0: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641dfd0: ff66 90e8 

  0x00000214a641dfd4: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop }
                      ;*invokeinterface iterator {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@108 (line 236)
  0x00000214a641dfd4: 8860 9bff 

  0x00000214a641dfd8: ;   {post_call_nop}
  0x00000214a641dfd8: 0f1f 8400 | 0000 0000 | bade ffff 

  0x00000214a641dfe4: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641dfe4: ff66 90e8 

  0x00000214a641dfe8: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop }
                      ;*invokeinterface clear {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@159 (line 237)
  0x00000214a641dfe8: 7460 9bff 

  0x00000214a641dfec: ;   {post_call_nop}
  0x00000214a641dfec: 0f1f 8400 | 0000 0000 | bade ffff 

  0x00000214a641dff8: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641dff8: ff66 90e8 

  0x00000214a641dffc: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop }
                      ;*invokeinterface clear {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@168 (line 238)
  0x00000214a641dffc: 6060 9bff 

  0x00000214a641e000: ;   {post_call_nop}
  0x00000214a641e000: 0f1f 8400 | 0000 0000 | bade ffff 

  0x00000214a641e00c: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641e00c: ff66 90e8 

  0x00000214a641e010: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop }
                      ;*invokeinterface clear {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@177 (line 239)
  0x00000214a641e010: 4c60 9bff 

  0x00000214a641e014: ;   {post_call_nop}
  0x00000214a641e014: 0f1f 8400 | 0000 0000 | bade ffff 

  0x00000214a641e020: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641e020: ff66 90e8 

  0x00000214a641e024: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop }
                      ;*invokeinterface clear {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@186 (line 240)
  0x00000214a641e024: 3860 9bff 

  0x00000214a641e028: ;   {post_call_nop}
  0x00000214a641e028: 0f1f 8400 | 0000 0000 | bade ffff 

  0x00000214a641e034: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641e034: ff66 90e8 

  0x00000214a641e038: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop }
                      ;*invokeinterface clear {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@195 (line 241)
  0x00000214a641e038: 2460 9bff 

  0x00000214a641e03c: ;   {post_call_nop}
  0x00000214a641e03c: 0f1f 8400 | 0000 0000 | bade ffff 

  0x00000214a641e048: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641e048: ff66 90e8 

  0x00000214a641e04c: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop }
                      ;*invokeinterface clear {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@204 (line 242)
  0x00000214a641e04c: 1060 9bff 

  0x00000214a641e050: ;   {post_call_nop}
  0x00000214a641e050: 0f1f 8400 | 0000 0000 | ba4d ffff | ff89 4424 | 5844 8954 

  0x00000214a641e064: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641e064: 2460 90e8 

  0x00000214a641e068: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [80]=Oop }
                      ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.lang.StringConcatHelper::newArray@1 (line 572)
                      ; - java.lang.StringConcatHelper$Concat1::concat0@23 (line 72)
                      ; - java.lang.StringConcatHelper$Concat1::concat@5 (line 133)
                      ; - java.lang.invoke.DirectMethodHandle$Holder::invokeSpecial@13
                      ; - java.lang.invoke.LambdaForm$MH/0x00000214b6218400::invoke@23
                      ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                      ; - Alastor$1::handle@2040 (line 378)
  0x00000214a641e068: f45f 9bff 

  0x00000214a641e06c: ;   {post_call_nop}
  0x00000214a641e06c: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641e078: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641e078: ff66 90e8 

  0x00000214a641e07c: ; ImmutableOopMap {}
                      ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@352 (line 256)
  0x00000214a641e07c: e05f 9bff 

  0x00000214a641e080: ;   {post_call_nop}
  0x00000214a641e080: 0f1f 8400 | 0000 0000 | bae4 ffff 

  0x00000214a641e08c: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641e08c: ff66 90e8 

  0x00000214a641e090: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop }
                      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1170 (line 317)
  0x00000214a641e090: cc5f 9bff 

  0x00000214a641e094: ;   {post_call_nop}
  0x00000214a641e094: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641e0a0: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641e0a0: ff66 90e8 

  0x00000214a641e0a4: ; ImmutableOopMap {}
                      ;*invokevirtual nextBoolean {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1180 (line 317)
  0x00000214a641e0a4: b85f 9bff 

  0x00000214a641e0a8: ;   {post_call_nop}
  0x00000214a641e0a8: 0f1f 8400 | 0000 0000 | bade ffff | ffc5 fb10 | 4424 28c5 | fb11 4424 | 20c5 fb10 | 4424 30c5 
  0x00000214a641e0c8: fb11 4424 | 28c5 fb10 | 4424 38c5 | fb11 4424 | 30c5 fb10 | 4424 40c5 | fb11 4424 | 38c5 fb10 
  0x00000214a641e0e8: 4424 48c5 | fb11 4424 | 404c 8b54 | 2450 4c89 | 5424 4848 | 8944 2458 

  0x00000214a641e100: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641e100: 6666 90e8 

  0x00000214a641e104: ; ImmutableOopMap {rbp=Oop [72]=Oop [88]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2085 (line 383)
  0x00000214a641e104: 585f 9bff 

  0x00000214a641e108: ;   {post_call_nop}
  0x00000214a641e108: 0f1f 8400 | 0000 0000 | bade ffff | ff48 8b6c | 2420 c5fb | 1044 2428 | c5fb 1144 | 2420 c5fb 
  0x00000214a641e128: 1044 2430 | c5fb 1144 | 2428 c5fb | 1044 2438 | c5fb 1144 | 2430 c5fb | 1044 2440 | c5fb 1144 
  0x00000214a641e148: 2438 c5fb | 1044 2448 | c5fb 1144 | 2440 4c8b | 5424 504c | 8954 2448 | 448b 5424 | 7844 8954 
  0x00000214a641e168: 2450 4c8b | 5424 604c | 8954 2458 | 4c8b 5424 | 684c 8954 | 2460 4889 

  0x00000214a641e180: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641e180: 4424 68e8 

  0x00000214a641e184: ; ImmutableOopMap {rbp=Oop [72]=Oop [88]=Oop [96]=Oop [104]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2107 (line 384)
  0x00000214a641e184: d85e 9bff 

  0x00000214a641e188: ;   {post_call_nop}
  0x00000214a641e188: 0f1f 8400 | 0000 0000 | bade ffff | ffc5 fb10 | 4424 28c5 | fb11 4424 | 20c5 fb10 | 4424 30c5 
  0x00000214a641e1a8: fb11 4424 | 28c5 fb10 | 4424 38c5 | fb11 4424 | 30c5 fb10 | 4424 40c5 | fb11 4424 | 38c5 fb10 
  0x00000214a641e1c8: 4424 48c5 | fb11 4424 | 404c 8b54 | 2450 4c89 | 5424 484c | 8b54 2460 | 4c89 5424 | 584c 8b54 
  0x00000214a641e1e8: 2468 4c89 | 5424 6048 | 8944 2468 

  0x00000214a641e1f4: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641e1f4: 6666 90e8 

  0x00000214a641e1f8: ; ImmutableOopMap {rbp=Oop [72]=Oop [88]=Oop [96]=Oop [104]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2238 (line 399)
  0x00000214a641e1f8: 645e 9bff 

  0x00000214a641e1fc: ;   {post_call_nop}
  0x00000214a641e1fc: 0f1f 8400 | 0000 0000 | bade ffff | ff48 8b6c | 2420 c5fb | 1044 2428 | c5fb 1144 | 2420 c5fb 
  0x00000214a641e21c: 1044 2430 | c5fb 1144 | 2428 c5fb | 1044 2438 | c5fb 1144 | 2430 c5fb | 1044 2440 | c5fb 1144 
  0x00000214a641e23c: 2438 c5fb | 1044 2448 | c5fb 1144 | 2440 4c8b | 5424 504c | 8954 2448 | 4c8b 5424 | 604c 8954 
  0x00000214a641e25c: 2458 4c8b | 5424 684c | 8954 2460 | 4889 4424 

  0x00000214a641e26c: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641e26c: 6866 90e8 

  0x00000214a641e270: ; ImmutableOopMap {rbp=Oop [72]=Oop [88]=Oop [96]=Oop [104]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2260 (line 399)
  0x00000214a641e270: ec5d 9bff 

  0x00000214a641e274: ;   {post_call_nop}
  0x00000214a641e274: 0f1f 8400 | 0000 0000 | bade ffff | ffc5 fb10 | 4424 28c5 | fb11 4424 | 20c5 fb10 | 4424 30c5 
  0x00000214a641e294: fb11 4424 | 28c5 fb10 | 4424 38c5 | fb11 4424 | 30c5 fb10 | 4424 40c5 | fb11 4424 | 38c5 fb10 
  0x00000214a641e2b4: 4424 48c5 | fb11 4424 | 404c 8b54 | 2450 4c89 | 5424 484c | 8b54 2460 | 4c89 5424 | 584c 8b54 
  0x00000214a641e2d4: 2468 4c89 | 5424 6048 | 8944 2468 

  0x00000214a641e2e0: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641e2e0: 6666 90e8 

  0x00000214a641e2e4: ; ImmutableOopMap {rbp=Oop [72]=Oop [88]=Oop [96]=Oop [104]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2303 (line 402)
  0x00000214a641e2e4: 785d 9bff 

  0x00000214a641e2e8: ;   {post_call_nop}
  0x00000214a641e2e8: 0f1f 8400 | 0000 0000 | bade ffff | ffc5 fb10 | 4424 28c5 | fb11 4424 | 20c5 fb10 | 4424 30c5 
  0x00000214a641e308: fb11 4424 | 28c5 fb10 | 4424 38c5 | fb11 4424 | 30c5 fb10 | 4424 40c5 | fb11 4424 | 38c5 fb10 
  0x00000214a641e328: 4424 48c5 | fb11 4424 | 404c 8b54 | 2450 4c89 | 5424 484c | 8b54 2460 | 4c89 5424 | 584c 8b54 
  0x00000214a641e348: 2468 4c89 | 5424 60c5 | fb10 4424 | 70c5 fb11 | 4424 6848 | 8944 2470 

  0x00000214a641e360: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641e360: 6666 90e8 

  0x00000214a641e364: ; ImmutableOopMap {rbp=Oop [72]=Oop [88]=Oop [96]=Oop [112]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2320 (line 402)
  0x00000214a641e364: f85c 9bff 

  0x00000214a641e368: ;   {post_call_nop}
  0x00000214a641e368: 0f1f 8400 | 0000 0000 | bade ffff | ffc5 fb10 | 4424 28c5 | fb11 4424 | 20c5 fb10 | 4424 30c5 
  0x00000214a641e388: fb11 4424 | 28c5 fb10 | 4424 38c5 | fb11 4424 | 30c5 fb10 | 4424 40c5 | fb11 4424 | 38c5 fb10 
  0x00000214a641e3a8: 4424 48c5 | fb11 4424 | 404c 8b54 | 2450 4c89 | 5424 4844 | 8b54 2478 | 4489 5424 | 504c 8b54 
  0x00000214a641e3c8: 2460 4c89 | 5424 584c | 8b54 2468 | 4c89 5424 | 60c5 fb10 | 4424 70c5 | fb11 4424 | 6848 8944 
  0x00000214a641e3e8: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641e3e8: 2478 90e8 

  0x00000214a641e3ec: ; ImmutableOopMap {rbp=Oop [72]=Oop [88]=Oop [96]=Oop [120]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2337 (line 402)
  0x00000214a641e3ec: 705c 9bff 

  0x00000214a641e3f0: ;   {post_call_nop}
  0x00000214a641e3f0: 0f1f 8400 | 0000 0000 | bade ffff | ff4c 8b5c | 2428 4c89 | 5c24 2048 | 8944 2428 

  0x00000214a641e40c: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641e40c: 6666 90e8 

  0x00000214a641e410: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@132 (line 236)
  0x00000214a641e410: 4c5c 9bff 

  0x00000214a641e414: ;   {post_call_nop}
  0x00000214a641e414: 0f1f 8400 | 0000 0000 | bade ffff | ffc5 fb10 | 4424 28c5 | fb11 4424 | 20c5 fb10 | 4424 30c5 
  0x00000214a641e434: fb11 4424 | 28c5 fb10 | 4424 38c5 | fb11 4424 | 30c5 fb10 | 4424 40c5 | fb11 4424 | 38c5 fb10 
  0x00000214a641e454: 4424 48c5 | fb11 4424 | 404c 8b54 | 2450 4c89 | 5424 4844 | 8b54 2478 | 4489 5424 | 504c 8b54 
  0x00000214a641e474: 2460 4c89 | 5424 584c | 8b54 2468 | 4c89 5424 | 60c5 fb10 | 4424 70c5 | fb11 4424 | 6848 8944 
  0x00000214a641e494: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641e494: 2478 90e8 

  0x00000214a641e498: ; ImmutableOopMap {rbp=Oop [72]=Oop [88]=Oop [96]=Oop [120]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2355 (line 402)
  0x00000214a641e498: c45b 9bff 

  0x00000214a641e49c: ;   {post_call_nop}
  0x00000214a641e49c: 0f1f 8400 | 0000 0000 | bade ffff | ffc5 fb10 | 4424 28c5 | fb11 4424 | 20c5 fb10 | 4424 30c5 
  0x00000214a641e4bc: fb11 4424 | 28c5 fb10 | 4424 38c5 | fb11 4424 | 30c5 fb10 | 4424 40c5 | fb11 4424 | 38c5 fb10 
  0x00000214a641e4dc: 4424 48c5 | fb11 4424 | 404c 8b54 | 2450 4c89 | 5424 4844 | 8b54 2478 | 4489 5424 | 504c 8b54 
  0x00000214a641e4fc: 2460 4c89 | 5424 584c | 8b54 2468 | 4c89 5424 | 60c5 fb10 | 4424 70c5 | fb11 4424 | 6848 8944 
  0x00000214a641e51c: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641e51c: 2478 90e8 

  0x00000214a641e520: ; ImmutableOopMap {rbp=Oop [72]=Oop [88]=Oop [96]=Oop [120]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2376 (line 402)
  0x00000214a641e520: 3c5b 9bff 

  0x00000214a641e524: ;   {post_call_nop}
  0x00000214a641e524: 0f1f 8400 | 0000 0000 | baf6 ffff | ff41 8beb 

  0x00000214a641e534: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641e534: 6666 90e8 

  0x00000214a641e538: ; ImmutableOopMap {}
                      ;*invokeinterface get {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2080 (line 383)
  0x00000214a641e538: 245b 9bff 

  0x00000214a641e53c: ;   {post_call_nop}
  0x00000214a641e53c: 0f1f 8400 | 0000 0000 | baf4 ffff | ffc5 fb10 | 4424 28c5 | fb11 4424 | 20c5 fb10 | 4424 30c5 
  0x00000214a641e55c: fb11 4424 | 28c5 fb10 | 4424 38c5 | fb11 4424 | 30c5 fb10 | 4424 40c5 | fb11 4424 | 38c5 fb10 
  0x00000214a641e57c: 4424 48c5 | fb11 4424 | 404c 8b54 | 2450 4c89 

  0x00000214a641e58c: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641e58c: 5424 48e8 

  0x00000214a641e590: ; ImmutableOopMap {rbp=Oop [72]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2085 (line 383)
  0x00000214a641e590: cc5a 9bff 

  0x00000214a641e594: ;   {post_call_nop}
  0x00000214a641e594: 0f1f 8400 | 0000 0000 | baf6 ffff | ff8b 6c24 

  0x00000214a641e5a4: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641e5a4: 7866 90e8 

  0x00000214a641e5a8: ; ImmutableOopMap {}
                      ;*invokeinterface get {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2102 (line 384)
  0x00000214a641e5a8: b45a 9bff 

  0x00000214a641e5ac: ;   {post_call_nop}
  0x00000214a641e5ac: 0f1f 8400 | 0000 0000 | baf4 ffff | ff48 8b6c | 2420 c5fb | 1044 2428 | c5fb 1144 | 2420 c5fb 
  0x00000214a641e5cc: 1044 2430 | c5fb 1144 | 2428 c5fb | 1044 2438 | c5fb 1144 | 2430 c5fb | 1044 2440 | c5fb 1144 
  0x00000214a641e5ec: 2438 c5fb | 1044 2448 | c5fb 1144 | 2440 4c8b | 5424 504c | 8954 2448 | 448b 5c24 | 784c 8b54 
  0x00000214a641e60c: 2460 4c89 | 5424 5844 | 895c 2454 

  0x00000214a641e618: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641e618: 6666 90e8 

  0x00000214a641e61c: ; ImmutableOopMap {rbp=Oop [72]=Oop [88]=Oop [104]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2107 (line 384)
  0x00000214a641e61c: 405a 9bff 

  0x00000214a641e620: ;   {post_call_nop}
  0x00000214a641e620: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641e62c: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641e62c: ff66 90e8 

  0x00000214a641e630: ; ImmutableOopMap {}
                      ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2141 (line 389)
  0x00000214a641e630: 2c5a 9bff 

  0x00000214a641e634: ;   {post_call_nop}
  0x00000214a641e634: 0f1f 8400 | 0000 0000 | baf6 ffff | ff8b 6c24 

  0x00000214a641e644: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641e644: 7866 90e8 

  0x00000214a641e648: ; ImmutableOopMap {}
                      ;*invokeinterface get {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2233 (line 399)
  0x00000214a641e648: 145a 9bff 

  0x00000214a641e64c: ;   {post_call_nop}
  0x00000214a641e64c: 0f1f 8400 | 0000 0000 | baf4 ffff | ffc5 fb10 | 4424 28c5 | fb11 4424 | 20c5 fb10 | 4424 30c5 
  0x00000214a641e66c: fb11 4424 | 28c5 fb10 | 4424 38c5 | fb11 4424 | 30c5 fb10 | 4424 40c5 | fb11 4424 | 38c5 fb10 
  0x00000214a641e68c: 4424 48c5 | fb11 4424 | 404c 8b54 | 2450 4c89 | 5424 484c | 8b54 2460 | 4c89 5424 

  0x00000214a641e6a8: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641e6a8: 5866 90e8 

  0x00000214a641e6ac: ; ImmutableOopMap {rbp=Oop [72]=Oop [88]=Oop [104]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2238 (line 399)
  0x00000214a641e6ac: b059 9bff 

  0x00000214a641e6b0: ;   {post_call_nop}
  0x00000214a641e6b0: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641e6bc: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641e6bc: ff66 90e8 

  0x00000214a641e6c0: ; ImmutableOopMap {}
                      ;*invokeinterface size {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2066 (line 382)
  0x00000214a641e6c0: 9c59 9bff 

  0x00000214a641e6c4: ;   {post_call_nop}
  0x00000214a641e6c4: 0f1f 8400 | 0000 0000 | baf6 ffff | ff8b 6c24 

  0x00000214a641e6d4: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641e6d4: 7866 90e8 

  0x00000214a641e6d8: ; ImmutableOopMap {}
                      ;*invokeinterface get {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2298 (line 402)
  0x00000214a641e6d8: 8459 9bff 

  0x00000214a641e6dc: ;   {post_call_nop}
  0x00000214a641e6dc: 0f1f 8400 | 0000 0000 | baf4 ffff | ffc5 fb10 | 4424 28c5 | fb11 4424 | 20c5 fb10 | 4424 30c5 
  0x00000214a641e6fc: fb11 4424 | 28c5 fb10 | 4424 38c5 | fb11 4424 | 30c5 fb10 | 4424 40c5 | fb11 4424 | 38c5 fb10 
  0x00000214a641e71c: 4424 48c5 | fb11 4424 | 404c 8b54 | 2450 4c89 | 5424 484c | 8b54 2460 | 4c89 5424 

  0x00000214a641e738: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641e738: 5866 90e8 

  0x00000214a641e73c: ; ImmutableOopMap {rbp=Oop [72]=Oop [88]=Oop [104]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2303 (line 402)
  0x00000214a641e73c: 2059 9bff 

  0x00000214a641e740: ;   {post_call_nop}
  0x00000214a641e740: 0f1f 8400 | 0000 0000 | baf6 ffff | ff8b 6c24 

  0x00000214a641e750: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641e750: 7866 90e8 

  0x00000214a641e754: ; ImmutableOopMap {}
                      ;*invokeinterface get {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2315 (line 402)
  0x00000214a641e754: 0859 9bff 

  0x00000214a641e758: ;   {post_call_nop}
  0x00000214a641e758: 0f1f 8400 | 0000 0000 | baf4 ffff | ffc5 fb10 | 4424 28c5 | fb11 4424 | 20c5 fb10 | 4424 30c5 
  0x00000214a641e778: fb11 4424 | 28c5 fb10 | 4424 38c5 | fb11 4424 | 30c5 fb10 | 4424 40c5 | fb11 4424 | 38c5 fb10 
  0x00000214a641e798: 4424 48c5 | fb11 4424 | 404c 8b54 | 2450 4c89 | 5424 484c | 8b54 2460 | 4c89 5424 | 584c 8b54 
  0x00000214a641e7b8: 2468 4c89 

  0x00000214a641e7bc: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641e7bc: 5424 60e8 

  0x00000214a641e7c0: ; ImmutableOopMap {rbp=Oop [72]=Oop [88]=Oop [96]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2320 (line 402)
  0x00000214a641e7c0: 9c58 9bff 

  0x00000214a641e7c4: ;   {post_call_nop}
  0x00000214a641e7c4: 0f1f 8400 | 0000 0000 | baf6 ffff | ff8b 6c24 

  0x00000214a641e7d4: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641e7d4: 7866 90e8 

  0x00000214a641e7d8: ; ImmutableOopMap {}
                      ;*invokeinterface get {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2332 (line 402)
  0x00000214a641e7d8: 8458 9bff 

  0x00000214a641e7dc: ;   {post_call_nop}
  0x00000214a641e7dc: 0f1f 8400 | 0000 0000 | baf4 ffff | ffc5 fb10 | 4424 28c5 | fb11 4424 | 20c5 fb10 | 4424 30c5 
  0x00000214a641e7fc: fb11 4424 | 28c5 fb10 | 4424 38c5 | fb11 4424 | 30c5 fb10 | 4424 40c5 | fb11 4424 | 38c5 fb10 
  0x00000214a641e81c: 4424 48c5 | fb11 4424 | 404c 8b54 | 2450 4c89 | 5424 484c | 8b54 2460 | 4c89 5424 | 584c 8b54 
  0x00000214a641e83c: 2468 4c89 | 5424 60c5 | fb10 4424 | 70c5 fb11 

  0x00000214a641e84c: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641e84c: 4424 68e8 

  0x00000214a641e850: ; ImmutableOopMap {rbp=Oop [72]=Oop [88]=Oop [96]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2337 (line 402)
  0x00000214a641e850: 0c58 9bff 

  0x00000214a641e854: ;   {post_call_nop}
  0x00000214a641e854: 0f1f 8400 | 0000 0000 | baf6 ffff | ff8b 6c24 

  0x00000214a641e864: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641e864: 7866 90e8 

  0x00000214a641e868: ; ImmutableOopMap {}
                      ;*invokeinterface get {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2350 (line 402)
  0x00000214a641e868: f457 9bff 

  0x00000214a641e86c: ;   {post_call_nop}
  0x00000214a641e86c: 0f1f 8400 | 0000 0000 | baf4 ffff | ffc5 fb10 | 4424 28c5 | fb11 4424 | 20c5 fb10 | 4424 30c5 
  0x00000214a641e88c: fb11 4424 | 28c5 fb10 | 4424 38c5 | fb11 4424 | 30c5 fb10 | 4424 40c5 | fb11 4424 | 38c5 fb10 
  0x00000214a641e8ac: 4424 48c5 | fb11 4424 | 404c 8b54 | 2450 4c89 | 5424 484c | 8b54 2460 | 4c89 5424 | 584c 8b54 
  0x00000214a641e8cc: 2468 4c89 | 5424 60c5 | fb10 4424 | 70c5 fb11 

  0x00000214a641e8dc: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641e8dc: 4424 68e8 

  0x00000214a641e8e0: ; ImmutableOopMap {rbp=Oop [72]=Oop [88]=Oop [96]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2355 (line 402)
  0x00000214a641e8e0: 7c57 9bff 

  0x00000214a641e8e4: ;   {post_call_nop}
  0x00000214a641e8e4: 0f1f 8400 | 0000 0000 | baf6 ffff | ff8b 6c24 

  0x00000214a641e8f4: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641e8f4: 7866 90e8 

  0x00000214a641e8f8: ; ImmutableOopMap {}
                      ;*invokeinterface get {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2371 (line 402)
  0x00000214a641e8f8: 6457 9bff 

  0x00000214a641e8fc: ;   {post_call_nop}
  0x00000214a641e8fc: 0f1f 8400 | 0000 0000 | baf4 ffff | ffc5 fb10 | 4424 28c5 | fb11 4424 | 20c5 fb10 | 4424 30c5 
  0x00000214a641e91c: fb11 4424 | 28c5 fb10 | 4424 38c5 | fb11 4424 | 30c5 fb10 | 4424 40c5 | fb11 4424 | 38c5 fb10 
  0x00000214a641e93c: 4424 48c5 | fb11 4424 | 404c 8b54 | 2450 4c89 | 5424 484c | 8b54 2460 | 4c89 5424 | 584c 8b54 
  0x00000214a641e95c: 2468 4c89 | 5424 60c5 | fb10 4424 | 70c5 fb11 

  0x00000214a641e96c: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641e96c: 4424 68e8 

  0x00000214a641e970: ; ImmutableOopMap {rbp=Oop [72]=Oop [88]=Oop [96]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2376 (line 402)
  0x00000214a641e970: ec56 9bff 

  0x00000214a641e974: ;   {post_call_nop}
  0x00000214a641e974: 0f1f 8400 | 0000 0000 | baf6 ffff | ff8b 6c24 

  0x00000214a641e984: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641e984: 7866 90e8 

  0x00000214a641e988: ; ImmutableOopMap {}
                      ;*invokeinterface get {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2255 (line 399)
  0x00000214a641e988: d456 9bff 

  0x00000214a641e98c: ;   {post_call_nop}
  0x00000214a641e98c: 0f1f 8400 | 0000 0000 | baf4 ffff | ff48 8b6c | 2420 c5fb | 1044 2428 | c5fb 1144 | 2420 c5fb 
  0x00000214a641e9ac: 1044 2430 | c5fb 1144 | 2428 c5fb | 1044 2438 | c5fb 1144 | 2430 c5fb | 1044 2440 | c5fb 1144 
  0x00000214a641e9cc: 2438 c5fb | 1044 2448 | c5fb 1144 | 2440 4c8b | 5424 504c | 8954 2448 | 4c8b 5424 | 604c 8954 
  0x00000214a641e9ec: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641e9ec: 2458 90e8 

  0x00000214a641e9f0: ; ImmutableOopMap {rbp=Oop [72]=Oop [88]=Oop [104]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2260 (line 399)
  0x00000214a641e9f0: 6c56 9bff 

  0x00000214a641e9f4: ;   {post_call_nop}
  0x00000214a641e9f4: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641ea00: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ea00: ff66 90e8 

  0x00000214a641ea04: ; ImmutableOopMap {}
                      ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2281 (line 400)
  0x00000214a641ea04: 5856 9bff 

  0x00000214a641ea08: ;   {post_call_nop}
  0x00000214a641ea08: 0f1f 8400 | 0000 0000 | baf4 ffff | ffc5 fb10 | 4424 28c5 | fb11 4424 

  0x00000214a641ea20: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ea20: 2066 90e8 

  0x00000214a641ea24: ; ImmutableOopMap {rbp=Oop [56]=NarrowOop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.scene.Node::getBoundsInLocal@7 (line 3498)
                      ; - Alastor$1::handle@49 (line 228)
  0x00000214a641ea24: 3856 9bff 

  0x00000214a641ea28: ;   {post_call_nop}
  0x00000214a641ea28: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641ea34: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ea34: ff66 90e8 

  0x00000214a641ea38: ; ImmutableOopMap {}
                      ;*invokevirtual getMinX {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@59 (line 229)
  0x00000214a641ea38: 2456 9bff 

  0x00000214a641ea3c: ;   {post_call_nop}
  0x00000214a641ea3c: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641ea48: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ea48: ff66 90e8 

  0x00000214a641ea4c: ; ImmutableOopMap {}
                      ;*invokeinterface contains {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@221 (line 248)
  0x00000214a641ea4c: 1056 9bff 

  0x00000214a641ea50: ;   {post_call_nop}
  0x00000214a641ea50: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641ea5c: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ea5c: ff66 90e8 

  0x00000214a641ea60: ; ImmutableOopMap {}
                      ;*invokevirtual containsKey {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.HashSet::contains@5 (line 214)
                      ; - Alastor$1::handle@221 (line 248)
  0x00000214a641ea60: fc55 9bff 

  0x00000214a641ea64: ;   {post_call_nop}
  0x00000214a641ea64: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641ea70: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ea70: ff66 90e8 

  0x00000214a641ea74: ; ImmutableOopMap {}
                      ;*invokeinterface contains {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@255 (line 249)
  0x00000214a641ea74: e855 9bff 

  0x00000214a641ea78: ;   {post_call_nop}
  0x00000214a641ea78: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641ea84: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ea84: ff66 90e8 

  0x00000214a641ea88: ; ImmutableOopMap {}
                      ;*invokevirtual containsKey {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.HashSet::contains@5 (line 214)
                      ; - Alastor$1::handle@255 (line 249)
  0x00000214a641ea88: d455 9bff 

  0x00000214a641ea8c: ;   {post_call_nop}
  0x00000214a641ea8c: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641ea98: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ea98: ff66 90e8 

  0x00000214a641ea9c: ; ImmutableOopMap {}
                      ;*invokeinterface contains {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@289 (line 250)
  0x00000214a641ea9c: c055 9bff 

  0x00000214a641eaa0: ;   {post_call_nop}
  0x00000214a641eaa0: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641eaac: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641eaac: ff66 90e8 

  0x00000214a641eab0: ; ImmutableOopMap {}
                      ;*invokevirtual containsKey {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.HashSet::contains@5 (line 214)
                      ; - Alastor$1::handle@289 (line 250)
  0x00000214a641eab0: ac55 9bff 

  0x00000214a641eab4: ;   {post_call_nop}
  0x00000214a641eab4: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641eac0: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641eac0: ff66 90e8 

  0x00000214a641eac4: ; ImmutableOopMap {}
                      ;*invokevirtual getLayoutY {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@344 (line 256)
  0x00000214a641eac4: 9855 9bff 

  0x00000214a641eac8: ;   {post_call_nop}
  0x00000214a641eac8: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641ead4: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ead4: ff66 90e8 

  0x00000214a641ead8: ; ImmutableOopMap {}
                      ;*invokevirtual getBoundsInParent {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@361 (line 258)
  0x00000214a641ead8: 8455 9bff 

  0x00000214a641eadc: ;   {post_call_nop}
  0x00000214a641eadc: 0f1f 8400 | 0000 0000 | ba5e ffff 

  0x00000214a641eae8: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641eae8: ff66 90e8 

  0x00000214a641eaec: ; ImmutableOopMap {}
                      ;*invokevirtual getMinX {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@368 (line 260)
  0x00000214a641eaec: 7055 9bff 

  0x00000214a641eaf0: ;   {post_call_nop}
  0x00000214a641eaf0: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641eafc: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641eafc: ff66 90e8 

  0x00000214a641eb00: ; ImmutableOopMap {}
                      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@542 (line 274)
  0x00000214a641eb00: 5c55 9bff 

  0x00000214a641eb04: ;   {post_call_nop}
  0x00000214a641eb04: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641eb10: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641eb10: ff66 90e8 

  0x00000214a641eb14: ; ImmutableOopMap {}
                      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@552 (line 275)
  0x00000214a641eb14: 4855 9bff 

  0x00000214a641eb18: ;   {post_call_nop}
  0x00000214a641eb18: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641eb24: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641eb24: ff66 90e8 

  0x00000214a641eb28: ; ImmutableOopMap {}
                      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2011 (line 376)
  0x00000214a641eb28: 3455 9bff 

  0x00000214a641eb2c: ;   {post_call_nop}
  0x00000214a641eb2c: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641eb38: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641eb38: ff66 90e8 

  0x00000214a641eb3c: ; ImmutableOopMap {}
                      ;*invokeinterface size {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2066 (line 382)
  0x00000214a641eb3c: 2055 9bff 

  0x00000214a641eb40: ;   {post_call_nop}
  0x00000214a641eb40: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641eb4c: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641eb4c: ff66 90e8 

  0x00000214a641eb50: ; ImmutableOopMap {}
                      ;*invokeinterface hasNext {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2624 (line 431)
  0x00000214a641eb50: 0c55 9bff 

  0x00000214a641eb54: ;   {post_call_nop}
  0x00000214a641eb54: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641eb60: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641eb60: ff66 90e8 

  0x00000214a641eb64: ; ImmutableOopMap {}
                      ;*invokevirtual getLayoutX {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@237 (line 248)
  0x00000214a641eb64: f854 9bff 

  0x00000214a641eb68: ;   {post_call_nop}
  0x00000214a641eb68: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641eb74: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641eb74: ff66 90e8 

  0x00000214a641eb78: ; ImmutableOopMap {}
                      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@302 (line 250)
  0x00000214a641eb78: e454 9bff 

  0x00000214a641eb7c: ;   {post_call_nop}
  0x00000214a641eb7c: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641eb88: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641eb88: ff66 90e8 

  0x00000214a641eb8c: ; ImmutableOopMap {}
                      ;*invokevirtual getLayoutX {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@271 (line 249)
  0x00000214a641eb8c: d054 9bff 

  0x00000214a641eb90: ;   {post_call_nop}
  0x00000214a641eb90: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641eb9c: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641eb9c: ff66 90e8 

  0x00000214a641eba0: ; ImmutableOopMap {}
                      ;*invokevirtual getLayoutY {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@515 (line 268)
  0x00000214a641eba0: bc54 9bff 

  0x00000214a641eba4: ;   {post_call_nop}
  0x00000214a641eba4: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641ebb0: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ebb0: ff66 90e8 

  0x00000214a641ebb4: ; ImmutableOopMap {}
                      ;*dastore {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@528 (line 269)
  0x00000214a641ebb4: a854 9bff 

  0x00000214a641ebb8: ;   {post_call_nop}
  0x00000214a641ebb8: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641ebc4: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ebc4: ff66 90e8 

  0x00000214a641ebc8: ; ImmutableOopMap {}
                      ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@535 (line 270)
  0x00000214a641ebc8: 9454 9bff 

  0x00000214a641ebcc: ;   {post_call_nop}
  0x00000214a641ebcc: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641ebd8: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ebd8: ff66 90e8 

  0x00000214a641ebdc: ; ImmutableOopMap {rbp=Oop }
                      ;*invokeinterface addAll {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1775 (line 357)
  0x00000214a641ebdc: 8054 9bff 

  0x00000214a641ebe0: ;   {post_call_nop}
  0x00000214a641ebe0: 0f1f 8400 | 0000 0000 | baf6 ffff | ff48 8bac | 2480 0000 

  0x00000214a641ebf4: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ebf4: 0066 90e8 

  0x00000214a641ebf8: ; ImmutableOopMap {rbp=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1849 (line 364)
  0x00000214a641ebf8: 6454 9bff 

  0x00000214a641ebfc: ;   {post_call_nop}
  0x00000214a641ebfc: 0f1f 8400 | 0000 0000 | baf6 ffff | ff48 8bac | 2480 0000 

  0x00000214a641ec10: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ec10: 0066 90e8 

  0x00000214a641ec14: ; ImmutableOopMap {rbp=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1861 (line 365)
  0x00000214a641ec14: 4854 9bff 

  0x00000214a641ec18: ;   {post_call_nop}
  0x00000214a641ec18: 0f1f 8400 | 0000 0000 | baf6 ffff | ff48 8be8 

  0x00000214a641ec28: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ec28: 6666 90e8 

  0x00000214a641ec2c: ; ImmutableOopMap {rbp=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1876 (line 366)
  0x00000214a641ec2c: 3054 9bff 

  0x00000214a641ec30: ;   {post_call_nop}
  0x00000214a641ec30: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641ec3c: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ec3c: ff66 90e8 

  0x00000214a641ec40: ; ImmutableOopMap {}
                      ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1906 (line 367)
  0x00000214a641ec40: 1c54 9bff 

  0x00000214a641ec44: ;   {post_call_nop}
  0x00000214a641ec44: 0f1f 8400 | 0000 0000 | baf6 ffff | ff48 8be8 

  0x00000214a641ec54: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ec54: 6666 90e8 

  0x00000214a641ec58: ; ImmutableOopMap {rbp=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1915 (line 367)
  0x00000214a641ec58: 0454 9bff 

  0x00000214a641ec5c: ;   {post_call_nop}
  0x00000214a641ec5c: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641ec68: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ec68: ff66 90e8 

  0x00000214a641ec6c: ; ImmutableOopMap {}
                      ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1943 (line 368)
  0x00000214a641ec6c: f053 9bff 

  0x00000214a641ec70: ;   {post_call_nop}
  0x00000214a641ec70: 0f1f 8400 | 0000 0000 | baf6 ffff | ff48 8be8 

  0x00000214a641ec80: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ec80: 6666 90e8 

  0x00000214a641ec84: ; ImmutableOopMap {rbp=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1952 (line 368)
  0x00000214a641ec84: d853 9bff 

  0x00000214a641ec88: ;   {post_call_nop}
  0x00000214a641ec88: 0f1f 8400 | 0000 0000 | baf6 ffff | ff48 8be8 

  0x00000214a641ec98: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ec98: 6666 90e8 

  0x00000214a641ec9c: ; ImmutableOopMap {rbp=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1980 (line 369)
  0x00000214a641ec9c: c053 9bff 

  0x00000214a641eca0: ;   {post_call_nop}
  0x00000214a641eca0: 0f1f 8400 | 0000 0000 | baf6 ffff | ff48 8be8 

  0x00000214a641ecb0: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ecb0: 6666 90e8 

  0x00000214a641ecb4: ; ImmutableOopMap {rbp=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1994 (line 370)
  0x00000214a641ecb4: a853 9bff 

  0x00000214a641ecb8: ;   {post_call_nop}
  0x00000214a641ecb8: 0f1f 8400 | 0000 0000 | baf6 ffff | ff48 8bac | 24a8 0000 

  0x00000214a641eccc: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641eccc: 0066 90e8 

  0x00000214a641ecd0: ; ImmutableOopMap {rbp=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@924 (line 301)
  0x00000214a641ecd0: 8c53 9bff 

  0x00000214a641ecd4: ;   {post_call_nop}
  0x00000214a641ecd4: 0f1f 8400 | 0000 0000 | baf6 ffff | ff48 8bac | 24a8 0000 

  0x00000214a641ece8: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ece8: 0066 90e8 

  0x00000214a641ecec: ; ImmutableOopMap {rbp=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@936 (line 302)
  0x00000214a641ecec: 7053 9bff 

  0x00000214a641ecf0: ;   {post_call_nop}
  0x00000214a641ecf0: 0f1f 8400 | 0000 0000 | baf6 ffff | ff48 8be8 

  0x00000214a641ed00: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ed00: 6666 90e8 

  0x00000214a641ed04: ; ImmutableOopMap {rbp=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@951 (line 303)
  0x00000214a641ed04: 5853 9bff 

  0x00000214a641ed08: ;   {post_call_nop}
  0x00000214a641ed08: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641ed14: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ed14: ff66 90e8 

  0x00000214a641ed18: ; ImmutableOopMap {}
                      ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@981 (line 304)
  0x00000214a641ed18: 4453 9bff 

  0x00000214a641ed1c: ;   {post_call_nop}
  0x00000214a641ed1c: 0f1f 8400 | 0000 0000 | baf6 ffff | ff48 8be8 

  0x00000214a641ed2c: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ed2c: 6666 90e8 

  0x00000214a641ed30: ; ImmutableOopMap {rbp=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@990 (line 304)
  0x00000214a641ed30: 2c53 9bff 

  0x00000214a641ed34: ;   {post_call_nop}
  0x00000214a641ed34: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641ed40: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ed40: ff66 90e8 

  0x00000214a641ed44: ; ImmutableOopMap {}
                      ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1018 (line 305)
  0x00000214a641ed44: 1853 9bff 

  0x00000214a641ed48: ;   {post_call_nop}
  0x00000214a641ed48: 0f1f 8400 | 0000 0000 | baf6 ffff | ff48 8be8 

  0x00000214a641ed58: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ed58: 6666 90e8 

  0x00000214a641ed5c: ; ImmutableOopMap {rbp=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1027 (line 305)
  0x00000214a641ed5c: 0053 9bff 

  0x00000214a641ed60: ;   {post_call_nop}
  0x00000214a641ed60: 0f1f 8400 | 0000 0000 | baf6 ffff | ff48 8be8 

  0x00000214a641ed70: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ed70: 6666 90e8 

  0x00000214a641ed74: ; ImmutableOopMap {rbp=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1055 (line 306)
  0x00000214a641ed74: e852 9bff 

  0x00000214a641ed78: ;   {post_call_nop}
  0x00000214a641ed78: 0f1f 8400 | 0000 0000 | baf6 ffff | ff48 8be8 

  0x00000214a641ed88: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ed88: 6666 90e8 

  0x00000214a641ed8c: ; ImmutableOopMap {rbp=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1069 (line 307)
  0x00000214a641ed8c: d052 9bff 

  0x00000214a641ed90: ;   {post_call_nop}
  0x00000214a641ed90: 0f1f 8400 | 0000 0000 | baf6 ffff | ffc4 e1f9 

  0x00000214a641eda0: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641eda0: 7ec5 90e8 

  0x00000214a641eda4: ; ImmutableOopMap {}
                      ;*dastore {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@315 (line 251)
  0x00000214a641eda4: b852 9bff 

  0x00000214a641eda8: ;   {post_call_nop}
  0x00000214a641eda8: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641edb4: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641edb4: ff66 90e8 

  0x00000214a641edb8: ; ImmutableOopMap {}
                      ;*getfield p {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) Alastor$1::handle@2527 (line 419)
  0x00000214a641edb8: a452 9bff 

  0x00000214a641edbc: ;   {post_call_nop}
  0x00000214a641edbc: 0f1f 8400 | 0000 0000 | baf6 ffff | ff49 8be9 

  0x00000214a641edcc: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641edcc: 6666 90e8 

  0x00000214a641edd0: ; ImmutableOopMap {rbp=Oop }
                      ;*invokeinterface addAll {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1371 (line 331)
  0x00000214a641edd0: 8c52 9bff 

  0x00000214a641edd4: ;   {post_call_nop}
  0x00000214a641edd4: 0f1f 8400 | 0000 0000 | baf6 ffff | ff48 8bac | 2498 0000 

  0x00000214a641ede8: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ede8: 0066 90e8 

  0x00000214a641edec: ; ImmutableOopMap {rbp=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1459 (line 338)
  0x00000214a641edec: 7052 9bff 

  0x00000214a641edf0: ;   {post_call_nop}
  0x00000214a641edf0: 0f1f 8400 | 0000 0000 | baf6 ffff | ff48 8bac | 2498 0000 

  0x00000214a641ee04: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ee04: 0066 90e8 

  0x00000214a641ee08: ; ImmutableOopMap {rbp=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1471 (line 339)
  0x00000214a641ee08: 5452 9bff 

  0x00000214a641ee0c: ;   {post_call_nop}
  0x00000214a641ee0c: 0f1f 8400 | 0000 0000 | baf6 ffff | ff48 8be8 

  0x00000214a641ee1c: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ee1c: 6666 90e8 

  0x00000214a641ee20: ; ImmutableOopMap {rbp=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1499 (line 340)
  0x00000214a641ee20: 3c52 9bff 

  0x00000214a641ee24: ;   {post_call_nop}
  0x00000214a641ee24: 0f1f 8400 | 0000 0000 | baf6 ffff | ff48 8be8 

  0x00000214a641ee34: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ee34: 6666 90e8 

  0x00000214a641ee38: ; ImmutableOopMap {rbp=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1547 (line 341)
  0x00000214a641ee38: 2452 9bff 

  0x00000214a641ee3c: ;   {post_call_nop}
  0x00000214a641ee3c: 0f1f 8400 | 0000 0000 | baf6 ffff | ff48 8be8 

  0x00000214a641ee4c: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ee4c: 6666 90e8 

  0x00000214a641ee50: ; ImmutableOopMap {rbp=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1593 (line 342)
  0x00000214a641ee50: 0c52 9bff 

  0x00000214a641ee54: ;   {post_call_nop}
  0x00000214a641ee54: 0f1f 8400 | 0000 0000 | baf6 ffff | ff48 8be8 

  0x00000214a641ee64: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ee64: 6666 90e8 

  0x00000214a641ee68: ; ImmutableOopMap {rbp=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1607 (line 343)
  0x00000214a641ee68: f451 9bff 

  0x00000214a641ee6c: ;   {post_call_nop}
  0x00000214a641ee6c: 0f1f 8400 | 0000 0000 | baf6 ffff | ff48 8be8 

  0x00000214a641ee7c: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ee7c: 6666 90e8 

  0x00000214a641ee80: ; ImmutableOopMap {rbp=Oop }
                      ;*invokeinterface add {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1621 (line 344)
  0x00000214a641ee80: dc51 9bff 

  0x00000214a641ee84: ;   {post_call_nop}
  0x00000214a641ee84: 0f1f 8400 | 0000 0000 | baf6 ffff | ff49 8be9 

  0x00000214a641ee94: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ee94: 6666 90e8 

  0x00000214a641ee98: ; ImmutableOopMap {rbp=Oop }
                      ;*invokeinterface addAll {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@752 (line 289)
  0x00000214a641ee98: c451 9bff 

  0x00000214a641ee9c: ;   {post_call_nop}
  0x00000214a641ee9c: 0f1f 8400 | 0000 0000 | baf6 ffff | ff49 8be9 

  0x00000214a641eeac: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641eeac: 6666 90e8 

  0x00000214a641eeb0: ; ImmutableOopMap {rbp=Oop }
                      ;*invokeinterface addAll {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@829 (line 292)
  0x00000214a641eeb0: ac51 9bff 

  0x00000214a641eeb4: ;   {post_call_nop}
  0x00000214a641eeb4: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641eec0: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641eec0: ff66 90e8 

  0x00000214a641eec4: ; ImmutableOopMap {}
                      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@582 (line 278)
  0x00000214a641eec4: 9851 9bff 

  0x00000214a641eec8: ;   {post_call_nop}
  0x00000214a641eec8: 0f1f 8400 | 0000 0000 | baf4 ffff 

  0x00000214a641eed4: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641eed4: ff66 90e8 

  0x00000214a641eed8: ; ImmutableOopMap {rbp=Oop [40]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@132 (line 236)
  0x00000214a641eed8: 8451 9bff 

  0x00000214a641eedc: ;   {post_call_nop}
  0x00000214a641eedc: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641eee8: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641eee8: ff66 90e8 

  0x00000214a641eeec: ; ImmutableOopMap {}
                      ;*invokevirtual getChildren {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@141 (line 236)
  0x00000214a641eeec: 7051 9bff 

  0x00000214a641eef0: ;   {post_call_nop}
  0x00000214a641eef0: 0f1f 8400 | 0000 0000 | baf6 ffff | ff49 8be8 

  0x00000214a641ef00: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ef00: 6666 90e8 

  0x00000214a641ef04: ; ImmutableOopMap {rbp=Oop }
                      ;*invokeinterface remove {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@146 (line 236)
  0x00000214a641ef04: 5851 9bff 

  0x00000214a641ef08: ;   {post_call_nop}
  0x00000214a641ef08: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641ef14: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ef14: ff66 90e8 

  0x00000214a641ef18: ; ImmutableOopMap {}
                      ;*getfield size {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.ArrayList$Itr::hasNext@8 (line 1045)
                      ; - Alastor$1::handle@117 (line 236)
  0x00000214a641ef18: 4451 9bff 

  0x00000214a641ef1c: ;   {post_call_nop}
  0x00000214a641ef1c: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641ef28: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ef28: ff66 90e8 

  0x00000214a641ef2c: ; ImmutableOopMap {}
                      ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1538 (line 341)
  0x00000214a641ef2c: 3051 9bff 

  0x00000214a641ef30: ;   {post_call_nop}
  0x00000214a641ef30: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641ef3c: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ef3c: ff66 90e8 

  0x00000214a641ef40: ; ImmutableOopMap {}
                      ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1584 (line 342)
  0x00000214a641ef40: 1c51 9bff 

  0x00000214a641ef44: ;   {post_call_nop}
  0x00000214a641ef44: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641ef50: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ef50: ff66 90e8 

  0x00000214a641ef54: ; ImmutableOopMap {}
                      ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@2025 (line 377)
  0x00000214a641ef54: 0851 9bff 

  0x00000214a641ef58: ;   {post_call_nop}
  0x00000214a641ef58: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641ef64: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ef64: ff66 90e8 

  0x00000214a641ef68: ; ImmutableOopMap {}
                      ;*invokeinterface iterator {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@108 (line 236)
  0x00000214a641ef68: f450 9bff 

  0x00000214a641ef6c: ;   {post_call_nop}
  0x00000214a641ef6c: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641ef78: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ef78: ff66 90e8 

  0x00000214a641ef7c: ; ImmutableOopMap {}
                      ;*invokeinterface clear {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@159 (line 237)
  0x00000214a641ef7c: e050 9bff 

  0x00000214a641ef80: ;   {post_call_nop}
  0x00000214a641ef80: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641ef8c: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641ef8c: ff66 90e8 

  0x00000214a641ef90: ; ImmutableOopMap {}
                      ;*invokeinterface clear {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@168 (line 238)
  0x00000214a641ef90: cc50 9bff 

  0x00000214a641ef94: ;   {post_call_nop}
  0x00000214a641ef94: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641efa0: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641efa0: ff66 90e8 

  0x00000214a641efa4: ; ImmutableOopMap {}
                      ;*invokeinterface clear {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@177 (line 239)
  0x00000214a641efa4: b850 9bff 

  0x00000214a641efa8: ;   {post_call_nop}
  0x00000214a641efa8: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641efb4: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641efb4: ff66 90e8 

  0x00000214a641efb8: ; ImmutableOopMap {}
                      ;*invokeinterface clear {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@186 (line 240)
  0x00000214a641efb8: a450 9bff 

  0x00000214a641efbc: ;   {post_call_nop}
  0x00000214a641efbc: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641efc8: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641efc8: ff66 90e8 

  0x00000214a641efcc: ; ImmutableOopMap {}
                      ;*invokeinterface clear {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@195 (line 241)
  0x00000214a641efcc: 9050 9bff 

  0x00000214a641efd0: ;   {post_call_nop}
  0x00000214a641efd0: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641efdc: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641efdc: ff66 90e8 

  0x00000214a641efe0: ; ImmutableOopMap {}
                      ;*invokeinterface clear {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@204 (line 242)
  0x00000214a641efe0: 7c50 9bff 

  0x00000214a641efe4: ;   {post_call_nop}
  0x00000214a641efe4: 0f1f 8400 | 0000 0000 | baf6 ffff 

  0x00000214a641eff0: ;   {runtime_call UncommonTrapBlob}
  0x00000214a641eff0: ff66 90e8 

  0x00000214a641eff4: ; ImmutableOopMap {}
                      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - Alastor$1::handle@1170 (line 317)
  0x00000214a641eff4: 6850 9bff 

  0x00000214a641eff8: ;   {post_call_nop}
  0x00000214a641eff8: 0f1f 8400 | 0000 0000 | 488b d0e9 | 0309 0000 | 488b d0e9 | fb08 0000 | 488b d0e9 | f308 0000 
  0x00000214a641f018: 488b d0e9 | eb08 0000 | 488b d0e9 | e308 0000 | e907 0300 | 00e9 0203 | 0000 e950 | 0700 00e9 
  0x00000214a641f038: 4b07 0000 | 488b d0e9 | c708 0000 | 488b d0e9 | bf08 0000 | 488b d0e9 | b708 0000 | 488b d0e9 
  0x00000214a641f058: af08 0000 | 488b d0e9 | a708 0000 | 488b d0e9 | 9f08 0000 | 488b d0e9 | 9708 0000 | 488b d0e9 
  0x00000214a641f078: 8f08 0000 | 488b d0e9 | 8708 0000 | 488b d0e9 | 7f08 0000 | 488b d0e9 | 7708 0000 | 488b d0e9 
  0x00000214a641f098: 6f08 0000 | 488b d0e9 | 6708 0000 | 488b d0e9 | 5f08 0000 | 488b d0e9 | 5708 0000 | 488b d0e9 
  0x00000214a641f0b8: 4f08 0000 | 488b d0e9 | 4708 0000 | 488b d0e9 | 3f08 0000 | 488b d0e9 | 3708 0000 | 488b d0e9 
  0x00000214a641f0d8: 2f08 0000 | 488b d0e9 | 2708 0000 | 488b d0e9 | 1f08 0000 | 488b d0e9 | 1708 0000 

  0x00000214a641f0f4: ;   {no_reloc}
  0x00000214a641f0f4: 488b d0e9 | 0f08 0000 | 488b d0e9 | 0708 0000 | 488b d0e9 | ff07 0000 | 488b d0e9 | f707 0000 
  0x00000214a641f114: 488b d0e9 | ef07 0000 | 488b d0e9 | e707 0000 | 488b d0e9 | df07 0000 | 488b d0e9 | d707 0000 
  0x00000214a641f134: 488b d0e9 | cf07 0000 | 488b d0e9 | c707 0000 | 488b d0e9 | bf07 0000 | 488b d0e9 | b707 0000 
  0x00000214a641f154: 488b d0e9 | af07 0000 | 488b d0e9 | a707 0000 | 488b d0e9 | 9f07 0000 | 488b d0e9 | 9707 0000 
  0x00000214a641f174: 488b d0e9 | 8f07 0000 | 488b d0e9 | 8707 0000 | 488b d0e9 | 7f07 0000 | 488b d0e9 | 7707 0000 
  0x00000214a641f194: 488b d0e9 | 6f07 0000 | 488b d0e9 | 6707 0000 | 488b d0e9 | 5f07 0000 | 488b d0e9 | 5707 0000 
  0x00000214a641f1b4: 488b d0e9 | 4f07 0000 | 488b d0e9 | 4707 0000 | 488b d0e9 | 3f07 0000 | 488b d0e9 | 3707 0000 
  0x00000214a641f1d4: 488b d0e9 | 2f07 0000 | 488b d0e9 | 2707 0000 | 488b d0e9 | 1f07 0000 | 488b d0e9 | 1707 0000 
  0x00000214a641f1f4: ;   {no_reloc}
  0x00000214a641f1f4: 488b d0e9 | 0f07 0000 | 488b d0e9 | 0707 0000 | 488b d0e9 | ff06 0000 | 488b d0e9 | f706 0000 
  0x00000214a641f214: 488b d0e9 | ef06 0000 | 488b d0e9 | e706 0000 | 488b d0e9 | df06 0000 | 488b d0e9 | d706 0000 
  0x00000214a641f234: 488b d0e9 | cf06 0000 | 488b d0e9 | c706 0000 | 488b d0e9 | bf06 0000 | 488b d0e9 | b706 0000 
  0x00000214a641f254: 488b d0e9 | af06 0000 | 488b d0e9 | a706 0000 | 488b d0e9 | 9f06 0000 | 488b d0e9 | 9706 0000 
  0x00000214a641f274: 488b d0e9 | 8f06 0000 | 488b d0e9 | 8706 0000 | 488b d0e9 | 7f06 0000 | 488b d0e9 | 7706 0000 
  0x00000214a641f294: 488b d0e9 | 6f06 0000 | 488b d0e9 | 6706 0000 | 488b d0e9 | 5f06 0000 | 488b d0e9 | 5706 0000 
  0x00000214a641f2b4: 488b d0e9 | 4f06 0000 | 488b d0e9 | 4706 0000 | 488b d0e9 | 3f06 0000 | 488b d0e9 | 3706 0000 
  0x00000214a641f2d4: 488b d0e9 | 2f06 0000 | 488b d0e9 | 2706 0000 | 488b d0e9 | 1f06 0000 | eb46 eb44 | eb42 eb40 
  0x00000214a641f2f4: ;   {no_reloc}
  0x00000214a641f2f4: eb3e eb3c | eb3a eb38 | 488b d0e9 | 0706 0000 | 488b d0e9 | ff05 0000 | 488b d0e9 | f705 0000 
  0x00000214a641f314: 488b d0e9 | ef05 0000 | 488b d0e9 | e705 0000 | 488b d0e9 | df05 0000 | 488b d0e9 | d705 0000 
  0x00000214a641f334: 488b d0e9 | cf05 0000 | e9e2 0400 | 00e9 dd04 | 0000 e9d8 | 0400 00e9 | d304 0000 | e9ce 0400 
  0x00000214a641f354: 00eb 0048 | 8bd0 e9ac | 0500 0048 | 8bd0 e9a4 | 0500 0048 | 8bd0 e99c | 0500 0048 | 8bd0 e994 
  0x00000214a641f374: 0500 0048 | 8bd0 e98c | 0500 0048 | 8bd0 e984 | 0500 0048 | 8bd0 e97c | 0500 0048 | 8bd0 e974 
  0x00000214a641f394: 0500 0048 | 8bd0 e96c | 0500 0048 | 8bd0 e964 | 0500 0048 | 8bd0 e95c | 0500 0048 | 8bd0 e954 
  0x00000214a641f3b4: 0500 0048 | 8bd0 e94c | 0500 0048 | 8bd0 e944 | 0500 0048 | 8bd0 e93c | 0500 0048 | 8bd0 e934 
  0x00000214a641f3d4: 0500 0048 | 8bd0 e92c | 0500 0048 | 8bd0 e924 | 0500 0048 | 8bd0 e91c | 0500 0048 | 8bd0 e914 
  0x00000214a641f3f4: ;   {no_reloc}
  0x00000214a641f3f4: 0500 0048 | 8bd0 e90c | 0500 0048 | 8bd0 e904 | 0500 0048 | 8bd0 e9fc | 0400 0048 | 8bd0 e9f4 
  0x00000214a641f414: 0400 0048 | 8bd0 e9ec | 0400 0048 | 8bd0 e9e4 | 0400 0048 | 8bd0 e9dc | 0400 0048 | 8bd0 e9d4 
  0x00000214a641f434: 0400 0048 | 8bd0 e9cc | 0400 0048 | 8bd0 e9c4 | 0400 0048 | 8bd0 e9bc | 0400 0048 | 8bd0 e9b4 
  0x00000214a641f454: 0400 0048 | 8bd0 e9ac | 0400 0048 | 8bd0 e9a4 | 0400 0048 | 8bd0 e99c | 0400 0048 | 8bd0 e994 
  0x00000214a641f474: 0400 0048 | 8bd0 e98c | 0400 0048 | 8bd0 e984 | 0400 0048 | 8bd0 e97c | 0400 0048 | 8bd0 e974 
  0x00000214a641f494: 0400 0048 | 8bd0 e96c | 0400 0048 | 8bd0 e964 | 0400 0048 | 8bd0 e95c | 0400 0048 | 8bd0 e954 
  0x00000214a641f4b4: 0400 0048 | 8bd0 e94c | 0400 0048 | 8bd0 e944 | 0400 0048 | 8bd0 e93c | 0400 0048 | 8bd0 e934 
  0x00000214a641f4d4: 0400 0048 | 8bd0 e92c | 0400 0048 | 8bd0 e924 | 0400 0048 | 8bd0 e91c | 0400 0048 

  0x00000214a641f4f0: ;   {no_reloc}
  0x00000214a641f4f0: 8bd0 e914 | 0400 0048 | 8bd0 e90c | 0400 0048 | 8bd0 e904 | 0400 0048 | 8bd0 e9fc | 0300 0048 
  0x00000214a641f510: 8bd0 e9f4 | 0300 0048 | 8bd0 e9ec | 0300 0048 | 8bd0 e9e4 | 0300 0048 | 8bd0 e9dc | 0300 0048 
  0x00000214a641f530: 8bd0 e9d4 | 0300 0048 | 8bd0 e9cc | 0300 0048 | 8bd0 e9c4 | 0300 0048 | 8bd0 e9bc | 0300 0048 
  0x00000214a641f550: 8bd0 e9b4 | 0300 0048 | 8bd0 e9ac | 0300 0048 | 8bd0 e9a4 | 0300 0048 | 8bd0 e99c | 0300 0048 
  0x00000214a641f570: 8bd0 e994 | 0300 0048 | 8bd0 e98c | 0300 0048 | 8bd0 e984 | 0300 0048 | 8bd0 e97c | 0300 0048 
  0x00000214a641f590: 8bd0 e974 | 0300 0048 | 8bd0 e96c | 0300 0048 | 8bd0 e964 | 0300 0048 | 8bd0 e95c | 0300 0048 
  0x00000214a641f5b0: 8bd0 e954 | 0300 0048 | 8bd0 e94c | 0300 0048 | 8bd0 e944 | 0300 0048 | 8bd0 e93c | 0300 0048 
  0x00000214a641f5d0: 8bd0 e934 | 0300 0048 | 8bd0 e92c | 0300 0048 | 8bd0 e924 | 0300 0048 | 8bd0 e91c | 0300 0048 
  0x00000214a641f5f0: ;   {no_reloc}
  0x00000214a641f5f0: 8bd0 e914 | 0300 0048 | 8bd0 e90c | 0300 0048 | 8bd0 e904 | 0300 0048 | 8bd0 e9fc | 0200 0048 
  0x00000214a641f610: 8bd0 e9f4 | 0200 0048 | 8bd0 e9ec | 0200 0048 | 8bd0 e9e4 | 0200 0048 | 8bd0 e9dc | 0200 0048 
  0x00000214a641f630: 8bd0 e9d4 | 0200 0048 | 8bd0 e9cc | 0200 0048 | 8bd0 e9c4 | 0200 0048 | 8bd0 e9bc | 0200 0048 
  0x00000214a641f650: 8bd0 e9b4 | 0200 0048 | 8bd0 e9ac | 0200 0048 | 8bd0 e9a4 | 0200 0048 | 8bd0 e99c | 0200 0048 
  0x00000214a641f670: 8bd0 e994 | 0200 0048 | 8bd0 e98c | 0200 0048 | 8bd0 e984 | 0200 0048 | 8bd0 e97c | 0200 0048 
  0x00000214a641f690: 8bd0 e974 | 0200 0048 | 8bd0 e96c | 0200 0048 | 8bd0 e964 | 0200 0048 | 8bd0 e95c | 0200 0048 
  0x00000214a641f6b0: 8bd0 e954 | 0200 0048 | 8bd0 e94c | 0200 0048 | 8bd0 e944 | 0200 0048 | 8bd0 e93c | 0200 0048 
  0x00000214a641f6d0: 8bd0 e934 | 0200 0048 | 8bd0 e92c | 0200 0048 | 8bd0 e924 | 0200 0048 | 8bd0 e91c | 0200 0048 
  0x00000214a641f6f0: ;   {no_reloc}
  0x00000214a641f6f0: 8bd0 e914 | 0200 0048 | 8bd0 e90c | 0200 0048 | 8bd0 e904 | 0200 0048 | 8bd0 e9fc | 0100 0048 
  0x00000214a641f710: 8bd0 e9f4 | 0100 0048 | 8bd0 e9ec | 0100 0048 | 8bd0 e9e4 | 0100 0048 | 8bd0 e9dc | 0100 0048 
  0x00000214a641f730: 8bd0 e9d4 | 0100 0048 | 8bd0 e9cc | 0100 0048 | 8bd0 e9c4 | 0100 0048 | 8bd0 e9bc | 0100 0048 
  0x00000214a641f750: 8bd0 e9b4 | 0100 0048 | 8bd0 e9ac | 0100 0048 | 8bd0 e9a4 | 0100 0048 | 8bd0 e99c | 0100 0048 
  0x00000214a641f770: 8bd0 e994 | 0100 0048 | 8bd0 e98c | 0100 0048 | 8bd0 e984 | 0100 0048 | 8bd0 e97c | 0100 0048 
  0x00000214a641f790: 8bd0 e974 | 0100 0048 | 8bd0 e96c | 0100 0048 | 8bd0 e964 | 0100 0048 | 8bd0 e95c | 0100 0048 
  0x00000214a641f7b0: 8bd0 e954 | 0100 0048 | 8bd0 e94c | 0100 0048 | 8bd0 e944 | 0100 00eb | 5aeb 58eb | 56eb 54eb 
  0x00000214a641f7d0: 52eb 50eb | 4eeb 4ceb | 4a48 8bd0 | e92a 0100 | 0048 8bd0 | e922 0100 | 00eb 3848 | 8bd0 e918 
  0x00000214a641f7f0: ;   {no_reloc}
  0x00000214a641f7f0: 0100 0048 | 8bd0 e910 | 0100 0048 | 8bd0 e908 | 0100 0048 | 8bd0 e900 | 0100 0048 | 8bd0 e9f8 
  0x00000214a641f810: 0000 0048 | 8bd0 e9f0 | 0000 0048 | 8bd0 e9e8 | 0000 0048 | 8bd0 e9e0 | 0000 0048 | 8bd0 e9d8 
  0x00000214a641f830: 0000 0048 | 8bd0 e9d0 | 0000 0048 | 8bd0 e9c8 | 0000 0048 | 8bd0 e9c0 | 0000 0048 | 8bd0 e9b8 
  0x00000214a641f850: 0000 0048 | 8bd0 e9b0 | 0000 0048 | 8bd0 e9a8 | 0000 0048 | 8bd0 e9a0 | 0000 0048 | 8bd0 e998 
  0x00000214a641f870: 0000 0048 | 8bd0 e990 | 0000 0048 | 8bd0 e988 | 0000 0048 | 8bd0 e980 | 0000 0048 | 8bd0 eb7b 
  0x00000214a641f890: 488b d0eb | 7648 8bd0 | eb71 488b | d0eb 6c48 | 8bd0 eb67 | 488b d0eb | 6248 8bd0 | eb5d 488b 
  0x00000214a641f8b0: d0eb 5848 | 8bd0 eb53 | 488b d0eb | 4e48 8bd0 | eb49 488b | d0eb 4448 | 8bd0 eb3f | 488b d0eb 
  0x00000214a641f8d0: 3a48 8bd0 | eb35 488b | d0eb 3048 | 8bd0 eb2b | 488b d0eb | 2648 8bd0 | eb21 488b 

  0x00000214a641f8ec: ;   {no_reloc}
  0x00000214a641f8ec: d0eb 1c48 | 8bd0 eb17 | 488b d0eb | 1248 8bd0 | eb0d 488b | d0eb 0848 | 8bd0 eb03 | 488b d048 
  0x00000214a641f90c: 81c4 f000 

  0x00000214a641f910: ;   {runtime_call C2 Runtime rethrow}
  0x00000214a641f910: 0000 5de9 | 4877 9bff | 458b 0349 | c1e0 0349 | 83f8 000f | 842e 52ff | ff4d 8b57 | 384d 85d2 
  0x00000214a641f930: 0f84 1400 | 0000 4983 | ea08 4d89 | 5738 4d03 | 5740 4d89 | 02e9 0d52 | ffff 4883 | ec30 4c89 
  0x00000214a641f950: 5c24 2848 | 8944 2420 | 498b c849 

  0x00000214a641f95c: ;   {runtime_call}
  0x00000214a641f95c: 8bd7 48b8 | 9049 9fbc | f97f 0000 | ffd0 488b | 4424 204c | 8b5c 2428 | c5f8 7748 | 83c4 30e9 
  0x00000214a641f97c: d751 ffff | f083 4424 | c000 4180 | 3a00 0f84 | 0952 ffff | 41c6 0200 | 4d8b 4750 | 4d85 c00f 
  0x00000214a641f99c: 8414 0000 | 0049 83e8 | 084d 8947 | 504d 0347 | 584d 8910 | e9e4 51ff | ff48 83ec | 2049 8bca 
  0x00000214a641f9bc: ;   {runtime_call}
  0x00000214a641f9bc: 498b d748 | b870 499f | bcf9 7f00 | 00ff d0c5 | f877 4883 | c420 e9c2 | 51ff ff45 | 8b02 49c1 
  0x00000214a641f9dc: e003 4983 | f800 0f84 | f764 ffff | 4d8b 5f38 | 4d85 db0f | 8414 0000 | 0049 83eb | 084d 895f 
  0x00000214a641f9fc: 384d 035f | 404d 8903 | e9d6 64ff | ff48 83ec | 304c 8954 | 2428 4889 | 4424 2049 | 8bc8 498b 
  0x00000214a641fa1c: ;   {runtime_call}
  0x00000214a641fa1c: d748 b890 | 499f bcf9 | 7f00 00ff | d048 8b44 | 2420 4c8b | 5424 28c5 | f877 4883 | c430 e9a0 
  0x00000214a641fa3c: 64ff fff0 | 8344 24c0 | 0041 803b | 000f 84c8 | 64ff ff41 | c603 004d | 8b47 504d | 85c0 0f84 
  0x00000214a641fa5c: 1400 0000 | 4983 e808 | 4d89 4750 | 4d03 4758 | 4d89 18e9 | a364 ffff | 4883 ec20 | 498b cb49 
  0x00000214a641fa7c: ;   {runtime_call}
  0x00000214a641fa7c: 8bd7 48b8 | 7049 9fbc | f97f 0000 | ffd0 c5f8 | 7748 83c4 | 20e9 8164 | ffff 458b | 1049 c1e2 
  0x00000214a641fa9c: 0349 83fa | 000f 8498 | 64ff ff4d | 8b5f 384d | 85db 0f84 | 1400 0000 | 4983 eb08 | 4d89 5f38 
  0x00000214a641fabc: 4d03 5f40 | 4d89 13e9 | 7764 ffff | 4883 ec30 | 4c89 4424 | 2848 8944 | 2420 498b | ca49 8bd7 
  0x00000214a641fadc: ;   {runtime_call}
  0x00000214a641fadc: 48b8 9049 | 9fbc f97f | 0000 ffd0 | 488b 4424 | 204c 8b44 | 2428 c5f8 | 7748 83c4 | 30e9 4164 
  0x00000214a641fafc: ffff f083 | 4424 c000 | 4180 3b00 | 0f84 6964 | ffff 41c6 | 0300 4d8b | 5750 4d85 | d20f 8414 
  0x00000214a641fb1c: 0000 0049 | 83ea 084d | 8957 504d | 0357 584d | 891a e944 | 64ff ff48 | 83ec 2049 | 8bcb 498b 
  0x00000214a641fb3c: ;   {runtime_call}
  0x00000214a641fb3c: d748 b870 | 499f bcf9 | 7f00 00ff | d0c5 f877 | 4883 c420 | e922 64ff | ff45 8b02 | 49c1 e003 
  0x00000214a641fb5c: 4983 f800 | 0f84 3d64 | ffff 4d8b | 5f38 4d85 | db0f 8414 | 0000 0049 | 83eb 084d | 895f 384d 
  0x00000214a641fb7c: 035f 404d | 8903 e91c | 64ff ff48 | 83ec 304c | 8954 2428 | 4889 4424 | 2049 8bc8 

  0x00000214a641fb98: ;   {runtime_call}
  0x00000214a641fb98: 498b d748 | b890 499f | bcf9 7f00 | 00ff d048 | 8b44 2420 | 4c8b 5424 | 28c5 f877 | 4883 c430 
  0x00000214a641fbb8: e9e6 63ff | fff0 8344 | 24c0 0041 | 803b 000f | 840e 64ff | ff41 c603 | 004d 8b47 | 504d 85c0 
  0x00000214a641fbd8: 0f84 1400 | 0000 4983 | e808 4d89 | 4750 4d03 | 4758 4d89 | 18e9 e963 | ffff 4883 | ec20 498b 
  0x00000214a641fbf8: cb49 8bd7 

  0x00000214a641fbfc: ;   {runtime_call}
  0x00000214a641fbfc: 48b8 7049 | 9fbc f97f | 0000 ffd0 | c5f8 7748 | 83c4 20e9 | c763 ffff | 458b 0249 | c1e0 0349 
  0x00000214a641fc1c: 83f8 000f | 84de 63ff | ff4d 8b5f | 384d 85db | 0f84 1400 | 0000 4983 | eb08 4d89 | 5f38 4d03 
  0x00000214a641fc3c: 5f40 4d89 | 03e9 bd63 | ffff 4883 | ec30 4c89 | 5424 2848 | 8944 2420 | 498b c849 

  0x00000214a641fc58: ;   {runtime_call}
  0x00000214a641fc58: 8bd7 48b8 | 9049 9fbc | f97f 0000 | ffd0 488b | 4424 204c | 8b54 2428 | c5f8 7748 | 83c4 30e9 
  0x00000214a641fc78: 8763 ffff | f083 4424 | c000 4180 | 3b00 0f84 | af63 ffff | 41c6 0300 | 4d8b 4750 | 4d85 c00f 
  0x00000214a641fc98: 8414 0000 | 0049 83e8 | 084d 8947 | 504d 0347 | 584d 8918 | e98a 63ff | ff48 83ec | 2049 8bcb 
  0x00000214a641fcb8: ;   {runtime_call}
  0x00000214a641fcb8: 498b d748 | b870 499f | bcf9 7f00 | 00ff d0c5 | f877 4883 | c420 e968 | 63ff ff45 | 8b02 49c1 
  0x00000214a641fcd8: e003 4983 | f800 0f84 | 8363 ffff | 4d8b 5f38 | 4d85 db0f | 8414 0000 | 0049 83eb | 084d 895f 
  0x00000214a641fcf8: 384d 035f | 404d 8903 | e962 63ff | ff48 83ec | 304c 8954 | 2428 4889 | 4424 2049 | 8bc8 498b 
  0x00000214a641fd18: ;   {runtime_call}
  0x00000214a641fd18: d748 b890 | 499f bcf9 | 7f00 00ff | d048 8b44 | 2420 4c8b | 5424 28c5 | f877 4883 | c430 e92c 
  0x00000214a641fd38: 63ff fff0 | 8344 24c0 | 0041 803b | 000f 8454 | 63ff ff41 | c603 004d | 8b47 504d | 85c0 0f84 
  0x00000214a641fd58: 1400 0000 | 4983 e808 | 4d89 4750 | 4d03 4758 | 4d89 18e9 | 2f63 ffff | 4883 ec20 | 498b cb49 
  0x00000214a641fd78: ;   {runtime_call}
  0x00000214a641fd78: 8bd7 48b8 | 7049 9fbc | f97f 0000 | ffd0 c5f8 | 7748 83c4 | 20e9 0d63 | ffff 458b | 1a49 c1e3 
  0x00000214a641fd98: 0349 83fb | 000f 8428 | 63ff ff4d | 8b47 384d | 85c0 0f84 | 1400 0000 | 4983 e808 | 4d89 4738 
  0x00000214a641fdb8: 4d03 4740 | 4d89 18e9 | 0763 ffff | 4883 ec40 | 4c89 5424 | 384c 894c | 2430 4889 | 4424 2849 
  0x00000214a641fdd8: 8bcb 498b 

  0x00000214a641fddc: ;   {runtime_call}
  0x00000214a641fddc: d748 b890 | 499f bcf9 | 7f00 00ff | d048 8b44 | 2428 4c8b | 4c24 304c | 8b54 2438 | c5f8 7748 
  0x00000214a641fdfc: 83c4 40e9 | c762 ffff | f083 4424 | c000 4180 | 3800 0f84 | ef62 ffff | 41c6 0000 | 4d8b 5f50 
  0x00000214a641fe1c: 4d85 db0f | 8414 0000 | 0049 83eb | 084d 895f | 504d 035f | 584d 8903 | e9ca 62ff | ff48 83ec 
  0x00000214a641fe3c: 304c 894c | 2428 498b | c849 8bd7 

  0x00000214a641fe48: ;   {runtime_call}
  0x00000214a641fe48: 48b8 7049 | 9fbc f97f | 0000 ffd0 | 4c8b 4c24 | 28c5 f877 | 4883 c430 | e99e 62ff | ff45 8b10 
  0x00000214a641fe68: 49c1 e203 | 4983 fa00 | 0f84 396b | ffff 4d8b | 5f38 4d85 | db0f 8414 | 0000 0049 | 83eb 084d 
  0x00000214a641fe88: 895f 384d | 035f 404d | 8913 e918 | 6bff ff48 | 83ec 304c | 8944 2428 | 4889 4424 | 2049 8bca 
  0x00000214a641fea8: ;   {runtime_call}
  0x00000214a641fea8: 498b d748 | b890 499f | bcf9 7f00 | 00ff d048 | 8b44 2420 | 4c8b 4424 | 28c5 f877 | 4883 c430 
  0x00000214a641fec8: e9e2 6aff | fff0 8344 | 24c0 0041 | 803b 000f | 840a 6bff | ff41 c603 | 004d 8b57 | 504d 85d2 
  0x00000214a641fee8: 0f84 1400 | 0000 4983 | ea08 4d89 | 5750 4d03 | 5758 4d89 | 1ae9 e56a | ffff 4883 | ec20 498b 
  0x00000214a641ff08: cb49 8bd7 

  0x00000214a641ff0c: ;   {runtime_call}
  0x00000214a641ff0c: 48b8 7049 | 9fbc f97f | 0000 ffd0 | c5f8 7748 | 83c4 20e9 | c36a ffff | 458b 1049 | c1e2 0349 
  0x00000214a641ff2c: 83fa 000f | 84d6 6aff | ff4d 8b5f | 384d 85db | 0f84 1400 | 0000 4983 | eb08 4d89 | 5f38 4d03 
  0x00000214a641ff4c: 5f40 4d89 | 13e9 b56a | ffff 4883 | ec30 4c89 | 4424 2848 | 8944 2420 | 498b ca49 

  0x00000214a641ff68: ;   {runtime_call}
  0x00000214a641ff68: 8bd7 48b8 | 9049 9fbc | f97f 0000 | ffd0 488b | 4424 204c | 8b44 2428 | c5f8 7748 | 83c4 30e9 
  0x00000214a641ff88: 7f6a ffff | f083 4424 | c000 4180 | 3b00 0f84 | a76a ffff | 41c6 0300 | 4d8b 5750 | 4d85 d20f 
  0x00000214a641ffa8: 8414 0000 | 0049 83ea | 084d 8957 | 504d 0357 | 584d 891a | e982 6aff | ff48 83ec | 2049 8bcb 
  0x00000214a641ffc8: ;   {runtime_call}
  0x00000214a641ffc8: 498b d748 | b870 499f | bcf9 7f00 | 00ff d0c5 | f877 4883 | c420 e960 | 6aff ff45 | 8b10 49c1 
  0x00000214a641ffe8: e203 4983 | fa00 0f84 | 736a ffff | 4d8b 5f38 | 4d85 db0f | 8414 0000 | 0049 83eb | 084d 895f 
  0x00000214a6420008: 384d 035f | 404d 8913 | e952 6aff | ff48 83ec | 304c 8944 | 2428 4889 | 4424 2049 | 8bca 498b 
  0x00000214a6420028: ;   {runtime_call}
  0x00000214a6420028: d748 b890 | 499f bcf9 | 7f00 00ff | d048 8b44 | 2420 4c8b | 4424 28c5 | f877 4883 | c430 e91c 
  0x00000214a6420048: 6aff fff0 | 8344 24c0 | 0041 803b | 000f 8444 | 6aff ff41 | c603 004d | 8b57 504d | 85d2 0f84 
  0x00000214a6420068: 1400 0000 | 4983 ea08 | 4d89 5750 | 4d03 5758 | 4d89 1ae9 | 1f6a ffff | 4883 ec20 | 498b cb49 
  0x00000214a6420088: ;   {runtime_call}
  0x00000214a6420088: 8bd7 48b8 | 7049 9fbc | f97f 0000 | ffd0 c5f8 | 7748 83c4 | 20e9 fd69 | ffff 458b | 1049 c1e2 
  0x00000214a64200a8: 0349 83fa | 000f 8410 | 6aff ff4d | 8b5f 384d | 85db 0f84 | 1400 0000 | 4983 eb08 | 4d89 5f38 
  0x00000214a64200c8: 4d03 5f40 | 4d89 13e9 | ef69 ffff | 4883 ec30 | 4c89 4424 | 2848 8944 | 2420 498b | ca49 8bd7 
  0x00000214a64200e8: ;   {runtime_call}
  0x00000214a64200e8: 48b8 9049 | 9fbc f97f | 0000 ffd0 | 488b 4424 | 204c 8b44 | 2428 c5f8 | 7748 83c4 | 30e9 b969 
  0x00000214a6420108: ffff f083 | 4424 c000 | 4180 3b00 | 0f84 e169 | ffff 41c6 | 0300 4d8b | 5750 4d85 | d20f 8414 
  0x00000214a6420128: 0000 0049 | 83ea 084d | 8957 504d | 0357 584d | 891a e9bc | 69ff ff48 | 83ec 2049 | 8bcb 498b 
  0x00000214a6420148: ;   {runtime_call}
  0x00000214a6420148: d748 b870 | 499f bcf9 | 7f00 00ff | d0c5 f877 | 4883 c420 | e99a 69ff | ff45 8b10 | 49c1 e203 
  0x00000214a6420168: 4983 fa00 | 0f84 ad69 | ffff 4d8b | 5f38 4d85 | db0f 8414 | 0000 0049 | 83eb 084d | 895f 384d 
  0x00000214a6420188: 035f 404d | 8913 e98c | 69ff ff48 | 83ec 304c | 8944 2428 | 4889 4424 | 2049 8bca 

  0x00000214a64201a4: ;   {runtime_call}
  0x00000214a64201a4: 498b d748 | b890 499f | bcf9 7f00 | 00ff d048 | 8b44 2420 | 4c8b 4424 | 28c5 f877 | 4883 c430 
  0x00000214a64201c4: e956 69ff | fff0 8344 | 24c0 0041 | 803b 000f | 847e 69ff | ff41 c603 | 004d 8b57 | 504d 85d2 
  0x00000214a64201e4: 0f84 1400 | 0000 4983 | ea08 4d89 | 5750 4d03 | 5758 4d89 | 1ae9 5969 | ffff 4883 | ec20 498b 
  0x00000214a6420204: cb49 8bd7 

  0x00000214a6420208: ;   {runtime_call}
  0x00000214a6420208: 48b8 7049 | 9fbc f97f | 0000 ffd0 | c5f8 7748 | 83c4 20e9 | 3769 ffff | 458b 1a49 | c1e3 0349 
  0x00000214a6420228: 83fb 000f | 8446 69ff | ff4d 8b47 | 384d 85c0 | 0f84 1400 | 0000 4983 | e808 4d89 | 4738 4d03 
  0x00000214a6420248: 4740 4d89 | 18e9 2569 | ffff 4883 | ec30 4c89 | 5424 2848 | 8944 2420 | 498b cb49 

  0x00000214a6420264: ;   {runtime_call}
  0x00000214a6420264: 8bd7 48b8 | 9049 9fbc | f97f 0000 | ffd0 488b | 4424 204c | 8b54 2428 | c5f8 7748 | 83c4 30e9 
  0x00000214a6420284: ef68 ffff | f083 4424 | c000 4180 | 3800 0f84 | 1769 ffff | 41c6 0000 | 4d8b 5f50 | 4d85 db0f 
  0x00000214a64202a4: 8414 0000 | 0049 83eb | 084d 895f | 504d 035f | 584d 8903 | e9f2 68ff | ff48 83ec | 2049 8bc8 
  0x00000214a64202c4: ;   {runtime_call}
  0x00000214a64202c4: 498b d748 | b870 499f | bcf9 7f00 | 00ff d0c5 | f877 4883 | c420 e9d0 | 68ff ff45 | 8b03 49c1 
  0x00000214a64202e4: e003 4983 | f800 0f84 | df6d ffff | 4d8b 5738 | 4d85 d20f | 8414 0000 | 0049 83ea | 084d 8957 
  0x00000214a6420304: 384d 0357 | 404d 8902 | e9be 6dff | ff48 83ec | 60c5 f9d6 | 5424 58c5 | f9d6 5c24 | 50c5 f9d6 
  0x00000214a6420324: 6424 48c5 | f9d6 6c24 | 40c5 f9d6 | 4c24 384c | 895c 2430 | 4889 4424 | 2849 8bc8 

  0x00000214a6420340: ;   {runtime_call}
  0x00000214a6420340: 498b d748 | b890 499f | bcf9 7f00 | 00ff d048 | 8b44 2428 | 4c8b 5c24 | 30c5 f877 | c5fa 7e4c 
  0x00000214a6420360: 2438 c5fa | 7e6c 2440 | c5fa 7e64 | 2448 c5fa | 7e5c 2450 | c5fa 7e54 | 2458 4883 | c460 e94c 
  0x00000214a6420380: 6dff fff0 | 8344 24c0 | 0041 803a | 000f 8474 | 6dff ff41 | c602 004d | 8b47 504d | 85c0 0f84 
  0x00000214a64203a0: 1400 0000 | 4983 e808 | 4d89 4750 | 4d03 4758 | 4d89 10e9 | 4f6d ffff | 4883 ec50 | c5f9 d654 
  0x00000214a64203c0: 2448 c5f9 | d65c 2440 | c5f9 d664 | 2438 c5f9 | d66c 2430 | c5f9 d64c | 2428 4889 | 4424 2049 
  0x00000214a64203e0: 8bca 498b 

  0x00000214a64203e4: ;   {runtime_call}
  0x00000214a64203e4: d748 b870 | 499f bcf9 | 7f00 00ff | d048 8b44 | 2420 c5f8 | 77c5 fa7e | 4c24 28c5 | fa7e 6c24 
  0x00000214a6420404: 30c5 fa7e | 6424 38c5 | fa7e 5c24 | 40c5 fa7e | 5424 4848 | 83c4 50e9 | e76c ffff | 458b 0b49 
  0x00000214a6420424: c1e1 0349 | 83f9 000f | 8464 73ff | ff4d 8b47 | 384d 85c0 | 0f84 1400 | 0000 4983 | e808 4d89 
  0x00000214a6420444: 4738 4d03 | 4740 4d89 | 08e9 4373 | ffff 4883 | ec40 4c89 | 5424 384c | 895c 2430 | 4889 4c24 
  0x00000214a6420464: 2848 8944 | 2420 498b | c949 8bd7 

  0x00000214a6420470: ;   {runtime_call}
  0x00000214a6420470: 48b8 9049 | 9fbc f97f | 0000 ffd0 | 488b 4424 | 2048 8b4c | 2428 4c8b | 5c24 304c | 8b54 2438 
  0x00000214a6420490: c5f8 7748 | 83c4 40e9 | f972 ffff | f083 4424 | c000 4180 | 3800 0f84 | 2b73 ffff | 41c6 0000 
  0x00000214a64204b0: 4d8b 4f50 | 4d85 c90f | 8414 0000 | 0049 83e9 | 084d 894f | 504d 034f | 584d 8901 | e906 73ff 
  0x00000214a64204d0: ff48 83ec | 304c 8954 | 2428 4889 | 4c24 2049 | 8bc8 498b 

  0x00000214a64204e4: ;   {runtime_call}
  0x00000214a64204e4: d748 b870 | 499f bcf9 | 7f00 00ff | d048 8b4c | 2420 4c8b | 5424 28c5 | f877 4883 | c430 e9d0 
  0x00000214a6420504: 72ff ff45 | 8b18 49c1 | e303 4983 | fb00 0f84 | 2073 ffff | 4d8b 4f38 | 4d85 c90f | 8414 0000 
  0x00000214a6420524: 0049 83e9 | 084d 894f | 384d 034f | 404d 8919 | e9ff 72ff | ff48 83ec | 404c 8954 | 2438 4c89 
  0x00000214a6420544: 4424 3048 | 894c 2428 | 498b cb49 

  0x00000214a6420550: ;   {runtime_call}
  0x00000214a6420550: 8bd7 48b8 | 9049 9fbc | f97f 0000 | ffd0 488b | 4c24 284c | 8b44 2430 | 4c8b 5424 | 38c5 f877 
  0x00000214a6420570: 4883 c440 | e9bf 72ff | fff0 8344 | 24c0 0041 | 8039 000f | 84e7 72ff | ff41 c601 | 004d 8b5f 
  0x00000214a6420590: 504d 85db | 0f84 1400 | 0000 4983 | eb08 4d89 | 5f50 4d03 | 5f58 4d89 | 0be9 c272 | ffff 4883 
  0x00000214a64205b0: ec30 4c89 | 5424 2849 | 8bc9 498b 

  0x00000214a64205bc: ;   {runtime_call}
  0x00000214a64205bc: d748 b870 | 499f bcf9 | 7f00 00ff | d04c 8b54 | 2428 c5f8 | 7748 83c4 | 30e9 9672 | ffff 458b 
  0x00000214a64205dc: 0b49 c1e1 | 0349 83f9 | 000f 84f2 | 72ff ff4d | 8b47 384d | 85c0 0f84 | 1400 0000 | 4983 e808 
  0x00000214a64205fc: 4d89 4738 | 4d03 4740 | 4d89 08e9 | d172 ffff | 4883 ec40 | 4c89 5424 | 384c 895c | 2430 4889 
  0x00000214a642061c: 4c24 2848 | 8944 2420 | 498b c949 

  0x00000214a6420628: ;   {runtime_call}
  0x00000214a6420628: 8bd7 48b8 | 9049 9fbc | f97f 0000 | ffd0 488b | 4424 2048 | 8b4c 2428 | 4c8b 5c24 | 304c 8b54 
  0x00000214a6420648: 2438 c5f8 | 7748 83c4 | 40e9 8772 | ffff f083 | 4424 c000 | 4180 3800 | 0f84 af72 | ffff 41c6 
  0x00000214a6420668: 0000 4d8b | 4f50 4d85 | c90f 8414 | 0000 0049 | 83e9 084d | 894f 504d | 034f 584d | 8901 e98a 
  0x00000214a6420688: 72ff ff48 | 83ec 404c | 8954 2438 | 4889 4c24 | 3048 8944 | 2428 498b | c849 8bd7 

  0x00000214a64206a4: ;   {runtime_call}
  0x00000214a64206a4: 48b8 7049 | 9fbc f97f | 0000 ffd0 | 488b 4424 | 2848 8b4c | 2430 4c8b | 5424 38c5 | f877 4883 
  0x00000214a64206c4: c440 e94a | 72ff ff45 | 8b03 49c1 | e003 4983 | f800 0f84 | 4e72 ffff | 4d8b 4f38 | 4d85 c90f 
  0x00000214a64206e4: 8414 0000 | 0049 83e9 | 084d 894f | 384d 034f | 404d 8901 | e92d 72ff | ff48 83ec | 404c 8954 
  0x00000214a6420704: 2438 4c89 | 5c24 3048 | 894c 2428 | 4889 4424 | 2049 8bc8 

  0x00000214a6420718: ;   {runtime_call}
  0x00000214a6420718: 498b d748 | b890 499f | bcf9 7f00 | 00ff d048 | 8b44 2420 | 488b 4c24 | 284c 8b5c | 2430 4c8b 
  0x00000214a6420738: 5424 38c5 | f877 4883 | c440 e9e3 | 71ff ff45 | 8b18 49c1 | e303 4983 | fb00 0f84 | 5d72 ffff 
  0x00000214a6420758: 4d8b 4f38 | 4d85 c90f | 8414 0000 | 0049 83e9 | 084d 894f | 384d 034f | 404d 8919 | e93c 72ff 
  0x00000214a6420778: ff48 83ec | 404c 8954 | 2438 4c89 | 4424 3048 | 8944 2428 | 498b cb49 

  0x00000214a6420790: ;   {runtime_call}
  0x00000214a6420790: 8bd7 48b8 | 9049 9fbc | f97f 0000 | ffd0 488b | 4424 284c | 8b44 2430 | 4c8b 5424 | 38c5 f877 
  0x00000214a64207b0: 4883 c440 | e9fc 71ff | fff0 8344 | 24c0 0041 | 8039 000f | 8424 72ff | ff41 c601 | 004d 8b5f 
  0x00000214a64207d0: 504d 85db | 0f84 1400 | 0000 4983 | eb08 4d89 | 5f50 4d03 | 5f58 4d89 | 0be9 ff71 | ffff 4883 
  0x00000214a64207f0: ec30 4c89 | 5424 2849 | 8bc9 498b 

  0x00000214a64207fc: ;   {runtime_call}
  0x00000214a64207fc: d748 b870 | 499f bcf9 | 7f00 00ff | d04c 8b54 | 2428 c5f8 | 7748 83c4 | 30e9 d371 | ffff f083 
  0x00000214a642081c: 4424 c000 | 4180 3b00 | 0f84 8972 | ffff 41c6 | 0300 4d8b | 4750 4d85 | c00f 8414 | 0000 0049 
  0x00000214a642083c: 83e8 084d | 8947 504d | 0347 584d | 8918 e964 | 72ff ff48 | 83ec 2049 | 8bcb 498b 

  0x00000214a6420858: ;   {runtime_call}
  0x00000214a6420858: d748 b870 | 499f bcf9 | 7f00 00ff | d0c5 f877 | 4883 c420 | e942 72ff | ff45 8b08 | 49c1 e103 
  0x00000214a6420878: 4983 f900 | 0f84 b972 | ffff 498b | 4f38 4885 | c90f 8414 | 0000 0048 | 83e9 0849 | 894f 3849 
  0x00000214a6420898: 034f 404c | 8909 e998 | 72ff ff48 | 83ec 404c | 8954 2438 | 4c89 5c24 | 304c 8944 | 2428 4889 
  0x00000214a64208b8: 4424 2049 | 8bc9 498b 

  0x00000214a64208c0: ;   {runtime_call}
  0x00000214a64208c0: d748 b890 | 499f bcf9 | 7f00 00ff | d048 8b44 | 2420 4c8b | 4424 284c | 8b5c 2430 | 4c8b 5424 
  0x00000214a64208e0: 38c5 f877 | 4883 c440 | e94e 72ff | fff0 8344 | 24c0 0080 | 3900 0f84 | 8072 ffff | c601 004d 
  0x00000214a6420900: 8b4f 504d | 85c9 0f84 | 1400 0000 | 4983 e908 | 4d89 4f50 | 4d03 4f58 | 4989 09e9 | 5c72 ffff 
  0x00000214a6420920: 4883 ec30 | 4c89 5424 | 284c 895c | 2420 498b 

  0x00000214a6420930: ;   {runtime_call}
  0x00000214a6420930: d748 b870 | 499f bcf9 | 7f00 00ff | d04c 8b5c | 2420 4c8b | 5424 28c5 | f877 4883 | c430 e929 
  0x00000214a6420950: 72ff ff45 | 8b11 49c1 | e203 4983 | fa00 0f84 | 4472 ffff | 4d8b 5f38 | 4d85 db0f | 8414 0000 
  0x00000214a6420970: 0049 83eb | 084d 895f | 384d 035f | 404d 8913 | e923 72ff | ff48 83ec | 404c 8944 | 2438 4c89 
  0x00000214a6420990: 4c24 3048 | 894c 2428 | 498b ca49 

  0x00000214a642099c: ;   {runtime_call}
  0x00000214a642099c: 8bd7 48b8 | 9049 9fbc | f97f 0000 | ffd0 488b | 4c24 284c | 8b4c 2430 | 4c8b 4424 | 38c5 f877 
  0x00000214a64209bc: 4883 c440 | e9e3 71ff | fff0 8344 | 24c0 0041 | 803b 000f | 840b 72ff | ff41 c603 | 004d 8b57 
  0x00000214a64209dc: 504d 85d2 | 0f84 1400 | 0000 4983 | ea08 4d89 | 5750 4d03 | 5758 4d89 | 1ae9 e671 | ffff 4883 
  0x00000214a64209fc: ec30 4c89 | 4424 2848 | 894c 2420 | 498b cb49 

  0x00000214a6420a0c: ;   {runtime_call}
  0x00000214a6420a0c: 8bd7 48b8 | 7049 9fbc | f97f 0000 | ffd0 488b | 4c24 204c | 8b44 2428 | c5f8 7748 | 83c4 30e9 
  0x00000214a6420a2c: b071 ffff | 458b 0849 | c1e1 0349 | 83f9 000f | 841b 72ff | ff49 8b4f | 3848 85c9 | 0f84 1400 
  0x00000214a6420a4c: 0000 4883 | e908 4989 | 4f38 4903 | 4f40 4c89 | 09e9 fa71 | ffff 4883 | ec50 4c89 | 5424 484c 
  0x00000214a6420a6c: 895c 2440 | 4c89 4424 | 3848 897c | 2430 4889 | 5424 2849 | 8bc9 498b 

  0x00000214a6420a84: ;   {runtime_call}
  0x00000214a6420a84: d748 b890 | 499f bcf9 | 7f00 00ff | d048 8b54 | 2428 488b | 7c24 304c | 8b44 2438 | 4c8b 5c24 
  0x00000214a6420aa4: 404c 8b54 | 2448 c5f8 | 7748 83c4 | 50e9 a671 | ffff f083 | 4424 c000 | 8039 000f | 84d8 71ff 
  0x00000214a6420ac4: ffc6 0100 | 4d8b 4f50 | 4d85 c90f | 8414 0000 | 0049 83e9 | 084d 894f | 504d 034f | 5849 8909 
  0x00000214a6420ae4: e9b4 71ff | ff48 83ec | 404c 8954 | 2438 4c89 | 5c24 3048 | 8954 2428 

  0x00000214a6420afc: ;   {runtime_call}
  0x00000214a6420afc: 498b d748 | b870 499f | bcf9 7f00 | 00ff d048 | 8b54 2428 | 4c8b 5c24 | 304c 8b54 | 2438 c5f8 
  0x00000214a6420b1c: 7748 83c4 | 40e9 7771 | ffff 458b | 0849 c1e1 | 0349 83f9 | 000f 8475 | 71ff ff49 | 8b4f 3848 
  0x00000214a6420b3c: 85c9 0f84 | 1400 0000 | 4883 e908 | 4989 4f38 | 4903 4f40 | 4c89 09e9 | 5471 ffff | 4883 ec40 
  0x00000214a6420b5c: 4c89 5424 | 384c 895c | 2430 4c89 | 4424 2848 | 8954 2420 | 498b c949 

  0x00000214a6420b74: ;   {runtime_call}
  0x00000214a6420b74: 8bd7 48b8 | 9049 9fbc | f97f 0000 | ffd0 488b | 5424 204c | 8b44 2428 | 4c8b 5c24 | 304c 8b54 
  0x00000214a6420b94: 2438 c5f8 | 7748 83c4 | 40e9 0a71 | ffff f083 | 4424 c000 | 8039 000f | 8432 71ff | ffc6 0100 
  0x00000214a6420bb4: 4d8b 4f50 | 4d85 c90f | 8414 0000 | 0049 83e9 | 084d 894f | 504d 034f | 5849 8909 | e90e 71ff 
  0x00000214a6420bd4: ff48 83ec | 304c 8954 | 2428 4c89 | 5c24 2049 

  0x00000214a6420be4: ;   {runtime_call}
  0x00000214a6420be4: 8bd7 48b8 | 7049 9fbc | f97f 0000 | ffd0 4c8b | 5c24 204c | 8b54 2428 | c5f8 7748 | 83c4 30e9 
  0x00000214a6420c04: db70 ffff | 458b 0349 | c1e0 0349 | 83f8 000f | 842f 71ff | ff4d 8b4f | 384d 85c9 | 0f84 1400 
  0x00000214a6420c24: 0000 4983 | e908 4d89 | 4f38 4d03 | 4f40 4d89 | 01e9 0e71 | ffff 4883 | ec40 4c89 | 5424 384c 
  0x00000214a6420c44: 895c 2430 | 4889 4c24 | 2849 8bc8 

  0x00000214a6420c50: ;   {runtime_call}
  0x00000214a6420c50: 498b d748 | b890 499f | bcf9 7f00 | 00ff d048 | 8b4c 2428 | 4c8b 5c24 | 304c 8b54 | 2438 c5f8 
  0x00000214a6420c70: 7748 83c4 | 40e9 ce70 | ffff f083 | 4424 c000 | 4180 3900 | 0f84 f670 | ffff 41c6 | 0100 4d8b 
  0x00000214a6420c90: 4750 4d85 | c00f 8414 | 0000 0049 | 83e8 084d | 8947 504d | 0347 584d | 8908 e9d1 | 70ff ff48 
  0x00000214a6420cb0: 83ec 304c | 8954 2428 | 498b c949 

  0x00000214a6420cbc: ;   {runtime_call}
  0x00000214a6420cbc: 8bd7 48b8 | 7049 9fbc | f97f 0000 | ffd0 4c8b | 5424 28c5 | f877 4883 | c430 e9a5 | 70ff ff45 
  0x00000214a6420cdc: 8b18 49c1 | e303 4983 | fb00 0f84 | 1071 ffff | 4d8b 4f38 | 4d85 c90f | 8414 0000 | 0049 83e9 
  0x00000214a6420cfc: 084d 894f | 384d 034f | 404d 8919 | e9ef 70ff | ff48 83ec | 404c 8954 | 2438 4c89 | 4424 3048 
  0x00000214a6420d1c: 894c 2428 | 4889 7c24 | 2049 8bcb 

  0x00000214a6420d28: ;   {runtime_call}
  0x00000214a6420d28: 498b d748 | b890 499f | bcf9 7f00 | 00ff d048 | 8b7c 2420 | 488b 4c24 | 284c 8b44 | 2430 4c8b 
  0x00000214a6420d48: 5424 38c5 | f877 4883 | c440 e9a5 | 70ff fff0 | 8344 24c0 | 0041 8039 | 000f 84cd | 70ff ff41 
  0x00000214a6420d68: c601 004d | 8b5f 504d | 85db 0f84 | 1400 0000 | 4983 eb08 | 4d89 5f50 | 4d03 5f58 | 4d89 0be9 
  0x00000214a6420d88: a870 ffff | 4883 ec40 | 4c89 5424 | 3848 894c | 2430 4889 | 7c24 2849 | 8bc9 498b 

  0x00000214a6420da4: ;   {runtime_call}
  0x00000214a6420da4: d748 b870 | 499f bcf9 | 7f00 00ff | d048 8b7c | 2428 488b | 4c24 304c | 8b54 2438 | c5f8 7748 
  0x00000214a6420dc4: 83c4 40e9 | 6870 ffff | 458b 0349 | c1e0 0349 | 83f8 000f | 8469 70ff | ff4d 8b4f | 384d 85c9 
  0x00000214a6420de4: 0f84 1400 | 0000 4983 | e908 4d89 | 4f38 4d03 | 4f40 4d89 | 01e9 4870 | ffff 4883 | ec40 4c89 
  0x00000214a6420e04: 5424 384c | 895c 2430 | 4889 7c24 | 2849 8bc8 

  0x00000214a6420e14: ;   {runtime_call}
  0x00000214a6420e14: 498b d748 | b890 499f | bcf9 7f00 | 00ff d048 | 8b7c 2428 | 4c8b 5c24 | 304c 8b54 | 2438 c5f8 
  0x00000214a6420e34: 7748 83c4 | 40e9 0870 | ffff 458b | 0349 c1e0 | 0349 83f8 | 000f 8467 | 70ff ff4d | 8b4f 384d 
  0x00000214a6420e54: 85c9 0f84 | 1400 0000 | 4983 e908 | 4d89 4f38 | 4d03 4f40 | 4d89 01e9 | 4670 ffff | 4883 ec40 
  0x00000214a6420e74: 4c89 5424 | 384c 895c | 2430 4889 | 4c24 2849 | 8bc8 498b 

  0x00000214a6420e88: ;   {runtime_call}
  0x00000214a6420e88: d748 b890 | 499f bcf9 | 7f00 00ff | d048 8b4c | 2428 4c8b | 5c24 304c | 8b54 2438 | c5f8 7748 
  0x00000214a6420ea8: 83c4 40e9 | 0670 ffff | f083 4424 | c000 4180 | 3900 0f84 | 2e70 ffff | 41c6 0100 | 4d8b 4750 
  0x00000214a6420ec8: 4d85 c00f | 8414 0000 | 0049 83e8 | 084d 8947 | 504d 0347 | 584d 8908 | e909 70ff | ff48 83ec 
  0x00000214a6420ee8: 304c 8954 | 2428 498b | c949 8bd7 

  0x00000214a6420ef4: ;   {runtime_call}
  0x00000214a6420ef4: 48b8 7049 | 9fbc f97f | 0000 ffd0 | 4c8b 5424 | 28c5 f877 | 4883 c430 | e9dd 6fff | ff45 8b03 
  0x00000214a6420f14: 49c1 e003 | 4983 f800 | 0f84 2e70 | ffff 4d8b | 4f38 4d85 | c90f 8414 | 0000 0049 | 83e9 084d 
  0x00000214a6420f34: 894f 384d | 034f 404d | 8901 e90d | 70ff ff48 | 83ec 404c | 8954 2438 | 4c89 5c24 | 3048 8944 
  0x00000214a6420f54: 2428 498b | c849 8bd7 

  0x00000214a6420f5c: ;   {runtime_call}
  0x00000214a6420f5c: 48b8 9049 | 9fbc f97f | 0000 ffd0 | 488b 4424 | 284c 8b5c | 2430 4c8b | 5424 38c5 | f877 4883 
  0x00000214a6420f7c: c440 e9cd | 6fff fff0 | 8344 24c0 | 0041 8039 | 000f 84f5 | 6fff ff41 | c601 004d | 8b47 504d 
  0x00000214a6420f9c: 85c0 0f84 | 1400 0000 | 4983 e808 | 4d89 4750 | 4d03 4758 | 4d89 08e9 | d06f ffff | 4883 ec30 
  0x00000214a6420fbc: 4c89 5424 | 2848 8944 | 2420 498b | c949 8bd7 

  0x00000214a6420fcc: ;   {runtime_call}
  0x00000214a6420fcc: 48b8 7049 | 9fbc f97f | 0000 ffd0 | 488b 4424 | 204c 8b54 | 2428 c5f8 | 7748 83c4 | 30e9 9a6f 
  0x00000214a6420fec: ffff 458b | 0349 c1e0 | 0349 83f8 | 000f 8404 | 70ff ff4d | 8b4f 384d | 85c9 0f84 | 1400 0000 
  0x00000214a642100c: 4983 e908 | 4d89 4f38 | 4d03 4f40 | 4d89 01e9 | e36f ffff | 4883 ec50 | 4c89 5424 | 484c 895c 
  0x00000214a642102c: 2440 4889 | 4c24 3848 | 897c 2430 | 4889 5424 | 2848 8944 | 2420 498b | c849 8bd7 

  0x00000214a6421048: ;   {runtime_call}
  0x00000214a6421048: 48b8 9049 | 9fbc f97f | 0000 ffd0 | 488b 4424 | 2048 8b54 | 2428 488b | 7c24 3048 | 8b4c 2438 
  0x00000214a6421068: 4c8b 5c24 | 404c 8b54 | 2448 c5f8 | 7748 83c4 | 50e9 856f | ffff f083 | 4424 c000 | 4180 3900 
  0x00000214a6421088: 0f84 ad6f | ffff 41c6 | 0100 4d8b | 4750 4d85 | c00f 8414 | 0000 0049 | 83e8 084d | 8947 504d 
  0x00000214a64210a8: 0347 584d | 8908 e988 | 6fff ff48 | 83ec 404c | 8954 2438 | 4889 4c24 | 3048 897c | 2428 4889 
  0x00000214a64210c8: 5424 2049 | 8bc9 498b 

  0x00000214a64210d0: ;   {runtime_call}
  0x00000214a64210d0: d748 b870 | 499f bcf9 | 7f00 00ff | d048 8b54 | 2420 488b | 7c24 2848 | 8b4c 2430 | 4c8b 5424 
  0x00000214a64210f0: 38c5 f877 | 4883 c440 | e93e 6fff | ff45 8b03 | 49c1 e003 | 4983 f800 | 0f84 426f | ffff 4d8b 
  0x00000214a6421110: 5738 4d85 | d20f 8414 | 0000 0049 | 83ea 084d | 8957 384d | 0357 404d | 8902 e921 | 6fff ff48 
  0x00000214a6421130: 83ec 504c | 895c 2448 | 4c89 4c24 | 4048 894c | 2438 4889 | 7c24 3048 | 8954 2428 | 498b c849 
  0x00000214a6421150: ;   {runtime_call}
  0x00000214a6421150: 8bd7 48b8 | 9049 9fbc | f97f 0000 | ffd0 488b | 5424 2848 | 8b7c 2430 | 488b 4c24 | 384c 8b4c 
  0x00000214a6421170: 2440 4c8b | 5c24 48c5 | f877 4883 | c450 e9cd | 6eff ff45 | 8b1a 49c1 | e303 4983 | fb00 0f84 
  0x00000214a6421190: d76e ffff | 498b 7f38 | 4885 ff0f | 8414 0000 | 0048 83ef | 0849 897f | 3849 037f | 404c 891f 
  0x00000214a64211b0: e9b6 6eff | ff48 83ec | 404c 8954 | 2438 4c89 | 4c24 3048 | 8954 2428 | 498b cb49 

  0x00000214a64211cc: ;   {runtime_call}
  0x00000214a64211cc: 8bd7 48b8 | 9049 9fbc | f97f 0000 | ffd0 488b | 5424 284c | 8b4c 2430 | 4c8b 5424 | 38c5 f877 
  0x00000214a64211ec: 4883 c440 | e976 6eff | fff0 8344 | 24c0 0080 | 3f00 0f84 | a86e ffff | c607 004d | 8b5f 504d 
  0x00000214a642120c: 85db 0f84 | 1400 0000 | 4983 eb08 | 4d89 5f50 | 4d03 5f58 | 4989 3be9 | 846e ffff | 4883 ec30 
  0x00000214a642122c: 4889 5424 | 2848 8bcf 

  0x00000214a6421234: ;   {runtime_call}
  0x00000214a6421234: 498b d748 | b870 499f | bcf9 7f00 | 00ff d048 | 8b54 2428 | c5f8 7748 | 83c4 30e9 | 586e ffff 
  0x00000214a6421254: 458b 1849 | c1e3 0349 | 83fb 000f | 8495 6eff | ff4d 8b57 | 384d 85d2 | 0f84 1400 | 0000 4983 
  0x00000214a6421274: ea08 4d89 | 5738 4d03 | 5740 4d89 | 1ae9 746e | ffff 4883 | ec40 4c89 | 4424 384c | 894c 2430 
  0x00000214a6421294: 4889 5424 | 2849 8bcb 

  0x00000214a642129c: ;   {runtime_call}
  0x00000214a642129c: 498b d748 | b890 499f | bcf9 7f00 | 00ff d048 | 8b54 2428 | 4c8b 4c24 | 304c 8b44 | 2438 c5f8 
  0x00000214a64212bc: 7748 83c4 | 40e9 346e | ffff f083 | 4424 c000 | 4180 3a00 | 0f84 5c6e | ffff 41c6 | 0200 4d8b 
  0x00000214a64212dc: 5f50 4d85 | db0f 8414 | 0000 0049 | 83eb 084d | 895f 504d | 035f 584d | 8913 e937 | 6eff ff48 
  0x00000214a64212fc: 83ec 304c | 894c 2428 | 4889 5424 | 2049 8bca 

  0x00000214a642130c: ;   {runtime_call}
  0x00000214a642130c: 498b d748 | b870 499f | bcf9 7f00 | 00ff d048 | 8b54 2420 | 4c8b 4c24 | 28c5 f877 | 4883 c430 
  0x00000214a642132c: e901 6eff | ff45 8b08 | 49c1 e103 | 4983 f900 | 0f84 206e | ffff 4d8b | 5738 4d85 | d20f 8414 
  0x00000214a642134c: 0000 0049 | 83ea 084d | 8957 384d | 0357 404d | 890a e9ff | 6dff ff48 | 83ec 404c | 895c 2438 
  0x00000214a642136c: 4c89 4424 | 3048 8944 | 2428 498b | c949 8bd7 

  0x00000214a642137c: ;   {runtime_call}
  0x00000214a642137c: 48b8 9049 | 9fbc f97f | 0000 ffd0 | 488b 4424 | 284c 8b44 | 2430 4c8b | 5c24 38c5 | f877 4883 
  0x00000214a642139c: c440 e9bf | 6dff fff0 | 8344 24c0 | 0041 803a | 000f 84f1 | 6dff ff41 | c602 004d | 8b4f 504d 
  0x00000214a64213bc: 85c9 0f84 | 1400 0000 | 4983 e908 | 4d89 4f50 | 4d03 4f58 | 4d89 11e9 | cc6d ffff | 4883 ec30 
  0x00000214a64213dc: 4c89 5c24 | 2849 8bca 

  0x00000214a64213e4: ;   {runtime_call}
  0x00000214a64213e4: 498b d748 | b870 499f | bcf9 7f00 | 00ff d04c | 8b5c 2428 | c5f8 7748 | 83c4 30e9 | a06d ffff 
  0x00000214a6421404: 458b 0849 | c1e1 0349 | 83f9 000f | 84bc 6dff | ff4d 8b5f | 384d 85db | 0f84 1400 | 0000 4983 
  0x00000214a6421424: eb08 4d89 | 5f38 4d03 | 5f40 4d89 | 0be9 9b6d | ffff 4883 | ec40 4c89 | 5424 384c | 8944 2430 
  0x00000214a6421444: 4889 7c24 | 2849 8bc9 

  0x00000214a642144c: ;   {runtime_call}
  0x00000214a642144c: 498b d748 | b890 499f | bcf9 7f00 | 00ff d048 | 8b7c 2428 | 4c8b 4424 | 304c 8b54 | 2438 c5f8 
  0x00000214a642146c: 7748 83c4 | 40e9 5b6d | ffff f083 | 4424 c000 | 4180 3b00 | 0f84 8d6d | ffff 41c6 | 0300 4d8b 
  0x00000214a642148c: 4f50 4d85 | c90f 8414 | 0000 0049 | 83e9 084d | 894f 504d | 034f 584d | 8919 e968 | 6dff ff48 
  0x00000214a64214ac: 83ec 304c | 8954 2428 | 498b cb49 

  0x00000214a64214b8: ;   {runtime_call}
  0x00000214a64214b8: 8bd7 48b8 | 7049 9fbc | f97f 0000 | ffd0 4c8b | 5424 28c5 | f877 4883 | c430 e93c | 6dff ff45 
  0x00000214a64214d8: 8b1a 49c1 | e303 4983 | fb00 0f84 | 0c6e ffff | 4d8b 4738 | 4d85 c00f | 8414 0000 | 0049 83e8 
  0x00000214a64214f8: 084d 8947 | 384d 0347 | 404d 8918 | e9eb 6dff | ff48 83ec | 504c 8954 | 2448 4c89 | 4c24 4048 
  0x00000214a6421518: 894c 2438 | 4889 7c24 | 3048 8954 | 2428 4889 | 4424 2049 | 8bcb 498b 

  0x00000214a6421530: ;   {runtime_call}
  0x00000214a6421530: d748 b890 | 499f bcf9 | 7f00 00ff | d048 8b44 | 2420 488b | 5424 2848 | 8b7c 2430 | 488b 4c24 
  0x00000214a6421550: 384c 8b4c | 2440 4c8b | 5424 48c5 | f877 4883 | c450 e98d | 6dff fff0 | 8344 24c0 | 0041 8038 
  0x00000214a6421570: 000f 84bf | 6dff ff41 | c600 004d | 8b5f 504d | 85db 0f84 | 1400 0000 | 4983 eb08 | 4d89 5f50 
  0x00000214a6421590: 4d03 5f58 | 4d89 03e9 | 9a6d ffff | 4883 ec40 | 4889 4c24 | 3848 897c | 2430 4889 | 5424 2848 
  0x00000214a64215b0: 8944 2420 | 498b c849 

  0x00000214a64215b8: ;   {runtime_call}
  0x00000214a64215b8: 8bd7 48b8 | 7049 9fbc | f97f 0000 | ffd0 488b | 4424 2048 | 8b54 2428 | 488b 7c24 | 3048 8b4c 
  0x00000214a64215d8: 2438 c5f8 | 7748 83c4 | 40e9 506d | ffff 458b | 1a49 c1e3 | 0349 83fb | 000f 8459 | 6dff ff4d 
  0x00000214a64215f8: 8b47 384d | 85c0 0f84 | 1400 0000 | 4983 e808 | 4d89 4738 | 4d03 4740 | 4d89 18e9 | 386d ffff 
  0x00000214a6421618: 4883 ec50 | 4c89 5424 | 484c 894c | 2440 4889 | 4c24 3848 | 897c 2430 | 4889 5424 | 2848 8944 
  0x00000214a6421638: 2420 498b | cb49 8bd7 

  0x00000214a6421640: ;   {runtime_call}
  0x00000214a6421640: 48b8 9049 | 9fbc f97f | 0000 ffd0 | 488b 4424 | 2048 8b54 | 2428 488b | 7c24 3048 | 8b4c 2438 
  0x00000214a6421660: 4c8b 4c24 | 404c 8b54 | 2448 c5f8 | 7748 83c4 | 50e9 da6c | ffff f083 | 4424 c000 | 4180 3800 
  0x00000214a6421680: 0f84 026d | ffff 41c6 | 0000 4d8b | 5f50 4d85 | db0f 8414 | 0000 0049 | 83eb 084d | 895f 504d 
  0x00000214a64216a0: 035f 584d | 8903 e9dd | 6cff ff48 | 83ec 404c | 894c 2438 | 4889 4c24 | 3048 897c | 2428 4889 
  0x00000214a64216c0: 5424 2049 | 8bc8 498b 

  0x00000214a64216c8: ;   {runtime_call}
  0x00000214a64216c8: d748 b870 | 499f bcf9 | 7f00 00ff | d048 8b54 | 2420 488b | 7c24 2848 | 8b4c 2430 | 4c8b 4c24 
  0x00000214a64216e8: 38c5 f877 | 4883 c440 | e993 6cff | ff41 8b12 | 48c1 e203 | 4883 fa00 | 0f84 946c | ffff 498b 
  0x00000214a6421708: 7f38 4885 | ff0f 8414 | 0000 0048 | 83ef 0849 | 897f 3849 | 037f 4048 | 8917 e973 | 6cff ff48 
  0x00000214a6421728: 83ec 404c | 8954 2438 | 4c89 5c24 | 3048 894c | 2428 488b | ca49 8bd7 

  0x00000214a6421740: ;   {runtime_call}
  0x00000214a6421740: 48b8 9049 | 9fbc f97f | 0000 ffd0 | 488b 4c24 | 284c 8b5c | 2430 4c8b | 5424 38c5 | f877 4883 
  0x00000214a6421760: c440 e933 | 6cff fff0 | 8344 24c0 | 0080 3f00 | 0f84 5b6c | ffff c607 | 0049 8b57 | 5048 85d2 
  0x00000214a6421780: 0f84 1400 | 0000 4883 | ea08 4989 | 5750 4903 | 5758 4889 | 3ae9 376c | ffff 4883 | ec30 4889 
  0x00000214a64217a0: 4c24 2848 | 8bcf 498b 

  0x00000214a64217a8: ;   {runtime_call}
  0x00000214a64217a8: d748 b870 | 499f bcf9 | 7f00 00ff | d048 8b4c | 2428 c5f8 | 7748 83c4 | 30e9 0b6c | ffff 448b 
  0x00000214a64217c8: 1349 c1e2 | 0349 83fa | 000f 8421 | 6cff ff49 | 8b4f 3848 | 85c9 0f84 | 1400 0000 | 4883 e908 
  0x00000214a64217e8: 4989 4f38 | 4903 4f40 | 4c89 11e9 | 006c ffff | 4883 ec20 | 498b ca49 

  0x00000214a6421800: ;   {runtime_call}
  0x00000214a6421800: 8bd7 48b8 | 9049 9fbc | f97f 0000 | ffd0 c5f8 | 7748 83c4 | 20e9 de6b | ffff f083 | 4424 c000 
  0x00000214a6421820: 8039 000f | 8406 6cff | ffc6 0100 | 4d8b 5750 | 4d85 d20f | 8414 0000 | 0049 83ea | 084d 8957 
  0x00000214a6421840: 504d 0357 | 5849 890a | e9e2 6bff | ff48 83ec | 2049 8bd7 

  0x00000214a6421854: ;   {runtime_call}
  0x00000214a6421854: 48b8 7049 | 9fbc f97f | 0000 ffd0 | c5f8 7748 | 83c4 20e9 | c36b ffff | f083 4424 | c000 4180 
  0x00000214a6421874: 3b00 0f84 | be6c ffff | 41c6 0300 | 4d8b 4f50 | 4d85 c90f | 8414 0000 | 0049 83e9 | 084d 894f 
  0x00000214a6421894: 504d 034f | 584d 8919 | e999 6cff | ff48 83ec | 304c 8954 | 2428 498b | cb49 8bd7 

  0x00000214a64218b0: ;   {runtime_call}
  0x00000214a64218b0: 48b8 7049 | 9fbc f97f | 0000 ffd0 | 4c8b 5424 | 28c5 f877 | 4883 c430 | e96d 6cff | fff0 8344 
  0x00000214a64218d0: 24c0 0041 | 803a 000f | 8432 6dff | ff41 c602 | 004d 8b5f | 504d 85db | 0f84 1400 | 0000 4983 
  0x00000214a64218f0: eb08 4d89 | 5f50 4d03 | 5f58 4d89 | 13e9 0d6d | ffff 4883 | ec20 498b | ca49 8bd7 

  0x00000214a642190c: ;   {runtime_call}
  0x00000214a642190c: 48b8 7049 | 9fbc f97f | 0000 ffd0 | c5f8 7748 | 83c4 20e9 | eb6c ffff | 458b 1849 | c1e3 0349 
  0x00000214a642192c: 83fb 000f | 84f4 6cff | ff4d 8b57 | 384d 85d2 | 0f84 1400 | 0000 4983 | ea08 4d89 | 5738 4d03 
  0x00000214a642194c: 5740 4d89 | 1ae9 d36c | ffff 4883 | ec30 4c89 | 4424 284c | 894c 2420 | 498b cb49 

  0x00000214a6421968: ;   {runtime_call}
  0x00000214a6421968: 8bd7 48b8 | 9049 9fbc | f97f 0000 | ffd0 4c8b | 4c24 204c | 8b44 2428 | c5f8 7748 | 83c4 30e9 
  0x00000214a6421988: 9d6c ffff | f083 4424 | c000 4180 | 3a00 0f84 | c56c ffff | 41c6 0200 | 4d8b 5f50 | 4d85 db0f 
  0x00000214a64219a8: 8414 0000 | 0049 83eb | 084d 895f | 504d 035f | 584d 8913 | e9a0 6cff | ff48 83ec | 304c 894c 
  0x00000214a64219c8: 2428 498b | ca49 8bd7 

  0x00000214a64219d0: ;   {runtime_call}
  0x00000214a64219d0: 48b8 7049 | 9fbc f97f | 0000 ffd0 | 4c8b 4c24 | 28c5 f877 | 4883 c430 | e974 6cff | fff0 8344 
  0x00000214a64219f0: 24c0 0041 | 803a 000f | 844b 6dff | ff41 c602 | 004d 8b47 | 504d 85c0 | 0f84 1400 | 0000 4983 
  0x00000214a6421a10: e808 4d89 | 4750 4d03 | 4758 4d89 | 10e9 266d | ffff 4883 | ec20 498b | ca49 8bd7 

  0x00000214a6421a2c: ;   {runtime_call}
  0x00000214a6421a2c: 48b8 7049 | 9fbc f97f | 0000 ffd0 | c5f8 7748 | 83c4 20e9 | 046d ffff | 418b 1a48 | c1e3 0348 
  0x00000214a6421a4c: 83fb 000f | 847a 6dff | ff49 8b4f | 3848 85c9 | 0f84 1400 | 0000 4883 | e908 4989 | 4f38 4903 
  0x00000214a6421a6c: 4f40 4889 | 19e9 596d | ffff 4883 | ec50 4c89 | 5424 484c | 895c 2440 | 4c89 4424 | 384c 894c 
  0x00000214a6421a8c: 2430 4889 | 4424 2848 | 8bcb 498b 

  0x00000214a6421a98: ;   {runtime_call}
  0x00000214a6421a98: d748 b890 | 499f bcf9 | 7f00 00ff | d048 8b44 | 2428 4c8b | 4c24 304c | 8b44 2438 | 4c8b 5c24 
  0x00000214a6421ab8: 404c 8b54 | 2448 c5f8 | 7748 83c4 | 50e9 056d | ffff f083 | 4424 c000 | 8039 000f | 8437 6dff 
  0x00000214a6421ad8: ffc6 0100 | 498b 5f50 | 4885 db0f | 8414 0000 | 0048 83eb | 0849 895f | 5049 035f | 5848 890b 
  0x00000214a6421af8: e913 6dff | ff48 83ec | 404c 895c | 2438 4c89 | 4424 304c | 894c 2428 

  0x00000214a6421b10: ;   {runtime_call}
  0x00000214a6421b10: 498b d748 | b870 499f | bcf9 7f00 | 00ff d04c | 8b4c 2428 | 4c8b 4424 | 304c 8b5c | 2438 c5f8 
  0x00000214a6421b30: 7748 83c4 | 40e9 d66c | ffff 458b | 0149 c1e0 | 0349 83f8 | 000f 84dc | 6cff ff4d | 8b5f 384d 
  0x00000214a6421b50: 85db 0f84 | 1400 0000 | 4983 eb08 | 4d89 5f38 | 4d03 5f40 | 4d89 03e9 | bb6c ffff | 4883 ec30 
  0x00000214a6421b70: 4c89 4c24 | 2849 8bc8 

  0x00000214a6421b78: ;   {runtime_call}
  0x00000214a6421b78: 498b d748 | b890 499f | bcf9 7f00 | 00ff d04c | 8b4c 2428 | c5f8 7748 | 83c4 30e9 | 8f6c ffff 
  0x00000214a6421b98: f083 4424 | c000 4180 | 3b00 0f84 | b76c ffff | 41c6 0300 | 4d8b 4750 | 4d85 c00f | 8414 0000 
  0x00000214a6421bb8: 0049 83e8 | 084d 8947 | 504d 0347 | 584d 8918 | e992 6cff | ff48 83ec | 2049 8bcb 

  0x00000214a6421bd4: ;   {runtime_call}
  0x00000214a6421bd4: 498b d748 | b870 499f | bcf9 7f00 | 00ff d0c5 | f877 4883 | c420 e970 | 6cff ff45 | 8b01 49c1 
  0x00000214a6421bf4: e003 4983 | f800 0f84 | 316d ffff | 4d8b 5f38 | 4d85 db0f | 8414 0000 | 0049 83eb | 084d 895f 
  0x00000214a6421c14: 384d 035f | 404d 8903 | e910 6dff | ff48 83ec | 404c 8954 | 2438 4c89 | 4c24 3048 | 894c 2428 
  0x00000214a6421c34: 4889 4424 | 2049 8bc8 

  0x00000214a6421c3c: ;   {runtime_call}
  0x00000214a6421c3c: 498b d748 | b890 499f | bcf9 7f00 | 00ff d048 | 8b44 2420 | 488b 4c24 | 284c 8b4c | 2430 4c8b 
  0x00000214a6421c5c: 5424 38c5 | f877 4883 | c440 e9c6 | 6cff fff0 | 8344 24c0 | 0041 803b | 000f 84f8 | 6cff ff41 
  0x00000214a6421c7c: c603 004d | 8b47 504d | 85c0 0f84 | 1400 0000 | 4983 e808 | 4d89 4750 | 4d03 4758 | 4d89 18e9 
  0x00000214a6421c9c: d36c ffff | 4883 ec30 | 4c89 5424 | 2848 894c | 2420 498b | cb49 8bd7 

  0x00000214a6421cb4: ;   {runtime_call}
  0x00000214a6421cb4: 48b8 7049 | 9fbc f97f | 0000 ffd0 | 488b 4c24 | 204c 8b54 | 2428 c5f8 | 7748 83c4 | 30e9 9d6c 
  0x00000214a6421cd4: ffff 458b | 0149 c1e0 | 0349 83f8 | 000f 84ed | 6cff ff4d | 8b5f 384d | 85db 0f84 | 1400 0000 
  0x00000214a6421cf4: 4983 eb08 | 4d89 5f38 | 4d03 5f40 | 4d89 03e9 | cc6c ffff | 4883 ec40 | 4c89 5424 | 384c 894c 
  0x00000214a6421d14: 2430 4889 | 4c24 2849 | 8bc8 498b 

  0x00000214a6421d20: ;   {runtime_call}
  0x00000214a6421d20: d748 b890 | 499f bcf9 | 7f00 00ff | d048 8b4c | 2428 4c8b | 4c24 304c | 8b54 2438 | c5f8 7748 
  0x00000214a6421d40: 83c4 40e9 | 8c6c ffff | f083 4424 | c000 4180 | 3b00 0f84 | b46c ffff | 41c6 0300 | 4d8b 4750 
  0x00000214a6421d60: 4d85 c00f | 8414 0000 | 0049 83e8 | 084d 8947 | 504d 0347 | 584d 8918 | e98f 6cff | ff48 83ec 
  0x00000214a6421d80: 304c 8954 | 2428 498b | cb49 8bd7 

  0x00000214a6421d8c: ;   {runtime_call}
  0x00000214a6421d8c: 48b8 7049 | 9fbc f97f | 0000 ffd0 | 4c8b 5424 | 28c5 f877 | 4883 c430 | e963 6cff | ff41 8b09 
  0x00000214a6421dac: 48c1 e103 | 4883 f900 | 0f84 c26c | ffff 498b | 5f38 4885 | db0f 8414 | 0000 0048 | 83eb 0849 
  0x00000214a6421dcc: 895f 3849 | 035f 4048 | 890b e9a1 | 6cff ff48 | 83ec 604c | 8954 2458 | 4c89 5c24 | 504c 8944 
  0x00000214a6421dec: 2448 4c89 | 4c24 4048 | 897c 2438 | 4889 5424 | 3048 8944 | 2428 498b 

  0x00000214a6421e04: ;   {runtime_call}
  0x00000214a6421e04: d748 b890 | 499f bcf9 | 7f00 00ff | d048 8b44 | 2428 488b | 5424 3048 | 8b7c 2438 | 4c8b 4c24 
  0x00000214a6421e24: 404c 8b44 | 2448 4c8b | 5c24 504c | 8b54 2458 | c5f8 7748 | 83c4 60e9 | 3c6c ffff | f083 4424 
  0x00000214a6421e44: c000 803b | 000f 8464 | 6cff ffc6 | 0300 498b | 4f50 4885 | c90f 8414 | 0000 0048 | 83e9 0849 
  0x00000214a6421e64: 894f 5049 | 034f 5848 | 8919 e940 | 6cff ff48 | 83ec 504c | 8954 2448 | 4c89 5c24 | 404c 8944 
  0x00000214a6421e84: 2438 4889 | 5424 3048 | 8944 2428 | 488b cb49 

  0x00000214a6421e94: ;   {runtime_call}
  0x00000214a6421e94: 8bd7 48b8 | 7049 9fbc | f97f 0000 | ffd0 488b | 4424 2848 | 8b54 2430 | 4c8b 4424 | 384c 8b5c 
  0x00000214a6421eb4: 2440 4c8b | 5424 48c5 | f877 4883 | c450 e9ec | 6bff ff45 | 8b01 49c1 | e003 4983 | f800 0f84 
  0x00000214a6421ed4: ed6b ffff | 4d8b 5f38 | 4d85 db0f | 8414 0000 | 0049 83eb | 084d 895f | 384d 035f | 404d 8903 
  0x00000214a6421ef4: e9cc 6bff | ff48 83ec | 404c 8954 | 2438 4c89 | 4c24 3048 | 8944 2428 | 498b c849 

  0x00000214a6421f10: ;   {runtime_call}
  0x00000214a6421f10: 8bd7 48b8 | 9049 9fbc | f97f 0000 | ffd0 488b | 4424 284c | 8b4c 2430 | 4c8b 5424 | 38c5 f877 
  0x00000214a6421f30: 4883 c440 | e98c 6bff | ff45 8b01 | 49c1 e003 | 4983 f800 | 0f84 066c | ffff 4d8b | 5f38 4d85 
  0x00000214a6421f50: db0f 8414 | 0000 0049 | 83eb 084d | 895f 384d | 035f 404d | 8903 e9e5 | 6bff ff48 | 83ec 404c 
  0x00000214a6421f70: 8954 2438 | 4c89 4c24 | 3048 8944 | 2428 498b | c849 8bd7 

  0x00000214a6421f84: ;   {runtime_call}
  0x00000214a6421f84: 48b8 9049 | 9fbc f97f | 0000 ffd0 | 488b 4424 | 284c 8b4c | 2430 4c8b | 5424 38c5 | f877 4883 
  0x00000214a6421fa4: c440 e9a5 | 6bff fff0 | 8344 24c0 | 0041 803b | 000f 84cd | 6bff ff41 | c603 004d | 8b47 504d 
  0x00000214a6421fc4: 85c0 0f84 | 1400 0000 | 4983 e808 | 4d89 4750 | 4d03 4758 | 4d89 18e9 | a86b ffff | 4883 ec30 
  0x00000214a6421fe4: 4c89 5424 | 2849 8bcb 

  0x00000214a6421fec: ;   {runtime_call}
  0x00000214a6421fec: 498b d748 | b870 499f | bcf9 7f00 | 00ff d04c | 8b54 2428 | c5f8 7748 | 83c4 30e9 | 7c6b ffff 
  0x00000214a642200c: f083 4424 | c000 4180 | 3800 0f84 | 326c ffff | 41c6 0000 | 4d8b 5750 | 4d85 d20f | 8414 0000 
  0x00000214a642202c: 0049 83ea | 084d 8957 | 504d 0357 | 584d 8902 | e90d 6cff | ff48 83ec | 2049 8bc8 

  0x00000214a6422048: ;   {runtime_call}
  0x00000214a6422048: 498b d748 | b870 499f | bcf9 7f00 | 00ff d0c5 | f877 4883 | c420 e9eb | 6bff ff45 | 8b03 49c1 
  0x00000214a6422068: e003 4983 | f800 0f84 | 5f6c ffff | 4d8b 4f38 | 4d85 c90f | 8414 0000 | 0049 83e9 | 084d 894f 
  0x00000214a6422088: 384d 034f | 404d 8901 | e93e 6cff | ff48 83ec | 404c 8954 | 2438 4c89 | 5c24 3048 | 8944 2428 
  0x00000214a64220a8: 498b c849 

  0x00000214a64220ac: ;   {runtime_call}
  0x00000214a64220ac: 8bd7 48b8 | 9049 9fbc | f97f 0000 | ffd0 488b | 4424 284c | 8b5c 2430 | 4c8b 5424 | 38c5 f877 
  0x00000214a64220cc: 4883 c440 | e9fe 6bff | fff0 8344 | 24c0 0041 | 8039 000f | 8430 6cff | ff41 c601 | 004d 8b47 
  0x00000214a64220ec: 504d 85c0 | 0f84 1400 | 0000 4983 | e808 4d89 | 4750 4d03 | 4758 4d89 | 08e9 0b6c | ffff 4883 
  0x00000214a642210c: ec30 4c89 | 5424 2849 | 8bc9 498b 

  0x00000214a6422118: ;   {runtime_call}
  0x00000214a6422118: d748 b870 | 499f bcf9 | 7f00 00ff | d04c 8b54 | 2428 c5f8 | 7748 83c4 | 30e9 df6b | ffff 458b 
  0x00000214a6422138: 0849 c1e1 | 0349 83f9 | 000f 84fa | 6bff ff4d | 8b57 384d | 85d2 0f84 | 1400 0000 | 4983 ea08 
  0x00000214a6422158: 4d89 5738 | 4d03 5740 | 4d89 0ae9 | d96b ffff | 4883 ec40 | 4c89 5c24 | 384c 8944 | 2430 4889 
  0x00000214a6422178: 4c24 2849 | 8bc9 498b 

  0x00000214a6422180: ;   {runtime_call}
  0x00000214a6422180: d748 b890 | 499f bcf9 | 7f00 00ff | d048 8b4c | 2428 4c8b | 4424 304c | 8b5c 2438 | c5f8 7748 
  0x00000214a64221a0: 83c4 40e9 | 996b ffff | f083 4424 | c000 4180 | 3a00 0f84 | c16b ffff | 41c6 0200 | 4d8b 4f50 
  0x00000214a64221c0: 4d85 c90f | 8414 0000 | 0049 83e9 | 084d 894f | 504d 034f | 584d 8911 | e99c 6bff | ff48 83ec 
  0x00000214a64221e0: 304c 895c | 2428 4889 | 4c24 2049 | 8bca 498b 

  0x00000214a64221f0: ;   {runtime_call}
  0x00000214a64221f0: d748 b870 | 499f bcf9 | 7f00 00ff | d048 8b4c | 2420 4c8b | 5c24 28c5 | f877 4883 | c430 e966 
  0x00000214a6422210: 6bff ff8b | 3948 c1e7 | 0348 83ff | 000f 84cd | 6bff ff49 | 8b5f 3848 | 85db 0f84 | 1400 0000 
  0x00000214a6422230: 4883 eb08 | 4989 5f38 | 4903 5f40 | 4889 3be9 | ac6b ffff | 4883 ec60 | 4c89 5424 | 584c 895c 
  0x00000214a6422250: 2450 4c89 | 4424 484c | 894c 2440 | 4889 4c24 | 3848 8954 | 2430 4889 | 7424 2848 | 8bcf 498b 
  0x00000214a6422270: ;   {runtime_call}
  0x00000214a6422270: d748 b890 | 499f bcf9 | 7f00 00ff | d048 8b74 | 2428 488b | 5424 3048 | 8b4c 2438 | 4c8b 4c24 
  0x00000214a6422290: 404c 8b44 | 2448 4c8b | 5c24 504c | 8b54 2458 | c5f8 7748 | 83c4 60e9 | 446b ffff | f083 4424 
  0x00000214a64222b0: c000 803b | 000f 846b | 6bff ffc6 | 0300 498b | 7f50 4885 | ff0f 8414 | 0000 0048 | 83ef 0849 
  0x00000214a64222d0: 897f 5049 | 037f 5848 | 891f e947 | 6bff ff48 | 83ec 504c | 8954 2448 | 4c89 5c24 | 404c 8944 
  0x00000214a64222f0: 2438 4c89 | 4c24 3048 | 8974 2428 | 488b cb49 

  0x00000214a6422300: ;   {runtime_call}
  0x00000214a6422300: 8bd7 48b8 | 7049 9fbc | f97f 0000 | ffd0 488b | 7424 284c | 8b4c 2430 | 4c8b 4424 | 384c 8b5c 
  0x00000214a6422320: 2440 4c8b | 5424 48c5 | f877 4883 | c450 e9f3 | 6aff ff45 | 8b08 49c1 | e103 4983 | f900 0f84 
  0x00000214a6422340: f66a ffff | 498b 4f38 | 4885 c90f | 8414 0000 | 0048 83e9 | 0849 894f | 3849 034f | 404c 8909 
  0x00000214a6422360: e9d5 6aff | ff48 83ec | 404c 8954 | 2438 4c89 | 5c24 304c | 8944 2428 | 4889 5424 | 2049 8bc9 
  0x00000214a6422380: ;   {runtime_call}
  0x00000214a6422380: 498b d748 | b890 499f | bcf9 7f00 | 00ff d048 | 8b54 2420 | 4c8b 4424 | 284c 8b5c | 2430 4c8b 
  0x00000214a64223a0: 5424 38c5 | f877 4883 | c440 e98b | 6aff fff0 | 8344 24c0 | 0080 3900 | 0f84 bd6a | ffff c601 
  0x00000214a64223c0: 004d 8b4f | 504d 85c9 | 0f84 1400 | 0000 4983 | e908 4d89 | 4f50 4d03 | 4f58 4989 | 09e9 996a 
  0x00000214a64223e0: ffff 4883 | ec30 4c89 | 5424 284c | 895c 2420 

  0x00000214a64223f0: ;   {runtime_call}
  0x00000214a64223f0: 498b d748 | b870 499f | bcf9 7f00 | 00ff d04c | 8b5c 2420 | 4c8b 5424 | 28c5 f877 | 4883 c430 
  0x00000214a6422410: e966 6aff | ff45 8b19 | 49c1 e303 | 4983 fb00 | 0f84 ba6a | ffff 4d8b | 4738 4d85 | c00f 8414 
  0x00000214a6422430: 0000 0049 | 83e8 084d | 8947 384d | 0347 404d | 8918 e999 | 6aff ff48 | 83ec 404c | 8954 2438 
  0x00000214a6422450: 4c89 4c24 | 3048 894c | 2428 498b | cb49 8bd7 

  0x00000214a6422460: ;   {runtime_call}
  0x00000214a6422460: 48b8 9049 | 9fbc f97f | 0000 ffd0 | 488b 4c24 | 284c 8b4c | 2430 4c8b | 5424 38c5 | f877 4883 
  0x00000214a6422480: c440 e959 | 6aff fff0 | 8344 24c0 | 0041 8038 | 000f 8481 | 6aff ff41 | c600 004d | 8b5f 504d 
  0x00000214a64224a0: 85db 0f84 | 1400 0000 | 4983 eb08 | 4d89 5f50 | 4d03 5f58 | 4d89 03e9 | 5c6a ffff | 4883 ec30 
  0x00000214a64224c0: 4c89 5424 | 2849 8bc8 

  0x00000214a64224c8: ;   {runtime_call}
  0x00000214a64224c8: 498b d748 | b870 499f | bcf9 7f00 | 00ff d04c | 8b54 2428 | c5f8 7748 | 83c4 30e9 | 306a ffff 
  0x00000214a64224e8: 448b 1b49 | c1e3 0349 | 83fb 000f | 849e 6aff | ff4d 8b47 | 384d 85c0 | 0f84 1400 | 0000 4983 
  0x00000214a6422508: e808 4d89 | 4738 4d03 | 4740 4d89 | 18e9 7d6a | ffff 4883 | ec50 4c89 | 5424 484c | 894c 2440 
  0x00000214a6422528: 4889 4c24 | 3848 897c | 2430 4889 | 5424 2848 | 8974 2420 | 498b cb49 

  0x00000214a6422540: ;   {runtime_call}
  0x00000214a6422540: 8bd7 48b8 | 9049 9fbc | f97f 0000 | ffd0 488b | 7424 2048 | 8b54 2428 | 488b 7c24 | 3048 8b4c 
  0x00000214a6422560: 2438 4c8b | 4c24 404c | 8b54 2448 | c5f8 7748 | 83c4 50e9 | 1f6a ffff | f083 4424 | c000 4180 
  0x00000214a6422580: 3800 0f84 | 476a ffff | 41c6 0000 | 4d8b 5f50 | 4d85 db0f | 8414 0000 | 0049 83eb | 084d 895f 
  0x00000214a64225a0: 504d 035f | 584d 8903 | e922 6aff | ff48 83ec | 504c 8954 | 2448 4c89 | 4c24 4048 | 894c 2438 
  0x00000214a64225c0: 4889 7c24 | 3048 8954 | 2428 498b | c849 8bd7 

  0x00000214a64225d0: ;   {runtime_call}
  0x00000214a64225d0: 48b8 7049 | 9fbc f97f | 0000 ffd0 | 488b 5424 | 2848 8b7c | 2430 488b | 4c24 384c | 8b4c 2440 
  0x00000214a64225f0: 4c8b 5424 | 48c5 f877 | 4883 c450 | e9ce 69ff | ff44 8b09 | 49c1 e103 | 4983 f900 | 0f84 cf69 
  0x00000214a6422610: ffff 4d8b | 5f38 4d85 | db0f 8414 | 0000 0049 | 83eb 084d | 895f 384d | 035f 404d | 890b e9ae 
  0x00000214a6422630: 69ff ff48 | 83ec 404c | 8954 2438 | 4889 4c24 | 3048 8954 | 2428 498b | c949 8bd7 

  0x00000214a642264c: ;   {runtime_call}
  0x00000214a642264c: 48b8 9049 | 9fbc f97f | 0000 ffd0 | 488b 5424 | 2848 8b4c | 2430 4c8b | 5424 38c5 | f877 4883 
  0x00000214a642266c: c440 e96e | 69ff ff45 | 8b08 49c1 | e103 4983 | f900 0f84 | cc69 ffff | 4d8b 5f38 | 4d85 db0f 
  0x00000214a642268c: 8414 0000 | 0049 83eb | 084d 895f | 384d 035f | 404d 890b | e9ab 69ff | ff48 83ec | 404c 8954 
  0x00000214a64226ac: 2438 4c89 | 4424 3048 | 894c 2428 | 498b c949 

  0x00000214a64226bc: ;   {runtime_call}
  0x00000214a64226bc: 8bd7 48b8 | 9049 9fbc | f97f 0000 | ffd0 488b | 4c24 284c | 8b44 2430 | 4c8b 5424 | 38c5 f877 
  0x00000214a64226dc: 4883 c440 | e96b 69ff | fff0 8344 | 24c0 0041 | 803b 000f | 8493 69ff | ff41 c603 | 004d 8b4f 
  0x00000214a64226fc: 504d 85c9 | 0f84 1400 | 0000 4983 | e908 4d89 | 4f50 4d03 | 4f58 4d89 | 19e9 6e69 | ffff 4883 
  0x00000214a642271c: ec30 4c89 | 5424 2849 | 8bcb 498b 

  0x00000214a6422728: ;   {runtime_call}
  0x00000214a6422728: d748 b870 | 499f bcf9 | 7f00 00ff | d04c 8b54 | 2428 c5f8 | 7748 83c4 | 30e9 4269 | ffff 458b 
  0x00000214a6422748: 0149 c1e0 | 0349 83f8 | 000f 8493 | 69ff ff4d | 8b5f 384d | 85db 0f84 | 1400 0000 | 4983 eb08 
  0x00000214a6422768: 4d89 5f38 | 4d03 5f40 | 4d89 03e9 | 7269 ffff | 4883 ec40 | 4c89 5424 | 384c 894c | 2430 4889 
  0x00000214a6422788: 4424 2849 | 8bc8 498b 

  0x00000214a6422790: ;   {runtime_call}
  0x00000214a6422790: d748 b890 | 499f bcf9 | 7f00 00ff | d048 8b44 | 2428 4c8b | 4c24 304c | 8b54 2438 | c5f8 7748 
  0x00000214a64227b0: 83c4 40e9 | 3269 ffff | f083 4424 | c000 4180 | 3b00 0f84 | 5a69 ffff | 41c6 0300 | 4d8b 4750 
  0x00000214a64227d0: 4d85 c00f | 8414 0000 | 0049 83e8 | 084d 8947 | 504d 0347 | 584d 8918 | e935 69ff | ff48 83ec 
  0x00000214a64227f0: 304c 8954 | 2428 4889 | 4424 2049 | 8bcb 498b 

  0x00000214a6422800: ;   {runtime_call}
  0x00000214a6422800: d748 b870 | 499f bcf9 | 7f00 00ff | d048 8b44 | 2420 4c8b | 5424 28c5 | f877 4883 | c430 e9ff 
  0x00000214a6422820: 68ff ff45 | 8b18 49c1 | e303 4983 | fb00 0f84 | 6e69 ffff | 4d8b 5738 | 4d85 d20f | 8414 0000 
  0x00000214a6422840: 0049 83ea | 084d 8957 | 384d 0357 | 404d 891a | e94d 69ff | ff48 83ec | 604c 8944 | 2458 4c89 
  0x00000214a6422860: 4c24 5048 | 894c 2448 | 4889 7c24 | 4048 8954 | 2438 4889 | 7424 3048 | 8944 2428 | 498b cb49 
  0x00000214a6422880: ;   {runtime_call}
  0x00000214a6422880: 8bd7 48b8 | 9049 9fbc | f97f 0000 | ffd0 488b | 4424 2848 | 8b74 2430 | 488b 5424 | 3848 8b7c 
  0x00000214a64228a0: 2440 488b | 4c24 484c | 8b4c 2450 | 4c8b 4424 | 58c5 f877 | 4883 c460 | e9e5 68ff | fff0 8344 
  0x00000214a64228c0: 24c0 0041 | 803a 000f | 8417 69ff | ff41 c602 | 004d 8b5f | 504d 85db | 0f84 1400 | 0000 4983 
  0x00000214a64228e0: eb08 4d89 | 5f50 4d03 | 5f58 4d89 | 13e9 f268 | ffff 4883 | ec50 4c89 | 4c24 4848 | 897c 2440 
  0x00000214a6422900: 4889 5424 | 3848 8974 | 2430 4889 | 4424 2849 | 8bca 498b 

  0x00000214a6422914: ;   {runtime_call}
  0x00000214a6422914: d748 b870 | 499f bcf9 | 7f00 00ff | d048 8b44 | 2428 488b | 7424 3048 | 8b54 2438 | 488b 7c24 
  0x00000214a6422934: 404c 8b4c | 2448 c5f8 | 7748 83c4 | 50e9 9e68 | ffff 418b | 2a48 c1e5 | 0348 83fd | 000f 84a5 
  0x00000214a6422954: 68ff ff4d | 8b4f 384d | 85c9 0f84 | 1400 0000 | 4983 e908 | 4d89 4f38 | 4d03 4f40 | 4989 29e9 
  0x00000214a6422974: 8468 ffff | 4883 ec60 | 4c89 5424 | 584c 895c | 2450 4c89 | 4424 4848 | 897c 2440 | 4889 5424 
  0x00000214a6422994: 3848 8974 | 2430 4889 | 4424 2848 | 8bcd 498b 

  0x00000214a64229a4: ;   {runtime_call}
  0x00000214a64229a4: d748 b890 | 499f bcf9 | 7f00 00ff | d048 8b44 | 2428 488b | 7424 3048 | 8b54 2438 | 488b 7c24 
  0x00000214a64229c4: 404c 8b44 | 2448 4c8b | 5c24 504c | 8b54 2458 | c5f8 7748 | 83c4 60e9 | 1c68 ffff | 8b1e 48c1 
  0x00000214a64229e4: e303 4883 | fb00 0f84 | 2168 ffff | 4d8b 5738 | 4d85 d20f | 8414 0000 | 0049 83ea | 084d 8957 
  0x00000214a6422a04: 384d 0357 | 4049 891a | e900 68ff | ff48 83ec | 4048 897c | 2438 4889 | 5424 3048 | 8974 2428 
  0x00000214a6422a24: 4889 4424 | 2048 8bcb 

  0x00000214a6422a2c: ;   {runtime_call}
  0x00000214a6422a2c: 498b d748 | b890 499f | bcf9 7f00 | 00ff d048 | 8b44 2420 | 488b 7424 | 2848 8b54 | 2430 488b 
  0x00000214a6422a4c: 7c24 38c5 | f877 4883 | c440 e9b6 | 67ff fff0 | 8344 24c0 | 0041 803a | 000f 84dd | 67ff ff41 
  0x00000214a6422a6c: c602 0049 | 8b5f 5048 | 85db 0f84 | 1400 0000 | 4883 eb08 | 4989 5f50 | 4903 5f58 | 4c89 13e9 
  0x00000214a6422a8c: b867 ffff | 4883 ec30 | 4889 7c24 | 2848 8954 | 2420 498b | ca49 8bd7 

  0x00000214a6422aa4: ;   {runtime_call}
  0x00000214a6422aa4: 48b8 7049 | 9fbc f97f | 0000 ffd0 | 488b 5424 | 2048 8b7c | 2428 c5f8 | 7748 83c4 | 30e9 8267 
  0x00000214a6422ac4: ffff 458b | 0349 c1e0 | 0349 83f8 | 000f 84bf | 67ff ff4d | 8b57 384d | 85d2 0f84 | 1400 0000 
  0x00000214a6422ae4: 4983 ea08 | 4d89 5738 | 4d03 5740 | 4d89 02e9 | 9e67 ffff | 4883 ec40 | 4c89 5c24 | 384c 894c 
  0x00000214a6422b04: 2430 4889 | 5424 2849 | 8bc8 498b 

  0x00000214a6422b10: ;   {runtime_call}
  0x00000214a6422b10: d748 b890 | 499f bcf9 | 7f00 00ff | d048 8b54 | 2428 4c8b | 4c24 304c | 8b5c 2438 | c5f8 7748 
  0x00000214a6422b30: 83c4 40e9 | 5e67 ffff | f083 4424 | c000 4180 | 3a00 0f84 | 8667 ffff | 41c6 0200 | 4d8b 4750 
  0x00000214a6422b50: 4d85 c00f | 8414 0000 | 0049 83e8 | 084d 8947 | 504d 0347 | 584d 8910 | e961 67ff | ff48 83ec 
  0x00000214a6422b70: 304c 894c | 2428 4889 | 5424 2049 | 8bca 498b 

  0x00000214a6422b80: ;   {runtime_call}
  0x00000214a6422b80: d748 b870 | 499f bcf9 | 7f00 00ff | d048 8b54 | 2420 4c8b | 4c24 28c5 | f877 4883 | c430 e92b 
  0x00000214a6422ba0: 67ff ff45 | 8b02 49c1 | e003 4983 | f800 0f84 | 4267 ffff | 4d8b 5f38 | 4d85 db0f | 8414 0000 
  0x00000214a6422bc0: 0049 83eb | 084d 895f | 384d 035f | 404d 8903 | e921 67ff | ff48 83ec | 304c 8954 | 2428 4889 
  0x00000214a6422be0: 4424 2049 | 8bc8 498b 

  0x00000214a6422be8: ;   {runtime_call}
  0x00000214a6422be8: d748 b890 | 499f bcf9 | 7f00 00ff | d048 8b44 | 2420 4c8b | 5424 28c5 | f877 4883 | c430 e9eb 
  0x00000214a6422c08: 66ff fff0 | 8344 24c0 | 0041 803b | 000f 841d | 67ff ff41 | c603 004d | 8b47 504d | 85c0 0f84 
  0x00000214a6422c28: 1400 0000 | 4983 e808 | 4d89 4750 | 4d03 4758 | 4d89 18e9 | f866 ffff | 4883 ec20 | 498b cb49 
  0x00000214a6422c48: ;   {runtime_call}
  0x00000214a6422c48: 8bd7 48b8 | 7049 9fbc | f97f 0000 | ffd0 c5f8 | 7748 83c4 | 20e9 d666 | ffff 458b | 1949 c1e3 
  0x00000214a6422c68: 0349 83fb | 000f 84ea | 66ff ff4d | 8b47 384d | 85c0 0f84 | 1400 0000 | 4983 e808 | 4d89 4738 
  0x00000214a6422c88: 4d03 4740 | 4d89 18e9 | c966 ffff | 4883 ec40 | 4c89 5424 | 384c 894c | 2430 4889 | 4c24 2848 
  0x00000214a6422ca8: 8954 2420 | 498b cb49 

  0x00000214a6422cb0: ;   {runtime_call}
  0x00000214a6422cb0: 8bd7 48b8 | 9049 9fbc | f97f 0000 | ffd0 488b | 5424 2048 | 8b4c 2428 | 4c8b 4c24 | 304c 8b54 
  0x00000214a6422cd0: 2438 c5f8 | 7748 83c4 | 40e9 7f66 | ffff f083 | 4424 c000 | 4180 3800 | 0f84 b166 | ffff 41c6 
  0x00000214a6422cf0: 0000 4d8b | 5f50 4d85 | db0f 8414 | 0000 0049 | 83eb 084d | 895f 504d | 035f 584d | 8903 e98c 
  0x00000214a6422d10: 66ff ff48 | 83ec 304c | 8954 2428 | 4889 4c24 | 2049 8bc8 

  0x00000214a6422d24: ;   {runtime_call}
  0x00000214a6422d24: 498b d748 | b870 499f | bcf9 7f00 | 00ff d048 | 8b4c 2420 | 4c8b 5424 | 28c5 f877 | 4883 c430 
  0x00000214a6422d44: e956 66ff | ff45 8b31 | 49c1 e603 | 4983 fe00 | 0f84 2e67 | ffff 4d8b | 5738 4d85 | d20f 8414 
  0x00000214a6422d64: 0000 0049 | 83ea 084d | 8957 384d | 0357 404d | 8932 e90d | 67ff ff48 | 83ec 604c | 895c 2458 
  0x00000214a6422d84: 4c89 4424 | 504c 894c | 2448 4889 | 4c24 4048 | 897c 2438 | 4889 5424 | 3048 8974 | 2428 4889 
  0x00000214a6422da4: 4424 2049 | 8bce 498b 

  0x00000214a6422dac: ;   {runtime_call}
  0x00000214a6422dac: d748 b890 | 499f bcf9 | 7f00 00ff | d048 8b44 | 2420 488b | 7424 2848 | 8b54 2430 | 488b 7c24 
  0x00000214a6422dcc: 3848 8b4c | 2440 4c8b | 4c24 484c | 8b44 2450 | 4c8b 5c24 | 58c5 f877 | 4883 c460 | e99b 66ff 
  0x00000214a6422dec: fff0 8344 | 24c0 0041 | 803a 000f | 84cd 66ff | ff41 c602 | 004d 8b77 | 504d 85f6 | 0f84 1400 
  0x00000214a6422e0c: 0000 4983 | ee08 4d89 | 7750 4d03 | 7758 4d89 | 16e9 a866 | ffff 4883 | ec60 4c89 | 5c24 584c 
  0x00000214a6422e2c: 8944 2450 | 4889 4c24 | 4848 897c | 2440 4889 | 5424 3848 | 8974 2430 | 4889 4424 | 2849 8bca 
  0x00000214a6422e4c: ;   {runtime_call}
  0x00000214a6422e4c: 498b d748 | b870 499f | bcf9 7f00 | 00ff d048 | 8b44 2428 | 488b 7424 | 3048 8b54 | 2438 488b 
  0x00000214a6422e6c: 7c24 4048 | 8b4c 2448 | 4c8b 4424 | 504c 8b5c | 2458 c5f8 | 7748 83c4 | 60e9 4066 | ffff 458b 
  0x00000214a6422e8c: 1849 c1e3 | 0349 83fb | 000f 844c | 66ff ff49 | 8b7f 3848 | 85ff 0f84 | 1400 0000 | 4883 ef08 
  0x00000214a6422eac: 4989 7f38 | 4903 7f40 | 4c89 1fe9 | 2b66 ffff | 4883 ec50 | 4c89 4424 | 4848 894c | 2440 4889 
  0x00000214a6422ecc: 5424 3848 | 8974 2430 | 4889 4424 | 2849 8bcb 

  0x00000214a6422edc: ;   {runtime_call}
  0x00000214a6422edc: 498b d748 | b890 499f | bcf9 7f00 | 00ff d048 | 8b44 2428 | 488b 7424 | 3048 8b54 | 2438 488b 
  0x00000214a6422efc: 4c24 404c | 8b44 2448 | c5f8 7748 | 83c4 50e9 | d765 ffff | f083 4424 | c000 803f | 000f 84ff 
  0x00000214a6422f1c: 65ff ffc6 | 0700 4d8b | 5f50 4d85 | db0f 8414 | 0000 0049 | 83eb 084d | 895f 504d | 035f 5849 
  0x00000214a6422f3c: 893b e9db | 65ff ff48 | 83ec 4048 | 894c 2438 | 4889 5424 | 3048 8974 | 2428 488b | cf49 8bd7 
  0x00000214a6422f5c: ;   {runtime_call}
  0x00000214a6422f5c: 48b8 7049 | 9fbc f97f | 0000 ffd0 | 488b 7424 | 2848 8b54 | 2430 488b | 4c24 38c5 | f877 4883 
  0x00000214a6422f7c: c440 e99b | 65ff ff8b | 3148 c1e6 | 0348 83fe | 000f 84a7 | 65ff ff49 | 8b57 3848 | 85d2 0f84 
  0x00000214a6422f9c: 1400 0000 | 4883 ea08 | 4989 5738 | 4903 5740 | 4889 32e9 | 8665 ffff | 4883 ec30 | 4c89 5c24 
  0x00000214a6422fbc: 2848 894c | 2420 488b | ce49 8bd7 

  0x00000214a6422fc8: ;   {runtime_call}
  0x00000214a6422fc8: 48b8 9049 | 9fbc f97f | 0000 ffd0 | 488b 4c24 | 204c 8b5c | 2428 c5f8 | 7748 83c4 | 30e9 5065 
  0x00000214a6422fe8: ffff f083 | 4424 c000 | 803a 000f | 8477 65ff | ffc6 0200 | 498b 7750 | 4885 f60f | 8414 0000 
  0x00000214a6423008: 0048 83ee | 0849 8977 | 5049 0377 | 5848 8916 | e953 65ff | ff48 83ec | 2048 8bca 

  0x00000214a6423024: ;   {runtime_call}
  0x00000214a6423024: 498b d748 | b870 499f | bcf9 7f00 | 00ff d0c5 | f877 4883 | c420 e931 | 65ff ff44 | 8b45 0049 
  0x00000214a6423044: c1e0 0349 | 83f8 000f | 843e 65ff | ff4d 8b6f | 384d 85ed | 0f84 1500 | 0000 4983 | ed08 4d89 
  0x00000214a6423064: 6f38 4d03 | 6f40 4d89 | 4500 e91c | 65ff ff48 | 83ec 304c | 8954 2428 | 4c89 5c24 | 2049 8bc8 
  0x00000214a6423084: ;   {runtime_call}
  0x00000214a6423084: 498b d748 | b890 499f | bcf9 7f00 | 00ff d04c | 8b5c 2420 | 4c8b 5424 | 28c5 f877 | 4883 c430 
  0x00000214a64230a4: e9e6 64ff | fff0 8344 | 24c0 0041 | 807d 0000 | 0f84 0f65 | ffff 41c6 | 4500 004d | 8b47 504d 
  0x00000214a64230c4: 85c0 0f84 | 1400 0000 | 4983 e808 | 4d89 4750 | 4d03 4758 | 4d89 28e9 | e964 ffff | 4883 ec30 
  0x00000214a64230e4: 4c89 5424 | 2849 8bcd 

  0x00000214a64230ec: ;   {runtime_call}
  0x00000214a64230ec: 498b d748 | b870 499f | bcf9 7f00 | 00ff d04c | 8b54 2428 | c5f8 7748 | 83c4 30e9 | bd64 ffff 
  0x00000214a642310c: 458b 1849 | c1e3 0349 | 83fb 000f | 8413 65ff | ff4d 8b57 | 384d 85d2 | 0f84 1400 | 0000 4983 
  0x00000214a642312c: ea08 4d89 | 5738 4d03 | 5740 4d89 | 1ae9 f264 | ffff 4883 | ec40 4c89 | 4424 384c | 894c 2430 
  0x00000214a642314c: 4889 4424 | 2849 8bcb 

  0x00000214a6423154: ;   {runtime_call}
  0x00000214a6423154: 498b d748 | b890 499f | bcf9 7f00 | 00ff d048 | 8b44 2428 | 4c8b 4c24 | 304c 8b44 | 2438 c5f8 
  0x00000214a6423174: 7748 83c4 | 40e9 b264 | ffff f083 | 4424 c000 | 4180 3a00 | 0f84 da64 | ffff 41c6 | 0200 4d8b 
  0x00000214a6423194: 5f50 4d85 | db0f 8414 | 0000 0049 | 83eb 084d | 895f 504d | 035f 584d | 8913 e9b5 | 64ff ff48 
  0x00000214a64231b4: 83ec 304c | 894c 2428 | 498b ca49 

  0x00000214a64231c0: ;   {runtime_call}
  0x00000214a64231c0: 8bd7 48b8 | 7049 9fbc | f97f 0000 | ffd0 4c8b | 4c24 28c5 | f877 4883 | c430 e989 | 64ff ff45 
  0x00000214a64231e0: 8b01 49c1 | e003 4983 | f800 0f84 | 0765 ffff | 4d8b 5f38 | 4d85 db0f | 8414 0000 | 0049 83eb 
  0x00000214a6423200: 084d 895f | 384d 035f | 404d 8903 | e9e6 64ff | ff48 83ec | 404c 8954 | 2438 4c89 | 4c24 3048 
  0x00000214a6423220: 894c 2428 | 4889 4424 | 2049 8bc8 

  0x00000214a642322c: ;   {runtime_call}
  0x00000214a642322c: 498b d748 | b890 499f | bcf9 7f00 | 00ff d048 | 8b44 2420 | 488b 4c24 | 284c 8b4c | 2430 4c8b 
  0x00000214a642324c: 5424 38c5 | f877 4883 | c440 e99c | 64ff fff0 | 8344 24c0 | 0041 803b | 000f 84c4 | 64ff ff41 
  0x00000214a642326c: c603 004d | 8b47 504d | 85c0 0f84 | 1400 0000 | 4983 e808 | 4d89 4750 | 4d03 4758 | 4d89 18e9 
  0x00000214a642328c: 9f64 ffff | 4883 ec30 | 4c89 5424 | 2848 8944 | 2420 498b | cb49 8bd7 

  0x00000214a64232a4: ;   {runtime_call}
  0x00000214a64232a4: 48b8 7049 | 9fbc f97f | 0000 ffd0 | 488b 4424 | 204c 8b54 | 2428 c5f8 | 7748 83c4 | 30e9 6964 
  0x00000214a64232c4: ffff 458b | 0349 c1e0 | 0349 83f8 | 000f 84d1 | 64ff ff4d | 8b57 384d | 85d2 0f84 | 1400 0000 
  0x00000214a64232e4: 4983 ea08 | 4d89 5738 | 4d03 5740 | 4d89 02e9 | b064 ffff | 4883 ec40 | 4c89 5c24 | 3848 8954 
  0x00000214a6423304: 2430 4889 | 4424 2849 | 8bc8 498b 

  0x00000214a6423310: ;   {runtime_call}
  0x00000214a6423310: d748 b890 | 499f bcf9 | 7f00 00ff | d048 8b44 | 2428 488b | 5424 304c | 8b5c 2438 | c5f8 7748 
  0x00000214a6423330: 83c4 40e9 | 7064 ffff | f083 4424 | c000 4180 | 3a00 0f84 | 9864 ffff | 41c6 0200 | 4d8b 4750 
  0x00000214a6423350: 4d85 c00f | 8414 0000 | 0049 83e8 | 084d 8947 | 504d 0347 | 584d 8910 | e973 64ff | ff48 83ec 
  0x00000214a6423370: 3048 8954 | 2428 498b | ca49 8bd7 

  0x00000214a642337c: ;   {runtime_call}
  0x00000214a642337c: 48b8 7049 | 9fbc f97f | 0000 ffd0 | 488b 5424 | 28c5 f877 | 4883 c430 | e947 64ff | ff45 8b02 
  0x00000214a642339c: 49c1 e003 | 4983 f800 | 0f84 4166 | ffff 4d8b | 5f38 4d85 | db0f 8414 | 0000 0049 | 83eb 084d 
  0x00000214a64233bc: 895f 384d | 035f 404d | 8903 e920 | 66ff ff48 | 83ec 304c | 8954 2428 | 4889 4424 | 2049 8bc8 
  0x00000214a64233dc: ;   {runtime_call}
  0x00000214a64233dc: 498b d748 | b890 499f | bcf9 7f00 | 00ff d048 | 8b44 2420 | 4c8b 5424 | 28c5 f877 | 4883 c430 
  0x00000214a64233fc: e9ea 65ff | fff0 8344 | 24c0 0041 | 803b 000f | 8412 66ff | ff41 c603 | 004d 8b47 | 504d 85c0 
  0x00000214a642341c: 0f84 1400 | 0000 4983 | e808 4d89 | 4750 4d03 | 4758 4d89 | 18e9 ed65 | ffff 4883 | ec20 498b 
  0x00000214a642343c: cb49 8bd7 

  0x00000214a6423440: ;   {runtime_call}
  0x00000214a6423440: 48b8 7049 | 9fbc f97f | 0000 ffd0 | c5f8 7748 | 83c4 20e9 | cb65 ffff | 458b 0249 | c1e0 0349 
  0x00000214a6423460: 83f8 000f | 84e6 65ff | ff4d 8b5f | 384d 85db | 0f84 1400 | 0000 4983 | eb08 4d89 | 5f38 4d03 
  0x00000214a6423480: 5f40 4d89 | 03e9 c565 | ffff 4883 | ec30 4c89 | 5424 2848 | 8944 2420 | 498b c849 

  0x00000214a642349c: ;   {runtime_call}
  0x00000214a642349c: 8bd7 48b8 | 9049 9fbc | f97f 0000 | ffd0 488b | 4424 204c | 8b54 2428 | c5f8 7748 | 83c4 30e9 
  0x00000214a64234bc: 8f65 ffff | f083 4424 | c000 4180 | 3b00 0f84 | b765 ffff | 41c6 0300 | 4d8b 4750 | 4d85 c00f 
  0x00000214a64234dc: 8414 0000 | 0049 83e8 | 084d 8947 | 504d 0347 | 584d 8918 | e992 65ff | ff48 83ec | 2049 8bcb 
  0x00000214a64234fc: ;   {runtime_call}
  0x00000214a64234fc: 498b d748 | b870 499f | bcf9 7f00 | 00ff d0c5 | f877 4883 | c420 e970 | 65ff ff45 | 8b02 49c1 
  0x00000214a642351c: e003 4983 | f800 0f84 | 8b65 ffff | 4d8b 5f38 | 4d85 db0f | 8414 0000 | 0049 83eb | 084d 895f 
  0x00000214a642353c: 384d 035f | 404d 8903 | e96a 65ff | ff48 83ec | 304c 8954 | 2428 4889 | 4424 2049 | 8bc8 498b 
  0x00000214a642355c: ;   {runtime_call}
  0x00000214a642355c: d748 b890 | 499f bcf9 | 7f00 00ff | d048 8b44 | 2420 4c8b | 5424 28c5 | f877 4883 | c430 e934 
  0x00000214a642357c: 65ff fff0 | 8344 24c0 | 0041 803b | 000f 845c | 65ff ff41 | c603 004d | 8b47 504d | 85c0 0f84 
  0x00000214a642359c: 1400 0000 | 4983 e808 | 4d89 4750 | 4d03 4758 | 4d89 18e9 | 3765 ffff | 4883 ec20 | 498b cb49 
  0x00000214a64235bc: ;   {runtime_call}
  0x00000214a64235bc: 8bd7 48b8 | 7049 9fbc | f97f 0000 | ffd0 c5f8 | 7748 83c4 | 20e9 1565 | ffff 458b | 0249 c1e0 
  0x00000214a64235dc: 0349 83f8 | 000f 8430 | 65ff ff4d | 8b5f 384d | 85db 0f84 | 1400 0000 | 4983 eb08 | 4d89 5f38 
  0x00000214a64235fc: 4d03 5f40 | 4d89 03e9 | 0f65 ffff | 4883 ec30 | 4c89 5424 | 2848 8944 | 2420 498b | c849 8bd7 
  0x00000214a642361c: ;   {runtime_call}
  0x00000214a642361c: 48b8 9049 | 9fbc f97f | 0000 ffd0 | 488b 4424 | 204c 8b54 | 2428 c5f8 | 7748 83c4 | 30e9 d964 
  0x00000214a642363c: ffff f083 | 4424 c000 | 4180 3b00 | 0f84 0165 | ffff 41c6 | 0300 4d8b | 4750 4d85 | c00f 8414 
  0x00000214a642365c: 0000 0049 | 83e8 084d | 8947 504d | 0347 584d | 8918 e9dc | 64ff ff48 | 83ec 2049 | 8bcb 498b 
  0x00000214a642367c: ;   {runtime_call}
  0x00000214a642367c: d748 b870 | 499f bcf9 | 7f00 00ff | d0c5 f877 | 4883 c420 | e9ba 64ff | ff45 8b02 | 49c1 e003 
  0x00000214a642369c: 4983 f800 | 0f84 d564 | ffff 4d8b | 5f38 4d85 | db0f 8414 | 0000 0049 | 83eb 084d | 895f 384d 
  0x00000214a64236bc: 035f 404d | 8903 e9b4 | 64ff ff48 | 83ec 304c | 8954 2428 | 4889 4424 | 2049 8bc8 

  0x00000214a64236d8: ;   {runtime_call}
  0x00000214a64236d8: 498b d748 | b890 499f | bcf9 7f00 | 00ff d048 | 8b44 2420 | 4c8b 5424 | 28c5 f877 | 4883 c430 
  0x00000214a64236f8: e97e 64ff | fff0 8344 | 24c0 0041 | 803b 000f | 84a6 64ff | ff41 c603 | 004d 8b47 | 504d 85c0 
  0x00000214a6423718: 0f84 1400 | 0000 4983 | e808 4d89 | 4750 4d03 | 4758 4d89 | 18e9 8164 | ffff 4883 | ec20 498b 
  0x00000214a6423738: cb49 8bd7 

  0x00000214a642373c: ;   {runtime_call}
  0x00000214a642373c: 48b8 7049 | 9fbc f97f | 0000 ffd0 | c5f8 7748 | 83c4 20e9 | 5f64 ffff | 458b 1a49 | c1e3 0349 
  0x00000214a642375c: 83fb 000f | 8476 64ff | ff4d 8b47 | 384d 85c0 | 0f84 1400 | 0000 4983 | e808 4d89 | 4738 4d03 
  0x00000214a642377c: 4740 4d89 | 18e9 5564 | ffff 4883 | ec40 4c89 | 5424 384c | 894c 2430 | 4889 4424 | 2849 8bcb 
  0x00000214a642379c: ;   {runtime_call}
  0x00000214a642379c: 498b d748 | b890 499f | bcf9 7f00 | 00ff d048 | 8b44 2428 | 4c8b 4c24 | 304c 8b54 | 2438 c5f8 
  0x00000214a64237bc: 7748 83c4 | 40e9 1564 | ffff f083 | 4424 c000 | 4180 3800 | 0f84 3d64 | ffff 41c6 | 0000 4d8b 
  0x00000214a64237dc: 5f50 4d85 | db0f 8414 | 0000 0049 | 83eb 084d | 895f 504d | 035f 584d | 8903 e918 | 64ff ff48 
  0x00000214a64237fc: 83ec 304c | 894c 2428 | 498b c849 

  0x00000214a6423808: ;   {runtime_call}
  0x00000214a6423808: 8bd7 48b8 | 7049 9fbc | f97f 0000 | ffd0 4c8b | 4c24 28c5 | f877 4883 | c430 e9ec | 63ff ff41 
  0x00000214a6423828: 8b19 48c1 | e303 4883 | fb00 0f84 | 1965 ffff | 498b 4f38 | 4885 c90f | 8414 0000 | 0048 83e9 
  0x00000214a6423848: 0849 894f | 3849 034f | 4048 8919 | e9f8 64ff | ff48 83ec | 404c 8954 | 2438 4c89 | 5c24 304c 
  0x00000214a6423868: 8944 2428 | 4c89 4c24 | 2048 8bcb 

  0x00000214a6423874: ;   {runtime_call}
  0x00000214a6423874: 498b d748 | b890 499f | bcf9 7f00 | 00ff d04c | 8b4c 2420 | 4c8b 4424 | 284c 8b5c | 2430 4c8b 
  0x00000214a6423894: 5424 38c5 | f877 4883 | c440 e9ae | 64ff fff0 | 8344 24c0 | 0080 3900 | 0f84 d664 | ffff c601 
  0x00000214a64238b4: 0049 8b5f | 5048 85db | 0f84 1400 | 0000 4883 | eb08 4989 | 5f50 4903 | 5f58 4889 | 0be9 b264 
  0x00000214a64238d4: ffff 4883 | ec30 4c89 | 5c24 284c | 8944 2420 

  0x00000214a64238e4: ;   {runtime_call}
  0x00000214a64238e4: 498b d748 | b870 499f | bcf9 7f00 | 00ff d04c | 8b44 2420 | 4c8b 5c24 | 28c5 f877 | 4883 c430 
  0x00000214a6423904: e97f 64ff | ff8b 1948 | c1e3 0348 | 83fb 000f | 84ca 64ff | ff4d 8b4f | 384d 85c9 | 0f84 1400 
  0x00000214a6423924: 0000 4983 | e908 4d89 | 4f38 4d03 | 4f40 4989 | 19e9 a964 | ffff 4883 | ec40 4c89 | 5424 384c 
  0x00000214a6423944: 895c 2430 | 4c89 4424 | 2848 894c | 2420 488b | cb49 8bd7 

  0x00000214a6423958: ;   {runtime_call}
  0x00000214a6423958: 48b8 9049 | 9fbc f97f | 0000 ffd0 | 488b 4c24 | 204c 8b44 | 2428 4c8b | 5c24 304c | 8b54 2438 
  0x00000214a6423978: c5f8 7748 | 83c4 40e9 | 5f64 ffff | f083 4424 | c000 4180 | 3900 0f84 | 8664 ffff | 41c6 0100 
  0x00000214a6423998: 498b 5f50 | 4885 db0f | 8414 0000 | 0048 83eb | 0849 895f | 5049 035f | 584c 890b | e961 64ff 
  0x00000214a64239b8: ff48 83ec | 304c 895c | 2428 4c89 | 4424 2049 | 8bc9 498b 

  0x00000214a64239cc: ;   {runtime_call}
  0x00000214a64239cc: d748 b870 | 499f bcf9 | 7f00 00ff | d04c 8b44 | 2420 4c8b | 5c24 28c5 | f877 4883 | c430 e92b 
  0x00000214a64239ec: 64ff ff44 | 8b09 49c1 | e103 4983 | f900 0f84 | 7964 ffff | 498b 5f38 | 4885 db0f | 8414 0000 
  0x00000214a6423a0c: 0048 83eb | 0849 895f | 3849 035f | 404c 890b | e958 64ff | ff48 83ec | 404c 8954 | 2438 4c89 
  0x00000214a6423a2c: 5c24 304c | 8944 2428 | 4889 4c24 | 2049 8bc9 

  0x00000214a6423a3c: ;   {runtime_call}
  0x00000214a6423a3c: 498b d748 | b890 499f | bcf9 7f00 | 00ff d048 | 8b4c 2420 | 4c8b 4424 | 284c 8b5c | 2430 4c8b 
  0x00000214a6423a5c: 5424 38c5 | f877 4883 | c440 e90e | 64ff fff0 | 8344 24c0 | 0080 3b00 | 0f84 3664 | ffff c603 
  0x00000214a6423a7c: 004d 8b4f | 504d 85c9 | 0f84 1400 | 0000 4983 | e908 4d89 | 4f50 4d03 | 4f58 4989 | 19e9 1264 
  0x00000214a6423a9c: ffff 4883 | ec30 4c89 | 5c24 284c | 8944 2420 | 488b cb49 

  0x00000214a6423ab0: ;   {runtime_call}
  0x00000214a6423ab0: 8bd7 48b8 | 7049 9fbc | f97f 0000 | ffd0 4c8b | 4424 204c | 8b5c 2428 | c5f8 7748 | 83c4 30e9 
  0x00000214a6423ad0: dc63 ffff | 8b19 48c1 | e303 4883 | fb00 0f84 | 2764 ffff | 4d8b 4f38 | 4d85 c90f | 8414 0000 
  0x00000214a6423af0: 0049 83e9 | 084d 894f | 384d 034f | 4049 8919 | e906 64ff | ff48 83ec | 404c 8954 | 2438 4c89 
  0x00000214a6423b10: 5c24 304c | 8944 2428 | 4889 4c24 | 2048 8bcb 

  0x00000214a6423b20: ;   {runtime_call}
  0x00000214a6423b20: 498b d748 | b890 499f | bcf9 7f00 | 00ff d048 | 8b4c 2420 | 4c8b 4424 | 284c 8b5c | 2430 4c8b 
  0x00000214a6423b40: 5424 38c5 | f877 4883 | c440 e9bc | 63ff fff0 | 8344 24c0 | 0041 8039 | 000f 84e3 | 63ff ff41 
  0x00000214a6423b60: c601 0049 | 8b5f 5048 | 85db 0f84 | 1400 0000 | 4883 eb08 | 4989 5f50 | 4903 5f58 | 4c89 0be9 
  0x00000214a6423b80: be63 ffff | 4883 ec30 | 4c89 5c24 | 284c 8944 | 2420 498b | c949 8bd7 

  0x00000214a6423b98: ;   {runtime_call}
  0x00000214a6423b98: 48b8 7049 | 9fbc f97f | 0000 ffd0 | 4c8b 4424 | 204c 8b5c | 2428 c5f8 | 7748 83c4 | 30e9 8863 
  0x00000214a6423bb8: ffff 448b | 0949 c1e1 | 0349 83f9 | 000f 84d6 | 63ff ff4d | 8b47 384d | 85c0 0f84 | 1400 0000 
  0x00000214a6423bd8: 4983 e808 | 4d89 4738 | 4d03 4740 | 4d89 08e9 | b563 ffff | 4883 ec40 | 4c89 5424 | 384c 895c 
  0x00000214a6423bf8: 2430 4889 | 4c24 2848 | 8944 2420 | 498b c949 

  0x00000214a6423c08: ;   {runtime_call}
  0x00000214a6423c08: 8bd7 48b8 | 9049 9fbc | f97f 0000 | ffd0 488b | 4424 2048 | 8b4c 2428 | 4c8b 5c24 | 304c 8b54 
  0x00000214a6423c28: 2438 c5f8 | 7748 83c4 | 40e9 6b63 | ffff f083 | 4424 c000 | 4180 3800 | 0f84 9363 | ffff 41c6 
  0x00000214a6423c48: 0000 4d8b | 4f50 4d85 | c90f 8414 | 0000 0049 | 83e9 084d | 894f 504d | 034f 584d | 8901 e96e 
  0x00000214a6423c68: 63ff ff48 | 83ec 304c | 895c 2428 | 4889 4424 | 2049 8bc8 

  0x00000214a6423c7c: ;   {runtime_call}
  0x00000214a6423c7c: 498b d748 | b870 499f | bcf9 7f00 | 00ff d048 | 8b44 2420 | 4c8b 5c24 | 28c5 f877 | 4883 c430 
  0x00000214a6423c9c: e938 63ff | ff45 8b02 | 49c1 e003 | 4983 f800 | 0f84 7363 | ffff 4d8b | 5f38 4d85 | db0f 8414 
  0x00000214a6423cbc: 0000 0049 | 83eb 084d | 895f 384d | 035f 404d | 8903 e952 | 63ff ff48 | 83ec 404c | 8954 2438 
  0x00000214a6423cdc: 4c89 4c24 | 3048 8944 | 2428 498b | c849 8bd7 

  0x00000214a6423cec: ;   {runtime_call}
  0x00000214a6423cec: 48b8 9049 | 9fbc f97f | 0000 ffd0 | 488b 4424 | 284c 8b4c | 2430 4c8b | 5424 38c5 | f877 4883 
  0x00000214a6423d0c: c440 e912 | 63ff fff0 | 8344 24c0 | 0041 803b | 000f 843a | 63ff ff41 | c603 004d | 8b47 504d 
  0x00000214a6423d2c: 85c0 0f84 | 1400 0000 | 4983 e808 | 4d89 4750 | 4d03 4758 | 4d89 18e9 | 1563 ffff | 4883 ec30 
  0x00000214a6423d4c: 4c89 4c24 | 2849 8bcb 

  0x00000214a6423d54: ;   {runtime_call}
  0x00000214a6423d54: 498b d748 | b870 499f | bcf9 7f00 | 00ff d04c | 8b4c 2428 | c5f8 7748 | 83c4 30e9 | e962 ffff 
  0x00000214a6423d74: 458b 0349 | c1e0 0349 | 83f8 000f | 84ba 66ff | ff4d 8b57 | 384d 85d2 | 0f84 1400 | 0000 4983 
  0x00000214a6423d94: ea08 4d89 | 5738 4d03 | 5740 4d89 | 02e9 9966 | ffff 4883 | ec30 4c89 | 5c24 2848 | 8944 2420 
  0x00000214a6423db4: 498b c849 

  0x00000214a6423db8: ;   {runtime_call}
  0x00000214a6423db8: 8bd7 48b8 | 9049 9fbc | f97f 0000 | ffd0 488b | 4424 204c | 8b5c 2428 | c5f8 7748 | 83c4 30e9 
  0x00000214a6423dd8: 6366 ffff | f083 4424 | c000 4180 | 3a00 0f84 | 8b66 ffff | 41c6 0200 | 4d8b 4750 | 4d85 c00f 
  0x00000214a6423df8: 8414 0000 | 0049 83e8 | 084d 8947 | 504d 0347 | 584d 8910 | e966 66ff | ff48 83ec | 3048 8944 
  0x00000214a6423e18: 2428 498b | ca49 8bd7 

  0x00000214a6423e20: ;   {runtime_call}
  0x00000214a6423e20: 48b8 7049 | 9fbc f97f | 0000 ffd0 | 488b 4424 | 28c5 f877 | 4883 c430 | e93a 66ff | ff41 8b0b 
  0x00000214a6423e40: 48c1 e103 | 4883 f900 | 0f84 9666 | ffff 4d8b | 5738 4d85 | d20f 8414 | 0000 0049 | 83ea 084d 
  0x00000214a6423e60: 8957 384d | 0357 4049 | 890a e975 | 66ff ff48 | 83ec 50c5 | f9d6 5424 | 48c5 f9d6 | 5c24 40c5 
  0x00000214a6423e80: f9d6 6424 | 38c5 f9d6 | 4c24 304c | 895c 2428 | 4c89 4424 | 2049 8bd7 

  0x00000214a6423e98: ;   {runtime_call}
  0x00000214a6423e98: 48b8 9049 | 9fbc f97f | 0000 ffd0 | 4c8b 4424 | 204c 8b5c | 2428 c5f8 | 77c5 fa7e | 4c24 30c5 
  0x00000214a6423eb8: fa7e 6424 | 38c5 fa7e | 5c24 40c5 | fa7e 5424 | 4848 83c4 | 50e9 1266 | ffff f083 | 4424 c000 
  0x00000214a6423ed8: 4180 3a00 | 0f84 3a66 | ffff 41c6 | 0200 498b | 4f50 4885 | c90f 8414 | 0000 0048 | 83e9 0849 
  0x00000214a6423ef8: 894f 5049 | 034f 584c | 8911 e915 | 66ff ff48 | 83ec 50c5 | f9d6 5424 | 48c5 f9d6 | 5c24 40c5 
  0x00000214a6423f18: f9d6 6424 | 38c5 f9d6 | 4c24 304c | 8944 2428 | 498b ca49 

  0x00000214a6423f2c: ;   {runtime_call}
  0x00000214a6423f2c: 8bd7 48b8 | 7049 9fbc | f97f 0000 | ffd0 4c8b | 4424 28c5 | f877 c5fa | 7e4c 2430 | c5fa 7e64 
  0x00000214a6423f4c: 2438 c5fa | 7e5c 2440 | c5fa 7e54 | 2448 4883 | c450 e9b9 | 65ff ff45 | 8b03 49c1 | e003 4983 
  0x00000214a6423f6c: f800 0f84 | 2666 ffff | 4d8b 5738 | 4d85 d20f | 8414 0000 | 0049 83ea | 084d 8957 | 384d 0357 
  0x00000214a6423f8c: 404d 8902 | e905 66ff | ff48 83ec | 50c5 f9d6 | 5424 48c5 | f9d6 5c24 | 40c5 f9d6 | 6424 38c5 
  0x00000214a6423fac: f9d6 4c24 | 304c 895c | 2428 4c89 | 4c24 2049 | 8bc8 498b 

  0x00000214a6423fc0: ;   {runtime_call}
  0x00000214a6423fc0: d748 b890 | 499f bcf9 | 7f00 00ff | d04c 8b4c | 2420 4c8b | 5c24 28c5 | f877 c5fa | 7e4c 2430 
  0x00000214a6423fe0: c5fa 7e64 | 2438 c5fa | 7e5c 2440 | c5fa 7e54 | 2448 4883 | c450 e99f | 65ff fff0 | 8344 24c0 
  0x00000214a6424000: 0041 803a | 000f 84c7 | 65ff ff41 | c602 004d | 8b47 504d | 85c0 0f84 | 1400 0000 | 4983 e808 
  0x00000214a6424020: 4d89 4750 | 4d03 4758 | 4d89 10e9 | a265 ffff | 4883 ec50 | c5f9 d654 | 2448 c5f9 | d65c 2440 
  0x00000214a6424040: c5f9 d664 | 2438 c5f9 | d64c 2430 | 4c89 4c24 | 2849 8bca 

  0x00000214a6424054: ;   {runtime_call}
  0x00000214a6424054: 498b d748 | b870 499f | bcf9 7f00 | 00ff d04c | 8b4c 2428 | c5f8 77c5 | fa7e 4c24 | 30c5 fa7e 
  0x00000214a6424074: 6424 38c5 | fa7e 5c24 | 40c5 fa7e | 5424 4848 | 83c4 50e9 | 4665 ffff | 458b 1049 | c1e2 0349 
  0x00000214a6424094: 83fa 000f | 84f2 6aff | ff4d 8b5f | 384d 85db | 0f84 1400 | 0000 4983 | eb08 4d89 | 5f38 4d03 
  0x00000214a64240b4: 5f40 4d89 | 13e9 d16a | ffff 4883 | ec30 4c89 | 4424 2848 | 8944 2420 | 498b ca49 

  0x00000214a64240d0: ;   {runtime_call}
  0x00000214a64240d0: 8bd7 48b8 | 9049 9fbc | f97f 0000 | ffd0 488b | 4424 204c | 8b44 2428 | c5f8 7748 | 83c4 30e9 
  0x00000214a64240f0: 9b6a ffff | f083 4424 | c000 4180 | 3b00 0f84 | c36a ffff | 41c6 0300 | 4d8b 5750 | 4d85 d20f 
  0x00000214a6424110: 8414 0000 | 0049 83ea | 084d 8957 | 504d 0357 | 584d 891a | e99e 6aff | ff48 83ec | 3048 8944 
  0x00000214a6424130: 2428 498b | cb49 8bd7 

  0x00000214a6424138: ;   {runtime_call}
  0x00000214a6424138: 48b8 7049 | 9fbc f97f | 0000 ffd0 | 488b 4424 | 28c5 f877 | 4883 c430 | e972 6aff | ff45 8b10 
  0x00000214a6424158: 49c1 e203 | 4983 fa00 | 0f84 3b6b | ffff 4d8b | 5f38 4d85 | db0f 8414 | 0000 0049 | 83eb 084d 
  0x00000214a6424178: 895f 384d | 035f 404d | 8913 e91a | 6bff ff48 | 83ec 60c5 | f9d6 5424 | 58c5 f9d6 | 5c24 50c5 
  0x00000214a6424198: f9d6 6424 | 48c5 f9d6 | 6c24 40c5 | f9d6 4c24 | 384c 8944 | 2430 4889 | 4424 2849 | 8bca 498b 
  0x00000214a64241b8: ;   {runtime_call}
  0x00000214a64241b8: d748 b890 | 499f bcf9 | 7f00 00ff | d048 8b44 | 2428 4c8b | 4424 30c5 | f877 c5fa | 7e4c 2438 
  0x00000214a64241d8: c5fa 7e6c | 2440 c5fa | 7e64 2448 | c5fa 7e5c | 2450 c5fa | 7e54 2458 | 4883 c460 | e9a8 6aff 
  0x00000214a64241f8: fff0 8344 | 24c0 0041 | 803b 000f | 84d0 6aff | ff41 c603 | 004d 8b57 | 504d 85d2 | 0f84 1400 
  0x00000214a6424218: 0000 4983 | ea08 4d89 | 5750 4d03 | 5758 4d89 | 1ae9 ab6a | ffff 4883 | ec50 c5f9 | d654 2448 
  0x00000214a6424238: c5f9 d65c | 2440 c5f9 | d664 2438 | c5f9 d66c | 2430 c5f9 | d64c 2428 | 4889 4424 | 2049 8bcb 
  0x00000214a6424258: ;   {runtime_call}
  0x00000214a6424258: 498b d748 | b870 499f | bcf9 7f00 | 00ff d048 | 8b44 2420 | c5f8 77c5 | fa7e 4c24 | 28c5 fa7e 
  0x00000214a6424278: 6c24 30c5 | fa7e 6424 | 38c5 fa7e | 5c24 40c5 | fa7e 5424 | 4848 83c4 | 50e9 436a | ffff 458b 
  0x00000214a6424298: 1049 c1e2 | 0349 83fa | 000f 849d | 6aff ff4d | 8b5f 384d | 85db 0f84 | 1400 0000 | 4983 eb08 
  0x00000214a64242b8: 4d89 5f38 | 4d03 5f40 | 4d89 13e9 | 7c6a ffff | 4883 ec60 | c5f9 d654 | 2458 c5f9 | d65c 2450 
  0x00000214a64242d8: c5f9 d664 | 2448 c5f9 | d66c 2440 | c5f9 d64c | 2438 4c89 | 4424 3048 | 8944 2428 | 498b ca49 
  0x00000214a64242f8: ;   {runtime_call}
  0x00000214a64242f8: 8bd7 48b8 | 9049 9fbc | f97f 0000 | ffd0 488b | 4424 284c | 8b44 2430 | c5f8 77c5 | fa7e 4c24 
  0x00000214a6424318: 38c5 fa7e | 6c24 40c5 | fa7e 6424 | 48c5 fa7e | 5c24 50c5 | fa7e 5424 | 5848 83c4 | 60e9 0a6a 
  0x00000214a6424338: ffff f083 | 4424 c000 | 4180 3b00 | 0f84 326a | ffff 41c6 | 0300 4d8b | 5750 4d85 | d20f 8414 
  0x00000214a6424358: 0000 0049 | 83ea 084d | 8957 504d | 0357 584d | 891a e90d | 6aff ff48 | 83ec 50c5 | f9d6 5424 
  0x00000214a6424378: 48c5 f9d6 | 5c24 40c5 | f9d6 6424 | 38c5 f9d6 | 6c24 30c5 | f9d6 4c24 | 2848 8944 | 2420 498b 
  0x00000214a6424398: cb49 8bd7 

  0x00000214a642439c: ;   {runtime_call}
  0x00000214a642439c: 48b8 7049 | 9fbc f97f | 0000 ffd0 | 488b 4424 | 20c5 f877 | c5fa 7e4c | 2428 c5fa | 7e6c 2430 
  0x00000214a64243bc: c5fa 7e64 | 2438 c5fa | 7e5c 2440 | c5fa 7e54 | 2448 4883 | c450 e9a5 | 69ff ff45 | 8b13 49c1 
  0x00000214a64243dc: e203 4983 | fa00 0f84 | 866a ffff | 4d8b 4738 | 4d85 c00f | 8414 0000 | 0049 83e8 | 084d 8947 
  0x00000214a64243fc: 384d 0347 | 404d 8910 | e965 6aff | ff48 83ec | 60c5 f9d6 | 5424 58c5 | f9d6 5c24 | 50c5 f9d6 
  0x00000214a642441c: 6424 48c5 | f9d6 6c24 | 40c5 f9d6 | 4c24 384c | 895c 2430 | 4889 4424 | 2849 8bca 

  0x00000214a6424438: ;   {runtime_call}
  0x00000214a6424438: 498b d748 | b890 499f | bcf9 7f00 | 00ff d048 | 8b44 2428 | 4c8b 5c24 | 30c5 f877 | c5fa 7e4c 
  0x00000214a6424458: 2438 c5fa | 7e6c 2440 | c5fa 7e64 | 2448 c5fa | 7e5c 2450 | c5fa 7e54 | 2458 4883 | c460 e9f3 
  0x00000214a6424478: 69ff fff0 | 8344 24c0 | 0041 8038 | 000f 841b | 6aff ff41 | c600 004d | 8b57 504d | 85d2 0f84 
  0x00000214a6424498: 1400 0000 | 4983 ea08 | 4d89 5750 | 4d03 5758 | 4d89 02e9 | f669 ffff | 4883 ec50 | c5f9 d654 
  0x00000214a64244b8: 2448 c5f9 | d65c 2440 | c5f9 d664 | 2438 c5f9 | d66c 2430 | c5f9 d64c | 2428 4889 | 4424 2049 
  0x00000214a64244d8: 8bc8 498b 

  0x00000214a64244dc: ;   {runtime_call}
  0x00000214a64244dc: d748 b870 | 499f bcf9 | 7f00 00ff | d048 8b44 | 2420 c5f8 | 77c5 fa7e | 4c24 28c5 | fa7e 6c24 
  0x00000214a64244fc: 30c5 fa7e | 6424 38c5 | fa7e 5c24 | 40c5 fa7e | 5424 4848 | 83c4 50e9 | 8e69 ffff 

  0x00000214a6424518: ;   {internal_word}
  0x00000214a6424518: 49ba a456 | 41a6 1402 | 0000 4d89 | 9760 0400 

  0x00000214a6424528: ;   {runtime_call SafepointBlob}
  0x00000214a6424528: 00e9 b217 

  0x00000214a642452c: ;   {runtime_call StubRoutines (final stubs)}
  0x00000214a642452c: 8fff e8cd | 148d ffe9 | 36fc feff 
[Stub Code]
  0x00000214a6424538: ;   {no_reloc}
  0x00000214a6424538: 48bb 0000 | 0000 0000 

  0x00000214a6424540: ;   {runtime_call nmethod}
  0x00000214a6424540: 0000 e9fb 

  0x00000214a6424544: ;   {static_stub}
  0x00000214a6424544: ffff ff48 | bb00 0000 | 0000 0000 

  0x00000214a6424550: ;   {runtime_call nmethod}
  0x00000214a6424550: 00e9 fbff 

  0x00000214a6424554: ;   {static_stub}
  0x00000214a6424554: ffff 48bb | 0000 0000 | 0000 0000 

  0x00000214a6424560: ;   {runtime_call nmethod}
  0x00000214a6424560: e9fb ffff 

  0x00000214a6424564: ;   {static_stub}
  0x00000214a6424564: ff48 bb00 | 0000 0000 

  0x00000214a642456c: ;   {runtime_call nmethod}
  0x00000214a642456c: 0000 00e9 | fbff ffff 

  0x00000214a6424574: ;   {static_stub}
  0x00000214a6424574: 48bb 0000 | 0000 0000 

  0x00000214a642457c: ;   {runtime_call nmethod}
  0x00000214a642457c: 0000 e9fb 

  0x00000214a6424580: ;   {static_stub}
  0x00000214a6424580: ffff ff48 | bb00 0000 | 0000 0000 

  0x00000214a642458c: ;   {runtime_call nmethod}
  0x00000214a642458c: 00e9 fbff 

  0x00000214a6424590: ;   {static_stub}
  0x00000214a6424590: ffff 48bb | 0000 0000 | 0000 0000 

  0x00000214a642459c: ;   {runtime_call nmethod}
  0x00000214a642459c: e9fb ffff 

  0x00000214a64245a0: ;   {static_stub}
  0x00000214a64245a0: ff48 bb00 | 0000 0000 

  0x00000214a64245a8: ;   {runtime_call nmethod}
  0x00000214a64245a8: 0000 00e9 | fbff ffff 

  0x00000214a64245b0: ;   {static_stub}
  0x00000214a64245b0: 48bb 0000 | 0000 0000 

  0x00000214a64245b8: ;   {runtime_call nmethod}
  0x00000214a64245b8: 0000 e9fb 

  0x00000214a64245bc: ;   {static_stub}
  0x00000214a64245bc: ffff ff48 | bb00 0000 | 0000 0000 

  0x00000214a64245c8: ;   {runtime_call nmethod}
  0x00000214a64245c8: 00e9 fbff 

  0x00000214a64245cc: ;   {static_stub}
  0x00000214a64245cc: ffff 48bb | 0818 6af6 | 1402 0000 

  0x00000214a64245d8: ;   {runtime_call I2C/C2I adapters}
  0x00000214a64245d8: e9d5 fa8e 

  0x00000214a64245dc: ;   {static_stub}
  0x00000214a64245dc: ff48 bb88 | e369 f614 

  0x00000214a64245e4: ;   {runtime_call I2C/C2I adapters}
  0x00000214a64245e4: 0200 00e9 | c6fa 8eff 

  0x00000214a64245ec: ;   {static_stub}
  0x00000214a64245ec: 48bb 0000 | 0000 0000 

  0x00000214a64245f4: ;   {runtime_call nmethod}
  0x00000214a64245f4: 0000 e9fb 

  0x00000214a64245f8: ;   {static_stub}
  0x00000214a64245f8: ffff ff48 | bb88 e369 | f614 0200 

  0x00000214a6424604: ;   {runtime_call I2C/C2I adapters}
  0x00000214a6424604: 00e9 a8fa 

  0x00000214a6424608: ;   {static_stub}
  0x00000214a6424608: 8eff 48bb | 0000 0000 | 0000 0000 

  0x00000214a6424614: ;   {runtime_call nmethod}
  0x00000214a6424614: e9fb ffff 

  0x00000214a6424618: ;   {static_stub}
  0x00000214a6424618: ff48 bb00 | 0000 0000 

  0x00000214a6424620: ;   {runtime_call nmethod}
  0x00000214a6424620: 0000 00e9 | fbff ffff 

  0x00000214a6424628: ;   {static_stub}
  0x00000214a6424628: 48bb 0000 | 0000 0000 

  0x00000214a6424630: ;   {runtime_call nmethod}
  0x00000214a6424630: 0000 e9fb 

  0x00000214a6424634: ;   {static_stub}
  0x00000214a6424634: ffff ff48 | bb00 0000 | 0000 0000 

  0x00000214a6424640: ;   {runtime_call nmethod}
  0x00000214a6424640: 00e9 fbff 

  0x00000214a6424644: ;   {static_stub}
  0x00000214a6424644: ffff 48bb | 0000 0000 | 0000 0000 

  0x00000214a6424650: ;   {runtime_call nmethod}
  0x00000214a6424650: e9fb ffff 

  0x00000214a6424654: ;   {static_stub}
  0x00000214a6424654: ff48 bb00 | 0000 0000 

  0x00000214a642465c: ;   {runtime_call nmethod}
  0x00000214a642465c: 0000 00e9 | fbff ffff 

  0x00000214a6424664: ;   {static_stub}
  0x00000214a6424664: 48bb 0000 | 0000 0000 

  0x00000214a642466c: ;   {runtime_call nmethod}
  0x00000214a642466c: 0000 e9fb 

  0x00000214a6424670: ;   {static_stub}
  0x00000214a6424670: ffff ff48 | bb00 0000 | 0000 0000 

  0x00000214a642467c: ;   {runtime_call nmethod}
  0x00000214a642467c: 00e9 fbff 

  0x00000214a6424680: ;   {static_stub}
  0x00000214a6424680: ffff 48bb | 0000 0000 | 0000 0000 

  0x00000214a642468c: ;   {runtime_call nmethod}
  0x00000214a642468c: e9fb ffff 

  0x00000214a6424690: ;   {static_stub}
  0x00000214a6424690: ff48 bb00 | 0000 0000 

  0x00000214a6424698: ;   {runtime_call nmethod}
  0x00000214a6424698: 0000 00e9 | fbff ffff 

  0x00000214a64246a0: ;   {static_stub}
  0x00000214a64246a0: 48bb 0000 | 0000 0000 

  0x00000214a64246a8: ;   {runtime_call nmethod}
  0x00000214a64246a8: 0000 e9fb 

  0x00000214a64246ac: ;   {static_stub}
  0x00000214a64246ac: ffff ff48 | bb00 0000 | 0000 0000 

  0x00000214a64246b8: ;   {runtime_call nmethod}
  0x00000214a64246b8: 00e9 fbff 

  0x00000214a64246bc: ;   {static_stub}
  0x00000214a64246bc: ffff 48bb | 0000 0000 | 0000 0000 

  0x00000214a64246c8: ;   {runtime_call nmethod}
  0x00000214a64246c8: e9fb ffff 

  0x00000214a64246cc: ;   {static_stub}
  0x00000214a64246cc: ff48 bb00 | 0000 0000 

  0x00000214a64246d4: ;   {runtime_call nmethod}
  0x00000214a64246d4: 0000 00e9 | fbff ffff 

  0x00000214a64246dc: ;   {static_stub}
  0x00000214a64246dc: 48bb 0000 | 0000 0000 

  0x00000214a64246e4: ;   {runtime_call nmethod}
  0x00000214a64246e4: 0000 e9fb 

  0x00000214a64246e8: ;   {static_stub}
  0x00000214a64246e8: ffff ff48 | bb00 0000 | 0000 0000 

  0x00000214a64246f4: ;   {runtime_call nmethod}
  0x00000214a64246f4: 00e9 fbff 

  0x00000214a64246f8: ;   {static_stub}
  0x00000214a64246f8: ffff 48bb | 0000 0000 | 0000 0000 

  0x00000214a6424704: ;   {runtime_call nmethod}
  0x00000214a6424704: e9fb ffff 

  0x00000214a6424708: ;   {static_stub}
  0x00000214a6424708: ff48 bb00 | 0000 0000 

  0x00000214a6424710: ;   {runtime_call nmethod}
  0x00000214a6424710: 0000 00e9 | fbff ffff 

  0x00000214a6424718: ;   {static_stub}
  0x00000214a6424718: 48bb 0000 | 0000 0000 

  0x00000214a6424720: ;   {runtime_call nmethod}
  0x00000214a6424720: 0000 e9fb 

  0x00000214a6424724: ;   {static_stub}
  0x00000214a6424724: ffff ff48 | bb30 ca16 | b514 0200 

  0x00000214a6424730: ;   {runtime_call I2C/C2I adapters}
  0x00000214a6424730: 00e9 0004 

  0x00000214a6424734: ;   {static_stub}
  0x00000214a6424734: 8fff 48bb | b01c 66f6 | 1402 0000 

  0x00000214a6424740: ;   {runtime_call I2C/C2I adapters}
  0x00000214a6424740: e971 008f 

  0x00000214a6424744: ;   {static_stub}
  0x00000214a6424744: ff48 bbf8 | 3cca f614 

  0x00000214a642474c: ;   {runtime_call I2C/C2I adapters}
  0x00000214a642474c: 0200 00e9 | 5ef9 8eff 

  0x00000214a6424754: ;   {static_stub}
  0x00000214a6424754: 48bb e8c4 | 28b5 1402 

  0x00000214a642475c: ;   {runtime_call I2C/C2I adapters}
  0x00000214a642475c: 0000 e94f 

  0x00000214a6424760: ;   {static_stub}
  0x00000214a6424760: f98e ff48 | bbe8 c428 | b514 0200 

  0x00000214a642476c: ;   {runtime_call I2C/C2I adapters}
  0x00000214a642476c: 00e9 40f9 

  0x00000214a6424770: ;   {static_stub}
  0x00000214a6424770: 8eff 48bb | 10bf 28b5 | 1402 0000 

  0x00000214a642477c: ;   {runtime_call I2C/C2I adapters}
  0x00000214a642477c: e935 008f 

  0x00000214a6424780: ;   {static_stub}
  0x00000214a6424780: ff48 bbb8 | be28 b514 

  0x00000214a6424788: ;   {runtime_call I2C/C2I adapters}
  0x00000214a6424788: 0200 00e9 | 22f9 8eff 

  0x00000214a6424790: ;   {static_stub}
  0x00000214a6424790: 48bb e083 | 5cf6 1402 

  0x00000214a6424798: ;   {runtime_call I2C/C2I adapters}
  0x00000214a6424798: 0000 e997 

  0x00000214a642479c: ;   {static_stub}
  0x00000214a642479c: 038f ff48 | bb18 ca60 | f614 0200 

  0x00000214a64247a8: ;   {runtime_call I2C/C2I adapters}
  0x00000214a64247a8: 00e9 04f9 

  0x00000214a64247ac: ;   {static_stub}
  0x00000214a64247ac: 8eff 48bb | 386e 81f6 | 1402 0000 

  0x00000214a64247b8: ;   {runtime_call I2C/C2I adapters}
  0x00000214a64247b8: e979 038f 

  0x00000214a64247bc: ;   {static_stub}
  0x00000214a64247bc: ff48 bb00 | 0000 0000 

  0x00000214a64247c4: ;   {runtime_call nmethod}
  0x00000214a64247c4: 0000 00e9 | fbff ffff 

  0x00000214a64247cc: ;   {static_stub}
  0x00000214a64247cc: 48bb 0000 | 0000 0000 

  0x00000214a64247d4: ;   {runtime_call nmethod}
  0x00000214a64247d4: 0000 e9fb 

  0x00000214a64247d8: ;   {static_stub}
  0x00000214a64247d8: ffff ff48 | bb00 0000 | 0000 0000 

  0x00000214a64247e4: ;   {runtime_call nmethod}
  0x00000214a64247e4: 00e9 fbff 

  0x00000214a64247e8: ;   {static_stub}
  0x00000214a64247e8: ffff 48bb | 0000 0000 | 0000 0000 

  0x00000214a64247f4: ;   {runtime_call nmethod}
  0x00000214a64247f4: e9fb ffff 

  0x00000214a64247f8: ;   {static_stub}
  0x00000214a64247f8: ff48 bb00 | 0000 0000 

  0x00000214a6424800: ;   {runtime_call nmethod}
  0x00000214a6424800: 0000 00e9 | fbff ffff 

  0x00000214a6424808: ;   {static_stub}
  0x00000214a6424808: 48bb 0000 | 0000 0000 

  0x00000214a6424810: ;   {runtime_call nmethod}
  0x00000214a6424810: 0000 e9fb 

  0x00000214a6424814: ;   {static_stub}
  0x00000214a6424814: ffff ff48 | bb10 bf28 | b514 0200 

  0x00000214a6424820: ;   {runtime_call I2C/C2I adapters}
  0x00000214a6424820: 00e9 90ff 

  0x00000214a6424824: ;   {static_stub}
  0x00000214a6424824: 8eff 48bb | e083 5cf6 | 1402 0000 

  0x00000214a6424830: ;   {runtime_call I2C/C2I adapters}
  0x00000214a6424830: e901 038f 

  0x00000214a6424834: ;   {static_stub}
  0x00000214a6424834: ff48 bb18 | ca60 f614 

  0x00000214a642483c: ;   {runtime_call I2C/C2I adapters}
  0x00000214a642483c: 0200 00e9 | 6ef8 8eff 

  0x00000214a6424844: ;   {static_stub}
  0x00000214a6424844: 48bb 386e | 81f6 1402 

  0x00000214a642484c: ;   {runtime_call I2C/C2I adapters}
  0x00000214a642484c: 0000 e9e3 

  0x00000214a6424850: ;   {static_stub}
  0x00000214a6424850: 028f ff48 | bb00 0000 | 0000 0000 

  0x00000214a642485c: ;   {runtime_call nmethod}
  0x00000214a642485c: 00e9 fbff 

  0x00000214a6424860: ;   {static_stub}
  0x00000214a6424860: ffff 48bb | 0000 0000 | 0000 0000 

  0x00000214a642486c: ;   {runtime_call nmethod}
  0x00000214a642486c: e9fb ffff 

  0x00000214a6424870: ;   {static_stub}
  0x00000214a6424870: ff48 bbb8 | be28 b514 

  0x00000214a6424878: ;   {runtime_call I2C/C2I adapters}
  0x00000214a6424878: 0200 00e9 | 32f8 8eff 

  0x00000214a6424880: ;   {static_stub}
  0x00000214a6424880: 48bb 0000 | 0000 0000 

  0x00000214a6424888: ;   {runtime_call nmethod}
  0x00000214a6424888: 0000 e9fb 

  0x00000214a642488c: ;   {static_stub}
  0x00000214a642488c: ffff ff48 | bbb8 be28 | b514 0200 

  0x00000214a6424898: ;   {runtime_call I2C/C2I adapters}
  0x00000214a6424898: 00e9 14f8 

  0x00000214a642489c: ;   {static_stub}
  0x00000214a642489c: 8eff 48bb | 0000 0000 | 0000 0000 

  0x00000214a64248a8: ;   {runtime_call nmethod}
  0x00000214a64248a8: e9fb ffff 

  0x00000214a64248ac: ;   {static_stub}
  0x00000214a64248ac: ff48 bbb8 | be28 b514 

  0x00000214a64248b4: ;   {runtime_call I2C/C2I adapters}
  0x00000214a64248b4: 0200 00e9 | f6f7 8eff 

  0x00000214a64248bc: ;   {static_stub}
  0x00000214a64248bc: 48bb 0000 | 0000 0000 

  0x00000214a64248c4: ;   {runtime_call nmethod}
  0x00000214a64248c4: 0000 e9fb 

  0x00000214a64248c8: ;   {static_stub}
  0x00000214a64248c8: ffff ff48 | bb00 0000 | 0000 0000 

  0x00000214a64248d4: ;   {runtime_call nmethod}
  0x00000214a64248d4: 00e9 fbff 

  0x00000214a64248d8: ;   {static_stub}
  0x00000214a64248d8: ffff 48bb | b8be 28b5 | 1402 0000 

  0x00000214a64248e4: ;   {runtime_call I2C/C2I adapters}
  0x00000214a64248e4: e9c9 f78e 

  0x00000214a64248e8: ;   {static_stub}
  0x00000214a64248e8: ff48 bbb8 | be28 b514 

  0x00000214a64248f0: ;   {runtime_call I2C/C2I adapters}
  0x00000214a64248f0: 0200 00e9 | baf7 8eff 

  0x00000214a64248f8: ;   {static_stub}
  0x00000214a64248f8: 48bb 0000 | 0000 0000 

  0x00000214a6424900: ;   {runtime_call nmethod}
  0x00000214a6424900: 0000 e9fb 

  0x00000214a6424904: ;   {static_stub}
  0x00000214a6424904: ffff ff48 | bb00 0000 | 0000 0000 

  0x00000214a6424910: ;   {runtime_call nmethod}
  0x00000214a6424910: 00e9 fbff 

  0x00000214a6424914: ;   {static_stub}
  0x00000214a6424914: ffff 48bb | 0000 0000 | 0000 0000 

  0x00000214a6424920: ;   {runtime_call nmethod}
  0x00000214a6424920: e9fb ffff 

  0x00000214a6424924: ;   {static_stub}
  0x00000214a6424924: ff48 bb00 | 0000 0000 

  0x00000214a642492c: ;   {runtime_call nmethod}
  0x00000214a642492c: 0000 00e9 | fbff ffff 

  0x00000214a6424934: ;   {static_stub}
  0x00000214a6424934: 48bb 0000 | 0000 0000 

  0x00000214a642493c: ;   {runtime_call nmethod}
  0x00000214a642493c: 0000 e9fb 

  0x00000214a6424940: ;   {static_stub}
  0x00000214a6424940: ffff ff48 | bb00 0000 | 0000 0000 

  0x00000214a642494c: ;   {runtime_call nmethod}
  0x00000214a642494c: 00e9 fbff 

  0x00000214a6424950: ;   {static_stub}
  0x00000214a6424950: ffff 48bb | 0000 0000 | 0000 0000 

  0x00000214a642495c: ;   {runtime_call nmethod}
  0x00000214a642495c: e9fb ffff 

  0x00000214a6424960: ;   {static_stub}
  0x00000214a6424960: ff48 bb00 | 0000 0000 

  0x00000214a6424968: ;   {runtime_call nmethod}
  0x00000214a6424968: 0000 00e9 | fbff ffff 

  0x00000214a6424970: ;   {static_stub}
  0x00000214a6424970: 48bb 0000 | 0000 0000 

  0x00000214a6424978: ;   {runtime_call nmethod}
  0x00000214a6424978: 0000 e9fb 

  0x00000214a642497c: ;   {static_stub}
  0x00000214a642497c: ffff ff48 | bb00 0000 | 0000 0000 

  0x00000214a6424988: ;   {runtime_call nmethod}
  0x00000214a6424988: 00e9 fbff 

  0x00000214a642498c: ;   {static_stub}
  0x00000214a642498c: ffff 48bb | 0000 0000 | 0000 0000 

  0x00000214a6424998: ;   {runtime_call nmethod}
  0x00000214a6424998: e9fb ffff 

  0x00000214a642499c: ;   {static_stub}
  0x00000214a642499c: ff48 bb00 | 0000 0000 

  0x00000214a64249a4: ;   {runtime_call nmethod}
  0x00000214a64249a4: 0000 00e9 | fbff ffff 

  0x00000214a64249ac: ;   {static_stub}
  0x00000214a64249ac: 48bb 0000 | 0000 0000 

  0x00000214a64249b4: ;   {runtime_call nmethod}
  0x00000214a64249b4: 0000 e9fb 

  0x00000214a64249b8: ;   {static_stub}
  0x00000214a64249b8: ffff ff48 | bb00 0000 | 0000 0000 

  0x00000214a64249c4: ;   {runtime_call nmethod}
  0x00000214a64249c4: 00e9 fbff 

  0x00000214a64249c8: ;   {static_stub}
  0x00000214a64249c8: ffff 48bb | 0000 0000 | 0000 0000 

  0x00000214a64249d4: ;   {runtime_call nmethod}
  0x00000214a64249d4: e9fb ffff 

  0x00000214a64249d8: ;   {static_stub}
  0x00000214a64249d8: ff48 bb00 | 0000 0000 

  0x00000214a64249e0: ;   {runtime_call nmethod}
  0x00000214a64249e0: 0000 00e9 | fbff ffff 

  0x00000214a64249e8: ;   {static_stub}
  0x00000214a64249e8: 48bb 0000 | 0000 0000 

  0x00000214a64249f0: ;   {runtime_call nmethod}
  0x00000214a64249f0: 0000 e9fb 

  0x00000214a64249f4: ;   {static_stub}
  0x00000214a64249f4: ffff ff48 | bb00 0000 | 0000 0000 

  0x00000214a6424a00: ;   {runtime_call nmethod}
  0x00000214a6424a00: 00e9 fbff 

  0x00000214a6424a04: ;   {static_stub}
  0x00000214a6424a04: ffff 48bb | 0000 0000 | 0000 0000 

  0x00000214a6424a10: ;   {runtime_call nmethod}
  0x00000214a6424a10: e9fb ffff 

  0x00000214a6424a14: ;   {static_stub}
  0x00000214a6424a14: ff48 bb00 | 0000 0000 

  0x00000214a6424a1c: ;   {runtime_call nmethod}
  0x00000214a6424a1c: 0000 00e9 | fbff ffff 

  0x00000214a6424a24: ;   {static_stub}
  0x00000214a6424a24: 48bb 0000 | 0000 0000 

  0x00000214a6424a2c: ;   {runtime_call nmethod}
  0x00000214a6424a2c: 0000 e9fb 

  0x00000214a6424a30: ;   {static_stub}
  0x00000214a6424a30: ffff ff48 | bb00 0000 | 0000 0000 

  0x00000214a6424a3c: ;   {runtime_call nmethod}
  0x00000214a6424a3c: 00e9 fbff 

  0x00000214a6424a40: ;   {static_stub}
  0x00000214a6424a40: ffff 48bb | 0000 0000 | 0000 0000 

  0x00000214a6424a4c: ;   {runtime_call nmethod}
  0x00000214a6424a4c: e9fb ffff 

  0x00000214a6424a50: ;   {static_stub}
  0x00000214a6424a50: ff48 bb00 | 0000 0000 

  0x00000214a6424a58: ;   {runtime_call nmethod}
  0x00000214a6424a58: 0000 00e9 | fbff ffff 

  0x00000214a6424a60: ;   {static_stub}
  0x00000214a6424a60: 48bb 0000 | 0000 0000 

  0x00000214a6424a68: ;   {runtime_call nmethod}
  0x00000214a6424a68: 0000 e9fb 

  0x00000214a6424a6c: ;   {static_stub}
  0x00000214a6424a6c: ffff ff48 | bb00 0000 | 0000 0000 

  0x00000214a6424a78: ;   {runtime_call nmethod}
  0x00000214a6424a78: 00e9 fbff 

  0x00000214a6424a7c: ;   {static_stub}
  0x00000214a6424a7c: ffff 48bb | 0000 0000 | 0000 0000 

  0x00000214a6424a88: ;   {runtime_call nmethod}
  0x00000214a6424a88: e9fb ffff 

  0x00000214a6424a8c: ;   {static_stub}
  0x00000214a6424a8c: ff48 bb00 | 0000 0000 

  0x00000214a6424a94: ;   {runtime_call nmethod}
  0x00000214a6424a94: 0000 00e9 | fbff ffff 

  0x00000214a6424a9c: ;   {static_stub}
  0x00000214a6424a9c: 48bb 0000 | 0000 0000 

  0x00000214a6424aa4: ;   {runtime_call nmethod}
  0x00000214a6424aa4: 0000 e9fb 

  0x00000214a6424aa8: ;   {static_stub}
  0x00000214a6424aa8: ffff ff48 | bb00 0000 | 0000 0000 

  0x00000214a6424ab4: ;   {runtime_call nmethod}
  0x00000214a6424ab4: 00e9 fbff 

  0x00000214a6424ab8: ;   {static_stub}
  0x00000214a6424ab8: ffff 48bb | 0000 0000 | 0000 0000 

  0x00000214a6424ac4: ;   {runtime_call nmethod}
  0x00000214a6424ac4: e9fb ffff 

  0x00000214a6424ac8: ;   {static_stub}
  0x00000214a6424ac8: ff48 bb00 | 0000 0000 

  0x00000214a6424ad0: ;   {runtime_call nmethod}
  0x00000214a6424ad0: 0000 00e9 | fbff ffff 

  0x00000214a6424ad8: ;   {static_stub}
  0x00000214a6424ad8: 48bb 18e8 | 7ff6 1402 

  0x00000214a6424ae0: ;   {runtime_call I2C/C2I adapters}
  0x00000214a6424ae0: 0000 e9cb 

  0x00000214a6424ae4: ;   {static_stub}
  0x00000214a6424ae4: f58e ff48 | bb78 fc7f | f614 0200 

  0x00000214a6424af0: ;   {runtime_call I2C/C2I adapters}
  0x00000214a6424af0: 00e9 4000 

  0x00000214a6424af4: ;   {static_stub}
  0x00000214a6424af4: 8fff 48bb | 70ee 7ff6 | 1402 0000 

  0x00000214a6424b00: ;   {runtime_call I2C/C2I adapters}
  0x00000214a6424b00: e9b2 eb8b 

  0x00000214a6424b04: ;   {static_stub}
  0x00000214a6424b04: ff48 bb00 | d95e f614 

  0x00000214a6424b0c: ;   {runtime_call I2C/C2I adapters}
  0x00000214a6424b0c: 0200 00e9 | 2200 8fff 

  0x00000214a6424b14: ;   {static_stub}
  0x00000214a6424b14: 48bb 6009 | aff6 1402 

  0x00000214a6424b1c: ;   {runtime_call I2C/C2I adapters}
  0x00000214a6424b1c: 0000 e910 

  0x00000214a6424b20: ;   {static_stub}
  0x00000214a6424b20: a58c ff48 | bbc8 44d2 | f614 0200 

  0x00000214a6424b2c: ;   {runtime_call I2C/C2I adapters}
  0x00000214a6424b2c: 00e9 0400 

  0x00000214a6424b30: ;   {static_stub}
  0x00000214a6424b30: 8fff 48bb | 6833 caf6 | 1402 0000 

  0x00000214a6424b3c: ;   {runtime_call I2C/C2I adapters}
  0x00000214a6424b3c: e9f5 ff8e 

  0x00000214a6424b40: ;   {static_stub}
  0x00000214a6424b40: ff48 bb90 | 955f f614 

  0x00000214a6424b48: ;   {runtime_call I2C/C2I adapters}
  0x00000214a6424b48: 0200 00e9 | 62f5 8eff 

  0x00000214a6424b50: ;   {static_stub}
  0x00000214a6424b50: 48bb 30eb | 61f6 1402 

  0x00000214a6424b58: ;   {runtime_call I2C/C2I adapters}
  0x00000214a6424b58: 0000 e95d 

  0x00000214a6424b5c: ;   {static_stub}
  0x00000214a6424b5c: 3e9f ff48 | bb80 3162 | f614 0200 

  0x00000214a6424b68: ;   {runtime_call I2C/C2I adapters}
  0x00000214a6424b68: 00e9 c8ff 

  0x00000214a6424b6c: ;   {static_stub}
  0x00000214a6424b6c: 8eff 48bb | 187e d5f6 | 1402 0000 

  0x00000214a6424b78: ;   {runtime_call I2C/C2I adapters}
  0x00000214a6424b78: e935 f58e 

  0x00000214a6424b7c: ;   {static_stub}
  0x00000214a6424b7c: ff48 bb00 | 0000 0000 

  0x00000214a6424b84: ;   {runtime_call nmethod}
  0x00000214a6424b84: 0000 00e9 | fbff ffff 

  0x00000214a6424b8c: ;   {static_stub}
  0x00000214a6424b8c: 48bb 4070 | aaf6 1402 

  0x00000214a6424b94: ;   {runtime_call I2C/C2I adapters}
  0x00000214a6424b94: 0000 e99b 

  0x00000214a6424b98: ;   {static_stub}
  0x00000214a6424b98: ff8e ff48 | bb00 0000 | 0000 0000 

  0x00000214a6424ba4: ;   {runtime_call nmethod}
  0x00000214a6424ba4: 00e9 fbff 

  0x00000214a6424ba8: ;   {static_stub}
  0x00000214a6424ba8: ffff 48bb | 0000 0000 | 0000 0000 

  0x00000214a6424bb4: ;   {runtime_call nmethod}
  0x00000214a6424bb4: e9fb ffff 

  0x00000214a6424bb8: ;   {static_stub}
  0x00000214a6424bb8: ff48 bb00 | 0000 0000 

  0x00000214a6424bc0: ;   {runtime_call nmethod}
  0x00000214a6424bc0: 0000 00e9 | fbff ffff 

  0x00000214a6424bc8: ;   {static_stub}
  0x00000214a6424bc8: 48bb 0000 | 0000 0000 

  0x00000214a6424bd0: ;   {runtime_call nmethod}
  0x00000214a6424bd0: 0000 e9fb 

  0x00000214a6424bd4: ;   {static_stub}
  0x00000214a6424bd4: ffff ff48 | bb00 0000 | 0000 0000 

  0x00000214a6424be0: ;   {runtime_call nmethod}
  0x00000214a6424be0: 00e9 fbff 

  0x00000214a6424be4: ;   {static_stub}
  0x00000214a6424be4: ffff 48bb | 0000 0000 | 0000 0000 

  0x00000214a6424bf0: ;   {runtime_call nmethod}
  0x00000214a6424bf0: e9fb ffff 

  0x00000214a6424bf4: ;   {static_stub}
  0x00000214a6424bf4: ff48 bb00 | 0000 0000 

  0x00000214a6424bfc: ;   {runtime_call nmethod}
  0x00000214a6424bfc: 0000 00e9 | fbff ffff 

  0x00000214a6424c04: ;   {static_stub}
  0x00000214a6424c04: 48bb 0000 | 0000 0000 

  0x00000214a6424c0c: ;   {runtime_call nmethod}
  0x00000214a6424c0c: 0000 e9fb 

  0x00000214a6424c10: ;   {static_stub}
  0x00000214a6424c10: ffff ff48 | bb00 0000 | 0000 0000 

  0x00000214a6424c1c: ;   {runtime_call nmethod}
  0x00000214a6424c1c: 00e9 fbff 

  0x00000214a6424c20: ;   {static_stub}
  0x00000214a6424c20: ffff 48bb | 0000 0000 | 0000 0000 

  0x00000214a6424c2c: ;   {runtime_call nmethod}
  0x00000214a6424c2c: e9fb ffff 

  0x00000214a6424c30: ;   {static_stub}
  0x00000214a6424c30: ff48 bb00 | 0000 0000 

  0x00000214a6424c38: ;   {runtime_call nmethod}
  0x00000214a6424c38: 0000 00e9 | fbff ffff 

  0x00000214a6424c40: ;   {static_stub}
  0x00000214a6424c40: 48bb 0000 | 0000 0000 

  0x00000214a6424c48: ;   {runtime_call nmethod}
  0x00000214a6424c48: 0000 e9fb 

  0x00000214a6424c4c: ;   {static_stub}
  0x00000214a6424c4c: ffff ff48 | bb00 0000 | 0000 0000 

  0x00000214a6424c58: ;   {runtime_call nmethod}
  0x00000214a6424c58: 00e9 fbff 

  0x00000214a6424c5c: ;   {static_stub}
  0x00000214a6424c5c: ffff 48bb | 0000 0000 | 0000 0000 

  0x00000214a6424c68: ;   {runtime_call nmethod}
  0x00000214a6424c68: e9fb ffff 

  0x00000214a6424c6c: ;   {static_stub}
  0x00000214a6424c6c: ff48 bb00 | 0000 0000 

  0x00000214a6424c74: ;   {runtime_call nmethod}
  0x00000214a6424c74: 0000 00e9 | fbff ffff 

  0x00000214a6424c7c: ;   {static_stub}
  0x00000214a6424c7c: 48bb 0000 | 0000 0000 

  0x00000214a6424c84: ;   {runtime_call nmethod}
  0x00000214a6424c84: 0000 e9fb 

  0x00000214a6424c88: ;   {static_stub}
  0x00000214a6424c88: ffff ff48 | bb00 0000 | 0000 0000 

  0x00000214a6424c94: ;   {runtime_call nmethod}
  0x00000214a6424c94: 00e9 fbff 

  0x00000214a6424c98: ;   {static_stub}
  0x00000214a6424c98: ffff 48bb | 0000 0000 | 0000 0000 

  0x00000214a6424ca4: ;   {runtime_call nmethod}
  0x00000214a6424ca4: e9fb ffff 

  0x00000214a6424ca8: ;   {static_stub}
  0x00000214a6424ca8: ff48 bb00 | 0000 0000 

  0x00000214a6424cb0: ;   {runtime_call nmethod}
  0x00000214a6424cb0: 0000 00e9 | fbff ffff 

  0x00000214a6424cb8: ;   {static_stub}
  0x00000214a6424cb8: 48bb 0000 | 0000 0000 

  0x00000214a6424cc0: ;   {runtime_call nmethod}
  0x00000214a6424cc0: 0000 e9fb 

  0x00000214a6424cc4: ;   {static_stub}
  0x00000214a6424cc4: ffff ff48 | bb00 0000 | 0000 0000 

  0x00000214a6424cd0: ;   {runtime_call nmethod}
  0x00000214a6424cd0: 00e9 fbff 

  0x00000214a6424cd4: ;   {static_stub}
  0x00000214a6424cd4: ffff 48bb | 0000 0000 | 0000 0000 

  0x00000214a6424ce0: ;   {runtime_call nmethod}
  0x00000214a6424ce0: e9fb ffff 

  0x00000214a6424ce4: ;   {static_stub}
  0x00000214a6424ce4: ff48 bb00 | 0000 0000 

  0x00000214a6424cec: ;   {runtime_call nmethod}
  0x00000214a6424cec: 0000 00e9 | fbff ffff 
[Exception Handler]
  0x00000214a6424cf4: ;   {runtime_call ExceptionBlob}
  0x00000214a6424cf4: e967 f69a | ffe8 0000 | 0000 4883 

  0x00000214a6424d00: ;   {runtime_call DeoptimizationBlob}
  0x00000214a6424d00: 2c24 05e9 | 7805 8fff 
[/MachCode]


---------------  P R O C E S S  ---------------

Threads class SMR info:
_java_thread_list=0x00000214faec9070, length=40, elements={
0x0000021493cd6e90, 0x00000214b498dd20, 0x00000214b49900a0, 0x00000214b4995f00,
0x00000214b4996a30, 0x00000214b4997d00, 0x00000214b4998fd0, 0x00000214b499efd0,
0x00000214b499fb70, 0x00000214b4a996c0, 0x00000214b4dc46e0, 0x00000214b4dc4e20,
0x00000214fb04f4d0, 0x00000214fa80c300, 0x00000214fa8064c0, 0x00000214fa19a2a0,
0x00000214fa19a9e0, 0x00000214fb54b1c0, 0x00000214fb54dda0, 0x00000214fb54aa70,
0x00000214fb54b910, 0x00000214fe344460, 0x00000214fe8c29f0, 0x00000214fa3dfd90,
0x00000214fe8c3140, 0x0000021486606660, 0x00000214fe8c1b50, 0x00000214fa3de7a0,
0x00000214fe8c0cb0, 0x00000214fa3df640, 0x00000214fa74d2a0, 0x00000214fa3e0c30,
0x0000021486606db0, 0x00000214fa3deef0, 0x00000214fa3e04e0, 0x00000214fa749820,
0x0000021486603a80, 0x00000214fa3dd900, 0x000002148992eaa0, 0x00000214866041d0
}

Java Threads: ( => current thread )
  0x0000021493cd6e90 JavaThread "main"                              [_thread_blocked, id=1648, stack(0x00000014db100000,0x00000014db200000) (1024K)]
  0x00000214b498dd20 JavaThread "Reference Handler"          daemon [_thread_blocked, id=5440, stack(0x00000014db900000,0x00000014dba00000) (1024K)]
  0x00000214b49900a0 JavaThread "Finalizer"                  daemon [_thread_blocked, id=4940, stack(0x00000014dba00000,0x00000014dbb00000) (1024K)]
  0x00000214b4995f00 JavaThread "Signal Dispatcher"          daemon [_thread_blocked, id=9688, stack(0x00000014dbb00000,0x00000014dbc00000) (1024K)]
  0x00000214b4996a30 JavaThread "Attach Listener"            daemon [_thread_blocked, id=1368, stack(0x00000014dbc00000,0x00000014dbd00000) (1024K)]
  0x00000214b4997d00 JavaThread "Service Thread"             daemon [_thread_blocked, id=7496, stack(0x00000014dbd00000,0x00000014dbe00000) (1024K)]
  0x00000214b4998fd0 JavaThread "Monitor Deflation Thread"   daemon [_thread_blocked, id=3672, stack(0x00000014dbe00000,0x00000014dbf00000) (1024K)]
  0x00000214b499efd0 JavaThread "C2 CompilerThread0"         daemon [_thread_blocked, id=9372, stack(0x00000014dbf00000,0x00000014dc000000) (1024K)]
  0x00000214b499fb70 JavaThread "C1 CompilerThread0"         daemon [_thread_blocked, id=10464, stack(0x00000014dc000000,0x00000014dc100000) (1024K)]
  0x00000214b4a996c0 JavaThread "Common-Cleaner"             daemon [_thread_blocked, id=9112, stack(0x00000014dc100000,0x00000014dc200000) (1024K)]
  0x00000214b4dc46e0 JavaThread "Monitor Ctrl-Break"         daemon [_thread_in_native, id=10500, stack(0x00000014dc300000,0x00000014dc400000) (1024K)]
  0x00000214b4dc4e20 JavaThread "Notification Thread"        daemon [_thread_blocked, id=4176, stack(0x00000014dc400000,0x00000014dc500000) (1024K)]
  0x00000214fb04f4d0 JavaThread "QuantumRenderer-0"          daemon [_thread_blocked, id=2020, stack(0x00000014dc500000,0x00000014dc600000) (1024K)]
  0x00000214fa80c300 JavaThread "InvokeLaterDispatcher"      daemon [_thread_blocked, id=5768, stack(0x00000014dc200000,0x00000014dc300000) (1024K)]
=>0x00000214fa8064c0 JavaThread "JavaFX Application Thread"         [_thread_in_vm, id=7916, stack(0x00000014dc600000,0x00000014dc700000) (1024K)]
  0x00000214fa19a2a0 JavaThread "Thread-1"                   daemon [_thread_blocked, id=5308, stack(0x00000014dcf00000,0x00000014dd000000) (1024K)]
  0x00000214fa19a9e0 JavaThread "JavaFX-Launcher"                   [_thread_blocked, id=972, stack(0x00000014dd000000,0x00000014dd100000) (1024K)]
  0x00000214fb54b1c0 JavaThread "Media Resource Disposer"    daemon [_thread_blocked, id=5348, stack(0x00000014dd500000,0x00000014dd600000) (1024K)]
  0x00000214fb54dda0 JavaThread "JFXMedia Player EventQueueThread" daemon [_thread_blocked, id=7760, stack(0x00000014dd700000,0x00000014dd800000) (1024K)]
  0x00000214fb54aa70 JavaThread "Prism Font Disposer"        daemon [_thread_blocked, id=10208, stack(0x00000014de000000,0x00000014de100000) (1024K)]
  0x00000214fb54b910 JavaThread "Cleaner-0"                  daemon [_thread_blocked, id=2324, stack(0x00000014dd400000,0x00000014dd500000) (1024K)]
  0x00000214fe344460 JavaThread "Thread-469"                 daemon [_thread_blocked, id=4500, stack(0x00000014de300000,0x00000014de400000) (1024K)]
  0x00000214fe8c29f0 JavaThread "JFXMedia Player EventQueueThread" daemon [_thread_blocked, id=10844, stack(0x00000014e2f00000,0x00000014e3000000) (1024K)]
  0x00000214fa3dfd90 JavaThread "JFXMedia Player EventQueueThread" daemon [_thread_blocked, id=1076, stack(0x00000014de800000,0x00000014de900000) (1024K)]
  0x00000214fe8c3140 JavaThread "JFXMedia Player EventQueueThread" daemon [_thread_blocked, id=4904, stack(0x00000014e3100000,0x00000014e3200000) (1024K)]
  0x0000021486606660 JavaThread "JFXMedia Player EventQueueThread" daemon [_thread_blocked, id=2272, stack(0x00000014def00000,0x00000014df000000) (1024K)]
  0x00000214fe8c1b50 JavaThread "JFXMedia Player EventQueueThread" daemon [_thread_blocked, id=7628, stack(0x00000014df300000,0x00000014df400000) (1024K)]
  0x00000214fa3de7a0 JavaThread "JFXMedia Player EventQueueThread" daemon [_thread_blocked, id=5552, stack(0x00000014df700000,0x00000014df800000) (1024K)]
  0x00000214fe8c0cb0 JavaThread "JFXMedia Player EventQueueThread" daemon [_thread_blocked, id=5784, stack(0x00000014e3700000,0x00000014e3800000) (1024K)]
  0x00000214fa3df640 JavaThread "JFXMedia Player EventQueueThread" daemon [_thread_blocked, id=3488, stack(0x00000014e3600000,0x00000014e3700000) (1024K)]
  0x00000214fa74d2a0 JavaThread "JFXMedia Player EventQueueThread" daemon [_thread_blocked, id=8604, stack(0x00000014e0100000,0x00000014e0200000) (1024K)]
  0x00000214fa3e0c30 JavaThread "JFXMedia Player EventQueueThread" daemon [_thread_blocked, id=1344, stack(0x00000014e0c00000,0x00000014e0d00000) (1024K)]
  0x0000021486606db0 JavaThread "JFXMedia Player EventQueueThread" daemon [_thread_blocked, id=8836, stack(0x00000014e1000000,0x00000014e1100000) (1024K)]
  0x00000214fa3deef0 JavaThread "JFXMedia Player EventQueueThread" daemon [_thread_blocked, id=1404, stack(0x00000014e1300000,0x00000014e1400000) (1024K)]
  0x00000214fa3e04e0 JavaThread "JFXMedia Player EventQueueThread" daemon [_thread_blocked, id=6956, stack(0x00000014e0b00000,0x00000014e0c00000) (1024K)]
  0x00000214fa749820 JavaThread "JFXMedia Player EventQueueThread" daemon [_thread_blocked, id=8296, stack(0x00000014e1500000,0x00000014e1600000) (1024K)]
  0x0000021486603a80 JavaThread "JFXMedia Player EventQueueThread" daemon [_thread_blocked, id=3108, stack(0x00000014e1d00000,0x00000014e1e00000) (1024K)]
  0x00000214fa3dd900 JavaThread "JFXMedia Player EventQueueThread" daemon [_thread_blocked, id=200, stack(0x00000014e2c00000,0x00000014e2d00000) (1024K)]
  0x000002148992eaa0 JavaThread "C2 CompilerThread1"         daemon [_thread_blocked, id=4112, stack(0x00000014e2800000,0x00000014e2900000) (1024K)]
  0x00000214866041d0 JavaThread "Unknown thread"             [_thread_blocked, id=6012, stack(0x00000014e0200000,0x00000014e0300000) (1024K)]
Total: 40

Other Threads:
  0x00000214b4980560 VMThread "VM Thread"                           [id=3160, stack(0x00000014db800000,0x00000014db900000) (1024K)] _threads_hazard_ptr=0x00000214faec9070
  0x00000214b4974d80 WatcherThread "VM Periodic Task Thread"        [id=11092, stack(0x00000014db700000,0x00000014db800000) (1024K)]
  0x0000021495f543d0 WorkerThread "GC Thread#0"                     [id=8920, stack(0x00000014db200000,0x00000014db300000) (1024K)]
  0x00000214fa54ccc0 WorkerThread "GC Thread#1"                     [id=5388, stack(0x00000014dd100000,0x00000014dd200000) (1024K)]
  0x00000214fa588880 WorkerThread "GC Thread#2"                     [id=1504, stack(0x00000014dd200000,0x00000014dd300000) (1024K)]
  0x00000214fa588c30 WorkerThread "GC Thread#3"                     [id=6592, stack(0x00000014dd300000,0x00000014dd400000) (1024K)]
  0x0000021495f68480 ConcurrentGCThread "G1 Main Marker"            [id=10148, stack(0x00000014db300000,0x00000014db400000) (1024K)]
  0x0000021495f68f90 WorkerThread "G1 Conc#0"                       [id=10144, stack(0x00000014db400000,0x00000014db500000) (1024K)]
  0x00000214b4843560 ConcurrentGCThread "G1 Refine#0"               [id=11044, stack(0x00000014db500000,0x00000014db600000) (1024K)]
  0x00000214b4843f80 ConcurrentGCThread "G1 Service"                [id=6912, stack(0x00000014db600000,0x00000014db700000) (1024K)]
Total: 10

Threads with active compile tasks:
Total: 0

VM state: synchronizing (normal execution)

VM Mutex/Monitor currently owned by a thread:  ([mutex/lock_event])
[0x00007ff9bd3644b0] Threads_lock - owner thread: 0x00000214b4980560
[0x00007ff9bd3645b0] Heap_lock - owner thread: 0x00000214866041d0

OutOfMemory and StackOverflow Exception counts:
StackOverflowErrors=564
LinkageErrors=30

Heap address: 0x000000070c800000, size: 3896 MB, Compressed Oops mode: Zero based, Oop shift amount: 3

CDS archive(s) mapped at: [0x00000214b5000000-0x00000214b5d40000-0x00000214b5d40000), size 13893632, SharedBaseAddress: 0x00000214b5000000, ArchiveRelocationMode: 1.
Compressed class space mapped at: 0x00000214b6000000-0x00000214f6000000, reserved size: 1073741824
UseCompressedClassPointers 1, UseCompactObjectHeaders 0
Narrow klass pointer bits 32, Max shift 3
Narrow klass base: 0x00000214b5000000, Narrow klass shift: 0
Encoding Range: [0x00000214b5000000 - 0x00000215b5000000), (4294967296 bytes)
Klass Range:    [0x00000214b5000000 - 0x00000214f6000000), (1090519040 bytes)
Klass ID Range:  [8 - 1090519033) (1090519025)

GC Precious Log:
 CardTable entry size: 512
 Card Set container configuration: InlinePtr #cards 4 size 8 Array Of Cards #cards 16 size 48 Howl #buckets 8 coarsen threshold 3686 Howl Bitmap #cards 512 size 80 coarsen threshold 460 Card regions per heap region 1 cards per card region 4096
 CPUs: 4 total, 4 available
 Memory: 15579M
 Large Page Support: Disabled
 NUMA Support: Disabled
 Compressed Oops: Enabled (Zero based)
 Heap Region Size: 2M
 Heap Min Capacity: 8M
 Heap Initial Capacity: 244M
 Heap Max Capacity: 3896M
 Pre-touch: Disabled
 Parallel Workers: 4
 Concurrent Workers: 1
 Concurrent Refinement Workers: 4
 Periodic GC: Disabled

Heap:
 garbage-first heap   total reserved 3989504K, committed 1558528K, used 957807K [0x000000070c800000, 0x0000000800000000)
  region size 2048K, 456 young (933888K), 3 survivors (6144K)
 Metaspace       used 17199K, committed 17408K, reserved 1114112K
  class space    used 2063K, committed 2176K, reserved 1048576K

Heap Regions: E=young(eden), S=young(survivor), O=old, HS=humongous(starts), HC=humongous(continues), CS=collection set, F=free, TAMS=top-at-mark-start, PB=parsable bottom
|   0|0x000000070c800000, 0x000000070ca00000, 0x000000070ca00000|100%|HS|  |TAMS 0x000000070c800000| PB 0x000000070c800000| Complete |  0
|   1|0x000000070ca00000, 0x000000070cc00000, 0x000000070cc00000|100%|HC|  |TAMS 0x000000070ca00000| PB 0x000000070ca00000| Complete |  0
|   2|0x000000070cc00000, 0x000000070ce00000, 0x000000070ce00000|100%|HS|  |TAMS 0x000000070cc00000| PB 0x000000070cc00000| Complete |  0
|   3|0x000000070ce00000, 0x000000070d000000, 0x000000070d000000|100%|HS|  |TAMS 0x000000070ce00000| PB 0x000000070ce00000| Complete |  0
|   4|0x000000070d000000, 0x000000070d200000, 0x000000070d200000|100%|HS|  |TAMS 0x000000070d000000| PB 0x000000070d000000| Complete |  0
|   5|0x000000070d200000, 0x000000070d400000, 0x000000070d400000|100%| O|  |TAMS 0x000000070d200000| PB 0x000000070d200000| Untracked |  0
|   6|0x000000070d400000, 0x000000070d600000, 0x000000070d600000|100%| O|  |TAMS 0x000000070d400000| PB 0x000000070d400000| Untracked |  0
|   7|0x000000070d600000, 0x000000070d800000, 0x000000070d800000|100%| O|  |TAMS 0x000000070d600000| PB 0x000000070d600000| Untracked |  0
|   8|0x000000070d800000, 0x000000070da00000, 0x000000070da00000|100%| O|  |TAMS 0x000000070d800000| PB 0x000000070d800000| Untracked |  0
|   9|0x000000070da00000, 0x000000070dc00000, 0x000000070dc00000|100%| O|  |TAMS 0x000000070da00000| PB 0x000000070da00000| Untracked |  0
|  10|0x000000070dc00000, 0x000000070de00000, 0x000000070de00000|100%| O|  |TAMS 0x000000070dc00000| PB 0x000000070dc00000| Untracked |  0
|  11|0x000000070de00000, 0x000000070df65a50, 0x000000070e000000| 69%| O|  |TAMS 0x000000070de00000| PB 0x000000070de00000| Untracked |  0
|  12|0x000000070e000000, 0x000000070e000000, 0x000000070e200000|  0%| F|  |TAMS 0x000000070e000000| PB 0x000000070e000000| Untracked |  0
|  13|0x000000070e200000, 0x000000070e200000, 0x000000070e400000|  0%| F|  |TAMS 0x000000070e200000| PB 0x000000070e200000| Untracked |  0
|  14|0x000000070e400000, 0x000000070e400000, 0x000000070e600000|  0%| F|  |TAMS 0x000000070e400000| PB 0x000000070e400000| Untracked |  0
|  15|0x000000070e600000, 0x000000070e600000, 0x000000070e800000|  0%| F|  |TAMS 0x000000070e600000| PB 0x000000070e600000| Untracked |  0
|  16|0x000000070e800000, 0x000000070e800000, 0x000000070ea00000|  0%| F|  |TAMS 0x000000070e800000| PB 0x000000070e800000| Untracked |  0
|  17|0x000000070ea00000, 0x000000070ea00000, 0x000000070ec00000|  0%| F|  |TAMS 0x000000070ea00000| PB 0x000000070ea00000| Untracked |  0
|  18|0x000000070ec00000, 0x000000070ec00000, 0x000000070ee00000|  0%| F|  |TAMS 0x000000070ec00000| PB 0x000000070ec00000| Untracked |  0
|  19|0x000000070ee00000, 0x000000070ee00000, 0x000000070f000000|  0%| F|  |TAMS 0x000000070ee00000| PB 0x000000070ee00000| Untracked |  0
|  20|0x000000070f000000, 0x000000070f000000, 0x000000070f200000|  0%| F|  |TAMS 0x000000070f000000| PB 0x000000070f000000| Untracked |  0
|  21|0x000000070f200000, 0x000000070f200000, 0x000000070f400000|  0%| F|  |TAMS 0x000000070f200000| PB 0x000000070f200000| Untracked |  0
|  22|0x000000070f400000, 0x000000070f400000, 0x000000070f600000|  0%| F|  |TAMS 0x000000070f400000| PB 0x000000070f400000| Untracked |  0
|  23|0x000000070f600000, 0x000000070f600000, 0x000000070f800000|  0%| F|  |TAMS 0x000000070f600000| PB 0x000000070f600000| Untracked |  0
|  24|0x000000070f800000, 0x000000070f800000, 0x000000070fa00000|  0%| F|  |TAMS 0x000000070f800000| PB 0x000000070f800000| Untracked |  0
|  25|0x000000070fa00000, 0x000000070fa00000, 0x000000070fc00000|  0%| F|  |TAMS 0x000000070fa00000| PB 0x000000070fa00000| Untracked |  0
|  26|0x000000070fc00000, 0x000000070fc00000, 0x000000070fe00000|  0%| F|  |TAMS 0x000000070fc00000| PB 0x000000070fc00000| Untracked |  0
|  27|0x000000070fe00000, 0x000000070fe00000, 0x0000000710000000|  0%| F|  |TAMS 0x000000070fe00000| PB 0x000000070fe00000| Untracked |  0
|  28|0x0000000710000000, 0x0000000710000000, 0x0000000710200000|  0%| F|  |TAMS 0x0000000710000000| PB 0x0000000710000000| Untracked |  0
|  29|0x0000000710200000, 0x0000000710200000, 0x0000000710400000|  0%| F|  |TAMS 0x0000000710200000| PB 0x0000000710200000| Untracked |  0
|  30|0x0000000710400000, 0x0000000710400000, 0x0000000710600000|  0%| F|  |TAMS 0x0000000710400000| PB 0x0000000710400000| Untracked |  0
|  31|0x0000000710600000, 0x0000000710600000, 0x0000000710800000|  0%| F|  |TAMS 0x0000000710600000| PB 0x0000000710600000| Untracked |  0
|  32|0x0000000710800000, 0x0000000710800000, 0x0000000710a00000|  0%| F|  |TAMS 0x0000000710800000| PB 0x0000000710800000| Untracked |  0
|  33|0x0000000710a00000, 0x0000000710a00000, 0x0000000710c00000|  0%| F|  |TAMS 0x0000000710a00000| PB 0x0000000710a00000| Untracked |  0
|  34|0x0000000710c00000, 0x0000000710c00000, 0x0000000710e00000|  0%| F|  |TAMS 0x0000000710c00000| PB 0x0000000710c00000| Untracked |  0
|  35|0x0000000710e00000, 0x0000000710e00000, 0x0000000711000000|  0%| F|  |TAMS 0x0000000710e00000| PB 0x0000000710e00000| Untracked |  0
|  36|0x0000000711000000, 0x0000000711000000, 0x0000000711200000|  0%| F|  |TAMS 0x0000000711000000| PB 0x0000000711000000| Untracked |  0
|  37|0x0000000711200000, 0x0000000711200000, 0x0000000711400000|  0%| F|  |TAMS 0x0000000711200000| PB 0x0000000711200000| Untracked |  0
|  38|0x0000000711400000, 0x0000000711400000, 0x0000000711600000|  0%| F|  |TAMS 0x0000000711400000| PB 0x0000000711400000| Untracked |  0
|  39|0x0000000711600000, 0x0000000711600000, 0x0000000711800000|  0%| F|  |TAMS 0x0000000711600000| PB 0x0000000711600000| Untracked |  0
|  40|0x0000000711800000, 0x0000000711800000, 0x0000000711a00000|  0%| F|  |TAMS 0x0000000711800000| PB 0x0000000711800000| Untracked |  0
|  41|0x0000000711a00000, 0x0000000711a00000, 0x0000000711c00000|  0%| F|  |TAMS 0x0000000711a00000| PB 0x0000000711a00000| Untracked |  0
|  42|0x0000000711c00000, 0x0000000711c00000, 0x0000000711e00000|  0%| F|  |TAMS 0x0000000711c00000| PB 0x0000000711c00000| Untracked |  0
|  43|0x0000000711e00000, 0x0000000711e00000, 0x0000000712000000|  0%| F|  |TAMS 0x0000000711e00000| PB 0x0000000711e00000| Untracked |  0
|  44|0x0000000712000000, 0x0000000712000000, 0x0000000712200000|  0%| F|  |TAMS 0x0000000712000000| PB 0x0000000712000000| Untracked |  0
|  45|0x0000000712200000, 0x0000000712200000, 0x0000000712400000|  0%| F|  |TAMS 0x0000000712200000| PB 0x0000000712200000| Untracked |  0
|  46|0x0000000712400000, 0x0000000712400000, 0x0000000712600000|  0%| F|  |TAMS 0x0000000712400000| PB 0x0000000712400000| Untracked |  0
|  47|0x0000000712600000, 0x0000000712600000, 0x0000000712800000|  0%| F|  |TAMS 0x0000000712600000| PB 0x0000000712600000| Untracked |  0
|  48|0x0000000712800000, 0x0000000712800000, 0x0000000712a00000|  0%| F|  |TAMS 0x0000000712800000| PB 0x0000000712800000| Untracked |  0
|  49|0x0000000712a00000, 0x0000000712a00000, 0x0000000712c00000|  0%| F|  |TAMS 0x0000000712a00000| PB 0x0000000712a00000| Untracked |  0
|  50|0x0000000712c00000, 0x0000000712c00000, 0x0000000712e00000|  0%| F|  |TAMS 0x0000000712c00000| PB 0x0000000712c00000| Untracked |  0
|  51|0x0000000712e00000, 0x0000000712e00000, 0x0000000713000000|  0%| F|  |TAMS 0x0000000712e00000| PB 0x0000000712e00000| Untracked |  0
|  52|0x0000000713000000, 0x0000000713000000, 0x0000000713200000|  0%| F|  |TAMS 0x0000000713000000| PB 0x0000000713000000| Untracked |  0
|  53|0x0000000713200000, 0x0000000713200000, 0x0000000713400000|  0%| F|  |TAMS 0x0000000713200000| PB 0x0000000713200000| Untracked |  0
|  54|0x0000000713400000, 0x0000000713400000, 0x0000000713600000|  0%| F|  |TAMS 0x0000000713400000| PB 0x0000000713400000| Untracked |  0
|  55|0x0000000713600000, 0x0000000713600000, 0x0000000713800000|  0%| F|  |TAMS 0x0000000713600000| PB 0x0000000713600000| Untracked |  0
|  56|0x0000000713800000, 0x0000000713800000, 0x0000000713a00000|  0%| F|  |TAMS 0x0000000713800000| PB 0x0000000713800000| Untracked |  0
|  57|0x0000000713a00000, 0x0000000713a00000, 0x0000000713c00000|  0%| F|  |TAMS 0x0000000713a00000| PB 0x0000000713a00000| Untracked |  0
|  58|0x0000000713c00000, 0x0000000713c00000, 0x0000000713e00000|  0%| F|  |TAMS 0x0000000713c00000| PB 0x0000000713c00000| Untracked |  0
|  59|0x0000000713e00000, 0x0000000713e00000, 0x0000000714000000|  0%| F|  |TAMS 0x0000000713e00000| PB 0x0000000713e00000| Untracked |  0
|  60|0x0000000714000000, 0x0000000714000000, 0x0000000714200000|  0%| F|  |TAMS 0x0000000714000000| PB 0x0000000714000000| Untracked |  0
|  61|0x0000000714200000, 0x0000000714200000, 0x0000000714400000|  0%| F|  |TAMS 0x0000000714200000| PB 0x0000000714200000| Untracked |  0
|  62|0x0000000714400000, 0x0000000714400000, 0x0000000714600000|  0%| F|  |TAMS 0x0000000714400000| PB 0x0000000714400000| Untracked |  0
|  63|0x0000000714600000, 0x0000000714600000, 0x0000000714800000|  0%| F|  |TAMS 0x0000000714600000| PB 0x0000000714600000| Untracked |  0
|  64|0x0000000714800000, 0x0000000714800000, 0x0000000714a00000|  0%| F|  |TAMS 0x0000000714800000| PB 0x0000000714800000| Untracked |  0
|  65|0x0000000714a00000, 0x0000000714a00000, 0x0000000714c00000|  0%| F|  |TAMS 0x0000000714a00000| PB 0x0000000714a00000| Untracked |  0
|  66|0x0000000714c00000, 0x0000000714c00000, 0x0000000714e00000|  0%| F|  |TAMS 0x0000000714c00000| PB 0x0000000714c00000| Untracked |  0
|  67|0x0000000714e00000, 0x0000000714e00000, 0x0000000715000000|  0%| F|  |TAMS 0x0000000714e00000| PB 0x0000000714e00000| Untracked |  0
|  68|0x0000000715000000, 0x0000000715000000, 0x0000000715200000|  0%| F|  |TAMS 0x0000000715000000| PB 0x0000000715000000| Untracked |  0
|  69|0x0000000715200000, 0x0000000715200000, 0x0000000715400000|  0%| F|  |TAMS 0x0000000715200000| PB 0x0000000715200000| Untracked |  0
|  70|0x0000000715400000, 0x0000000715400000, 0x0000000715600000|  0%| F|  |TAMS 0x0000000715400000| PB 0x0000000715400000| Untracked |  0
|  71|0x0000000715600000, 0x0000000715600000, 0x0000000715800000|  0%| F|  |TAMS 0x0000000715600000| PB 0x0000000715600000| Untracked |  0
|  72|0x0000000715800000, 0x0000000715800000, 0x0000000715a00000|  0%| F|  |TAMS 0x0000000715800000| PB 0x0000000715800000| Untracked |  0
|  73|0x0000000715a00000, 0x0000000715a00000, 0x0000000715c00000|  0%| F|  |TAMS 0x0000000715a00000| PB 0x0000000715a00000| Untracked |  0
|  74|0x0000000715c00000, 0x0000000715c00000, 0x0000000715e00000|  0%| F|  |TAMS 0x0000000715c00000| PB 0x0000000715c00000| Untracked |  0
|  75|0x0000000715e00000, 0x0000000715e00000, 0x0000000716000000|  0%| F|  |TAMS 0x0000000715e00000| PB 0x0000000715e00000| Untracked |  0
|  76|0x0000000716000000, 0x0000000716000000, 0x0000000716200000|  0%| F|  |TAMS 0x0000000716000000| PB 0x0000000716000000| Untracked |  0
|  77|0x0000000716200000, 0x0000000716200000, 0x0000000716400000|  0%| F|  |TAMS 0x0000000716200000| PB 0x0000000716200000| Untracked |  0
|  78|0x0000000716400000, 0x0000000716400000, 0x0000000716600000|  0%| F|  |TAMS 0x0000000716400000| PB 0x0000000716400000| Untracked |  0
|  79|0x0000000716600000, 0x0000000716600000, 0x0000000716800000|  0%| F|  |TAMS 0x0000000716600000| PB 0x0000000716600000| Untracked |  0
|  80|0x0000000716800000, 0x0000000716800000, 0x0000000716a00000|  0%| F|  |TAMS 0x0000000716800000| PB 0x0000000716800000| Untracked |  0
|  81|0x0000000716a00000, 0x0000000716a00000, 0x0000000716c00000|  0%| F|  |TAMS 0x0000000716a00000| PB 0x0000000716a00000| Untracked |  0
|  82|0x0000000716c00000, 0x0000000716c00000, 0x0000000716e00000|  0%| F|  |TAMS 0x0000000716c00000| PB 0x0000000716c00000| Untracked |  0
|  83|0x0000000716e00000, 0x0000000716e00000, 0x0000000717000000|  0%| F|  |TAMS 0x0000000716e00000| PB 0x0000000716e00000| Untracked |  0
|  84|0x0000000717000000, 0x0000000717000000, 0x0000000717200000|  0%| F|  |TAMS 0x0000000717000000| PB 0x0000000717000000| Untracked |  0
|  85|0x0000000717200000, 0x0000000717200000, 0x0000000717400000|  0%| F|  |TAMS 0x0000000717200000| PB 0x0000000717200000| Untracked |  0
|  86|0x0000000717400000, 0x0000000717400000, 0x0000000717600000|  0%| F|  |TAMS 0x0000000717400000| PB 0x0000000717400000| Untracked |  0
|  87|0x0000000717600000, 0x0000000717600000, 0x0000000717800000|  0%| F|  |TAMS 0x0000000717600000| PB 0x0000000717600000| Untracked |  0
|  88|0x0000000717800000, 0x0000000717800000, 0x0000000717a00000|  0%| F|  |TAMS 0x0000000717800000| PB 0x0000000717800000| Untracked |  0
|  89|0x0000000717a00000, 0x0000000717a00000, 0x0000000717c00000|  0%| F|  |TAMS 0x0000000717a00000| PB 0x0000000717a00000| Untracked |  0
|  90|0x0000000717c00000, 0x0000000717c00000, 0x0000000717e00000|  0%| F|  |TAMS 0x0000000717c00000| PB 0x0000000717c00000| Untracked |  0
|  91|0x0000000717e00000, 0x0000000717e00000, 0x0000000718000000|  0%| F|  |TAMS 0x0000000717e00000| PB 0x0000000717e00000| Untracked |  0
|  92|0x0000000718000000, 0x0000000718000000, 0x0000000718200000|  0%| F|  |TAMS 0x0000000718000000| PB 0x0000000718000000| Untracked |  0
|  93|0x0000000718200000, 0x0000000718200000, 0x0000000718400000|  0%| F|  |TAMS 0x0000000718200000| PB 0x0000000718200000| Untracked |  0
|  94|0x0000000718400000, 0x0000000718400000, 0x0000000718600000|  0%| F|  |TAMS 0x0000000718400000| PB 0x0000000718400000| Untracked |  0
|  95|0x0000000718600000, 0x0000000718600000, 0x0000000718800000|  0%| F|  |TAMS 0x0000000718600000| PB 0x0000000718600000| Untracked |  0
|  96|0x0000000718800000, 0x0000000718800000, 0x0000000718a00000|  0%| F|  |TAMS 0x0000000718800000| PB 0x0000000718800000| Untracked |  0
|  97|0x0000000718a00000, 0x0000000718a00000, 0x0000000718c00000|  0%| F|  |TAMS 0x0000000718a00000| PB 0x0000000718a00000| Untracked |  0
|  98|0x0000000718c00000, 0x0000000718c00000, 0x0000000718e00000|  0%| F|  |TAMS 0x0000000718c00000| PB 0x0000000718c00000| Untracked |  0
|  99|0x0000000718e00000, 0x0000000718e00000, 0x0000000719000000|  0%| F|  |TAMS 0x0000000718e00000| PB 0x0000000718e00000| Untracked |  0
| 100|0x0000000719000000, 0x0000000719000000, 0x0000000719200000|  0%| F|  |TAMS 0x0000000719000000| PB 0x0000000719000000| Untracked |  0
| 101|0x0000000719200000, 0x0000000719200000, 0x0000000719400000|  0%| F|  |TAMS 0x0000000719200000| PB 0x0000000719200000| Untracked |  0
| 102|0x0000000719400000, 0x0000000719400000, 0x0000000719600000|  0%| F|  |TAMS 0x0000000719400000| PB 0x0000000719400000| Untracked |  0
| 103|0x0000000719600000, 0x0000000719600000, 0x0000000719800000|  0%| F|  |TAMS 0x0000000719600000| PB 0x0000000719600000| Untracked |  0
| 104|0x0000000719800000, 0x0000000719800000, 0x0000000719a00000|  0%| F|  |TAMS 0x0000000719800000| PB 0x0000000719800000| Untracked |  0
| 105|0x0000000719a00000, 0x0000000719a00000, 0x0000000719c00000|  0%| F|  |TAMS 0x0000000719a00000| PB 0x0000000719a00000| Untracked |  0
| 106|0x0000000719c00000, 0x0000000719c00000, 0x0000000719e00000|  0%| F|  |TAMS 0x0000000719c00000| PB 0x0000000719c00000| Untracked |  0
| 107|0x0000000719e00000, 0x0000000719e00000, 0x000000071a000000|  0%| F|  |TAMS 0x0000000719e00000| PB 0x0000000719e00000| Untracked |  0
| 108|0x000000071a000000, 0x000000071a000000, 0x000000071a200000|  0%| F|  |TAMS 0x000000071a000000| PB 0x000000071a000000| Untracked |  0
| 109|0x000000071a200000, 0x000000071a200000, 0x000000071a400000|  0%| F|  |TAMS 0x000000071a200000| PB 0x000000071a200000| Untracked |  0
| 110|0x000000071a400000, 0x000000071a400000, 0x000000071a600000|  0%| F|  |TAMS 0x000000071a400000| PB 0x000000071a400000| Untracked |  0
| 111|0x000000071a600000, 0x000000071a600000, 0x000000071a800000|  0%| F|  |TAMS 0x000000071a600000| PB 0x000000071a600000| Untracked |  0
| 112|0x000000071a800000, 0x000000071a800000, 0x000000071aa00000|  0%| F|  |TAMS 0x000000071a800000| PB 0x000000071a800000| Untracked |  0
| 113|0x000000071aa00000, 0x000000071aa00000, 0x000000071ac00000|  0%| F|  |TAMS 0x000000071aa00000| PB 0x000000071aa00000| Untracked |  0
| 114|0x000000071ac00000, 0x000000071ac00000, 0x000000071ae00000|  0%| F|  |TAMS 0x000000071ac00000| PB 0x000000071ac00000| Untracked |  0
| 115|0x000000071ae00000, 0x000000071ae00000, 0x000000071b000000|  0%| F|  |TAMS 0x000000071ae00000| PB 0x000000071ae00000| Untracked |  0
| 116|0x000000071b000000, 0x000000071b000000, 0x000000071b200000|  0%| F|  |TAMS 0x000000071b000000| PB 0x000000071b000000| Untracked |  0
| 117|0x000000071b200000, 0x000000071b200000, 0x000000071b400000|  0%| F|  |TAMS 0x000000071b200000| PB 0x000000071b200000| Untracked |  0
| 118|0x000000071b400000, 0x000000071b400000, 0x000000071b600000|  0%| F|  |TAMS 0x000000071b400000| PB 0x000000071b400000| Untracked |  0
| 119|0x000000071b600000, 0x000000071b600000, 0x000000071b800000|  0%| F|  |TAMS 0x000000071b600000| PB 0x000000071b600000| Untracked |  0
| 120|0x000000071b800000, 0x000000071b800000, 0x000000071ba00000|  0%| F|  |TAMS 0x000000071b800000| PB 0x000000071b800000| Untracked |  0
| 121|0x000000071ba00000, 0x000000071ba00000, 0x000000071bc00000|  0%| F|  |TAMS 0x000000071ba00000| PB 0x000000071ba00000| Untracked |  0
| 122|0x000000071bc00000, 0x000000071bc00000, 0x000000071be00000|  0%| F|  |TAMS 0x000000071bc00000| PB 0x000000071bc00000| Untracked |  0
| 123|0x000000071be00000, 0x000000071be00000, 0x000000071c000000|  0%| F|  |TAMS 0x000000071be00000| PB 0x000000071be00000| Untracked |  0
| 124|0x000000071c000000, 0x000000071c000000, 0x000000071c200000|  0%| F|  |TAMS 0x000000071c000000| PB 0x000000071c000000| Untracked |  0
| 125|0x000000071c200000, 0x000000071c200000, 0x000000071c400000|  0%| F|  |TAMS 0x000000071c200000| PB 0x000000071c200000| Untracked |  0
| 126|0x000000071c400000, 0x000000071c400000, 0x000000071c600000|  0%| F|  |TAMS 0x000000071c400000| PB 0x000000071c400000| Untracked |  0
| 127|0x000000071c600000, 0x000000071c600000, 0x000000071c800000|  0%| F|  |TAMS 0x000000071c600000| PB 0x000000071c600000| Untracked |  0
| 128|0x000000071c800000, 0x000000071c800000, 0x000000071ca00000|  0%| F|  |TAMS 0x000000071c800000| PB 0x000000071c800000| Untracked |  0
| 129|0x000000071ca00000, 0x000000071ca00000, 0x000000071cc00000|  0%| F|  |TAMS 0x000000071ca00000| PB 0x000000071ca00000| Untracked |  0
| 130|0x000000071cc00000, 0x000000071cc00000, 0x000000071ce00000|  0%| F|  |TAMS 0x000000071cc00000| PB 0x000000071cc00000| Untracked |  0
| 131|0x000000071ce00000, 0x000000071ce00000, 0x000000071d000000|  0%| F|  |TAMS 0x000000071ce00000| PB 0x000000071ce00000| Untracked |  0
| 132|0x000000071d000000, 0x000000071d000000, 0x000000071d200000|  0%| F|  |TAMS 0x000000071d000000| PB 0x000000071d000000| Untracked |  0
| 133|0x000000071d200000, 0x000000071d200000, 0x000000071d400000|  0%| F|  |TAMS 0x000000071d200000| PB 0x000000071d200000| Untracked |  0
| 134|0x000000071d400000, 0x000000071d400000, 0x000000071d600000|  0%| F|  |TAMS 0x000000071d400000| PB 0x000000071d400000| Untracked |  0
| 135|0x000000071d600000, 0x000000071d600000, 0x000000071d800000|  0%| F|  |TAMS 0x000000071d600000| PB 0x000000071d600000| Untracked |  0
| 136|0x000000071d800000, 0x000000071d800000, 0x000000071da00000|  0%| F|  |TAMS 0x000000071d800000| PB 0x000000071d800000| Untracked |  0
| 137|0x000000071da00000, 0x000000071da00000, 0x000000071dc00000|  0%| F|  |TAMS 0x000000071da00000| PB 0x000000071da00000| Untracked |  0
| 138|0x000000071dc00000, 0x000000071dc00000, 0x000000071de00000|  0%| F|  |TAMS 0x000000071dc00000| PB 0x000000071dc00000| Untracked |  0
| 139|0x000000071de00000, 0x000000071de00000, 0x000000071e000000|  0%| F|  |TAMS 0x000000071de00000| PB 0x000000071de00000| Untracked |  0
| 140|0x000000071e000000, 0x000000071e000000, 0x000000071e200000|  0%| F|  |TAMS 0x000000071e000000| PB 0x000000071e000000| Untracked |  0
| 141|0x000000071e200000, 0x000000071e200000, 0x000000071e400000|  0%| F|  |TAMS 0x000000071e200000| PB 0x000000071e200000| Untracked |  0
| 142|0x000000071e400000, 0x000000071e400000, 0x000000071e600000|  0%| F|  |TAMS 0x000000071e400000| PB 0x000000071e400000| Untracked |  0
| 143|0x000000071e600000, 0x000000071e600000, 0x000000071e800000|  0%| F|  |TAMS 0x000000071e600000| PB 0x000000071e600000| Untracked |  0
| 144|0x000000071e800000, 0x000000071e800000, 0x000000071ea00000|  0%| F|  |TAMS 0x000000071e800000| PB 0x000000071e800000| Untracked |  0
| 145|0x000000071ea00000, 0x000000071ea00000, 0x000000071ec00000|  0%| F|  |TAMS 0x000000071ea00000| PB 0x000000071ea00000| Untracked |  0
| 146|0x000000071ec00000, 0x000000071ec00000, 0x000000071ee00000|  0%| F|  |TAMS 0x000000071ec00000| PB 0x000000071ec00000| Untracked |  0
| 147|0x000000071ee00000, 0x000000071ee00000, 0x000000071f000000|  0%| F|  |TAMS 0x000000071ee00000| PB 0x000000071ee00000| Untracked |  0
| 148|0x000000071f000000, 0x000000071f000000, 0x000000071f200000|  0%| F|  |TAMS 0x000000071f000000| PB 0x000000071f000000| Untracked |  0
| 149|0x000000071f200000, 0x000000071f200000, 0x000000071f400000|  0%| F|  |TAMS 0x000000071f200000| PB 0x000000071f200000| Untracked |  0
| 150|0x000000071f400000, 0x000000071f400000, 0x000000071f600000|  0%| F|  |TAMS 0x000000071f400000| PB 0x000000071f400000| Untracked |  0
| 151|0x000000071f600000, 0x000000071f600000, 0x000000071f800000|  0%| F|  |TAMS 0x000000071f600000| PB 0x000000071f600000| Untracked |  0
| 152|0x000000071f800000, 0x000000071f800000, 0x000000071fa00000|  0%| F|  |TAMS 0x000000071f800000| PB 0x000000071f800000| Untracked |  0
| 153|0x000000071fa00000, 0x000000071fa00000, 0x000000071fc00000|  0%| F|  |TAMS 0x000000071fa00000| PB 0x000000071fa00000| Untracked |  0
| 154|0x000000071fc00000, 0x000000071fc00000, 0x000000071fe00000|  0%| F|  |TAMS 0x000000071fc00000| PB 0x000000071fc00000| Untracked |  0
| 155|0x000000071fe00000, 0x000000071fe00000, 0x0000000720000000|  0%| F|  |TAMS 0x000000071fe00000| PB 0x000000071fe00000| Untracked |  0
| 156|0x0000000720000000, 0x0000000720000000, 0x0000000720200000|  0%| F|  |TAMS 0x0000000720000000| PB 0x0000000720000000| Untracked |  0
| 157|0x0000000720200000, 0x0000000720200000, 0x0000000720400000|  0%| F|  |TAMS 0x0000000720200000| PB 0x0000000720200000| Untracked |  0
| 158|0x0000000720400000, 0x0000000720400000, 0x0000000720600000|  0%| F|  |TAMS 0x0000000720400000| PB 0x0000000720400000| Untracked |  0
| 159|0x0000000720600000, 0x0000000720600000, 0x0000000720800000|  0%| F|  |TAMS 0x0000000720600000| PB 0x0000000720600000| Untracked |  0
| 160|0x0000000720800000, 0x0000000720800000, 0x0000000720a00000|  0%| F|  |TAMS 0x0000000720800000| PB 0x0000000720800000| Untracked |  0
| 161|0x0000000720a00000, 0x0000000720a00000, 0x0000000720c00000|  0%| F|  |TAMS 0x0000000720a00000| PB 0x0000000720a00000| Untracked |  0
| 162|0x0000000720c00000, 0x0000000720c00000, 0x0000000720e00000|  0%| F|  |TAMS 0x0000000720c00000| PB 0x0000000720c00000| Untracked |  0
| 163|0x0000000720e00000, 0x0000000720e00000, 0x0000000721000000|  0%| F|  |TAMS 0x0000000720e00000| PB 0x0000000720e00000| Untracked |  0
| 164|0x0000000721000000, 0x0000000721000000, 0x0000000721200000|  0%| F|  |TAMS 0x0000000721000000| PB 0x0000000721000000| Untracked |  0
| 165|0x0000000721200000, 0x0000000721200000, 0x0000000721400000|  0%| F|  |TAMS 0x0000000721200000| PB 0x0000000721200000| Untracked |  0
| 166|0x0000000721400000, 0x0000000721400000, 0x0000000721600000|  0%| F|  |TAMS 0x0000000721400000| PB 0x0000000721400000| Untracked |  0
| 167|0x0000000721600000, 0x0000000721600000, 0x0000000721800000|  0%| F|  |TAMS 0x0000000721600000| PB 0x0000000721600000| Untracked |  0
| 168|0x0000000721800000, 0x0000000721800000, 0x0000000721a00000|  0%| F|  |TAMS 0x0000000721800000| PB 0x0000000721800000| Untracked |  0
| 169|0x0000000721a00000, 0x0000000721a00000, 0x0000000721c00000|  0%| F|  |TAMS 0x0000000721a00000| PB 0x0000000721a00000| Untracked |  0
| 170|0x0000000721c00000, 0x0000000721c00000, 0x0000000721e00000|  0%| F|  |TAMS 0x0000000721c00000| PB 0x0000000721c00000| Untracked |  0
| 171|0x0000000721e00000, 0x0000000721e00000, 0x0000000722000000|  0%| F|  |TAMS 0x0000000721e00000| PB 0x0000000721e00000| Untracked |  0
| 172|0x0000000722000000, 0x0000000722000000, 0x0000000722200000|  0%| F|  |TAMS 0x0000000722000000| PB 0x0000000722000000| Untracked |  0
| 173|0x0000000722200000, 0x0000000722200000, 0x0000000722400000|  0%| F|  |TAMS 0x0000000722200000| PB 0x0000000722200000| Untracked |  0
| 174|0x0000000722400000, 0x0000000722400000, 0x0000000722600000|  0%| F|  |TAMS 0x0000000722400000| PB 0x0000000722400000| Untracked |  0
| 175|0x0000000722600000, 0x0000000722600000, 0x0000000722800000|  0%| F|  |TAMS 0x0000000722600000| PB 0x0000000722600000| Untracked |  0
| 176|0x0000000722800000, 0x0000000722800000, 0x0000000722a00000|  0%| F|  |TAMS 0x0000000722800000| PB 0x0000000722800000| Untracked |  0
| 177|0x0000000722a00000, 0x0000000722a00000, 0x0000000722c00000|  0%| F|  |TAMS 0x0000000722a00000| PB 0x0000000722a00000| Untracked |  0
| 178|0x0000000722c00000, 0x0000000722c00000, 0x0000000722e00000|  0%| F|  |TAMS 0x0000000722c00000| PB 0x0000000722c00000| Untracked |  0
| 179|0x0000000722e00000, 0x0000000722e00000, 0x0000000723000000|  0%| F|  |TAMS 0x0000000722e00000| PB 0x0000000722e00000| Untracked |  0
| 180|0x0000000723000000, 0x0000000723000000, 0x0000000723200000|  0%| F|  |TAMS 0x0000000723000000| PB 0x0000000723000000| Untracked |  0
| 181|0x0000000723200000, 0x0000000723200000, 0x0000000723400000|  0%| F|  |TAMS 0x0000000723200000| PB 0x0000000723200000| Untracked |  0
| 182|0x0000000723400000, 0x0000000723400000, 0x0000000723600000|  0%| F|  |TAMS 0x0000000723400000| PB 0x0000000723400000| Untracked |  0
| 183|0x0000000723600000, 0x0000000723600000, 0x0000000723800000|  0%| F|  |TAMS 0x0000000723600000| PB 0x0000000723600000| Untracked |  0
| 184|0x0000000723800000, 0x0000000723800000, 0x0000000723a00000|  0%| F|  |TAMS 0x0000000723800000| PB 0x0000000723800000| Untracked |  0
| 185|0x0000000723a00000, 0x0000000723a00000, 0x0000000723c00000|  0%| F|  |TAMS 0x0000000723a00000| PB 0x0000000723a00000| Untracked |  0
| 186|0x0000000723c00000, 0x0000000723c00000, 0x0000000723e00000|  0%| F|  |TAMS 0x0000000723c00000| PB 0x0000000723c00000| Untracked |  0
| 187|0x0000000723e00000, 0x0000000723e00000, 0x0000000724000000|  0%| F|  |TAMS 0x0000000723e00000| PB 0x0000000723e00000| Untracked |  0
| 188|0x0000000724000000, 0x0000000724000000, 0x0000000724200000|  0%| F|  |TAMS 0x0000000724000000| PB 0x0000000724000000| Untracked |  0
| 189|0x0000000724200000, 0x0000000724200000, 0x0000000724400000|  0%| F|  |TAMS 0x0000000724200000| PB 0x0000000724200000| Untracked |  0
| 190|0x0000000724400000, 0x0000000724400000, 0x0000000724600000|  0%| F|  |TAMS 0x0000000724400000| PB 0x0000000724400000| Untracked |  0
| 191|0x0000000724600000, 0x0000000724600000, 0x0000000724800000|  0%| F|  |TAMS 0x0000000724600000| PB 0x0000000724600000| Untracked |  0
| 192|0x0000000724800000, 0x0000000724800000, 0x0000000724a00000|  0%| F|  |TAMS 0x0000000724800000| PB 0x0000000724800000| Untracked |  0
| 193|0x0000000724a00000, 0x0000000724a00000, 0x0000000724c00000|  0%| F|  |TAMS 0x0000000724a00000| PB 0x0000000724a00000| Untracked |  0
| 194|0x0000000724c00000, 0x0000000724c00000, 0x0000000724e00000|  0%| F|  |TAMS 0x0000000724c00000| PB 0x0000000724c00000| Untracked |  0
| 195|0x0000000724e00000, 0x0000000724e00000, 0x0000000725000000|  0%| F|  |TAMS 0x0000000724e00000| PB 0x0000000724e00000| Untracked |  0
| 196|0x0000000725000000, 0x0000000725000000, 0x0000000725200000|  0%| F|  |TAMS 0x0000000725000000| PB 0x0000000725000000| Untracked |  0
| 197|0x0000000725200000, 0x0000000725200000, 0x0000000725400000|  0%| F|  |TAMS 0x0000000725200000| PB 0x0000000725200000| Untracked |  0
| 198|0x0000000725400000, 0x0000000725400000, 0x0000000725600000|  0%| F|  |TAMS 0x0000000725400000| PB 0x0000000725400000| Untracked |  0
| 199|0x0000000725600000, 0x0000000725600000, 0x0000000725800000|  0%| F|  |TAMS 0x0000000725600000| PB 0x0000000725600000| Untracked |  0
| 200|0x0000000725800000, 0x0000000725800000, 0x0000000725a00000|  0%| F|  |TAMS 0x0000000725800000| PB 0x0000000725800000| Untracked |  0
| 201|0x0000000725a00000, 0x0000000725a00000, 0x0000000725c00000|  0%| F|  |TAMS 0x0000000725a00000| PB 0x0000000725a00000| Untracked |  0
| 202|0x0000000725c00000, 0x0000000725c00000, 0x0000000725e00000|  0%| F|  |TAMS 0x0000000725c00000| PB 0x0000000725c00000| Untracked |  0
| 203|0x0000000725e00000, 0x0000000725e00000, 0x0000000726000000|  0%| F|  |TAMS 0x0000000725e00000| PB 0x0000000725e00000| Untracked |  0
| 204|0x0000000726000000, 0x0000000726000000, 0x0000000726200000|  0%| F|  |TAMS 0x0000000726000000| PB 0x0000000726000000| Untracked |  0
| 205|0x0000000726200000, 0x0000000726200000, 0x0000000726400000|  0%| F|  |TAMS 0x0000000726200000| PB 0x0000000726200000| Untracked |  0
| 206|0x0000000726400000, 0x0000000726400000, 0x0000000726600000|  0%| F|  |TAMS 0x0000000726400000| PB 0x0000000726400000| Untracked |  0
| 207|0x0000000726600000, 0x0000000726600000, 0x0000000726800000|  0%| F|  |TAMS 0x0000000726600000| PB 0x0000000726600000| Untracked |  0
| 208|0x0000000726800000, 0x0000000726800000, 0x0000000726a00000|  0%| F|  |TAMS 0x0000000726800000| PB 0x0000000726800000| Untracked |  0
| 209|0x0000000726a00000, 0x0000000726a00000, 0x0000000726c00000|  0%| F|  |TAMS 0x0000000726a00000| PB 0x0000000726a00000| Untracked |  0
| 210|0x0000000726c00000, 0x0000000726c00000, 0x0000000726e00000|  0%| F|  |TAMS 0x0000000726c00000| PB 0x0000000726c00000| Untracked |  0
| 211|0x0000000726e00000, 0x0000000726e00000, 0x0000000727000000|  0%| F|  |TAMS 0x0000000726e00000| PB 0x0000000726e00000| Untracked |  0
| 212|0x0000000727000000, 0x0000000727000000, 0x0000000727200000|  0%| F|  |TAMS 0x0000000727000000| PB 0x0000000727000000| Untracked |  0
| 213|0x0000000727200000, 0x0000000727200000, 0x0000000727400000|  0%| F|  |TAMS 0x0000000727200000| PB 0x0000000727200000| Untracked |  0
| 214|0x0000000727400000, 0x0000000727400000, 0x0000000727600000|  0%| F|  |TAMS 0x0000000727400000| PB 0x0000000727400000| Untracked |  0
| 215|0x0000000727600000, 0x0000000727600000, 0x0000000727800000|  0%| F|  |TAMS 0x0000000727600000| PB 0x0000000727600000| Untracked |  0
| 216|0x0000000727800000, 0x0000000727800000, 0x0000000727a00000|  0%| F|  |TAMS 0x0000000727800000| PB 0x0000000727800000| Untracked |  0
| 217|0x0000000727a00000, 0x0000000727a00000, 0x0000000727c00000|  0%| F|  |TAMS 0x0000000727a00000| PB 0x0000000727a00000| Untracked |  0
| 218|0x0000000727c00000, 0x0000000727c00000, 0x0000000727e00000|  0%| F|  |TAMS 0x0000000727c00000| PB 0x0000000727c00000| Untracked |  0
| 219|0x0000000727e00000, 0x0000000727e00000, 0x0000000728000000|  0%| F|  |TAMS 0x0000000727e00000| PB 0x0000000727e00000| Untracked |  0
| 220|0x0000000728000000, 0x0000000728000000, 0x0000000728200000|  0%| F|  |TAMS 0x0000000728000000| PB 0x0000000728000000| Untracked |  0
| 221|0x0000000728200000, 0x0000000728200000, 0x0000000728400000|  0%| F|  |TAMS 0x0000000728200000| PB 0x0000000728200000| Untracked |  0
| 222|0x0000000728400000, 0x0000000728400000, 0x0000000728600000|  0%| F|  |TAMS 0x0000000728400000| PB 0x0000000728400000| Untracked |  0
| 223|0x0000000728600000, 0x0000000728600000, 0x0000000728800000|  0%| F|  |TAMS 0x0000000728600000| PB 0x0000000728600000| Untracked |  0
| 224|0x0000000728800000, 0x0000000728800000, 0x0000000728a00000|  0%| F|  |TAMS 0x0000000728800000| PB 0x0000000728800000| Untracked |  0
| 225|0x0000000728a00000, 0x0000000728a00000, 0x0000000728c00000|  0%| F|  |TAMS 0x0000000728a00000| PB 0x0000000728a00000| Untracked |  0
| 226|0x0000000728c00000, 0x0000000728c00000, 0x0000000728e00000|  0%| F|  |TAMS 0x0000000728c00000| PB 0x0000000728c00000| Untracked |  0
| 227|0x0000000728e00000, 0x0000000728e00000, 0x0000000729000000|  0%| F|  |TAMS 0x0000000728e00000| PB 0x0000000728e00000| Untracked |  0
| 228|0x0000000729000000, 0x0000000729000000, 0x0000000729200000|  0%| F|  |TAMS 0x0000000729000000| PB 0x0000000729000000| Untracked |  0
| 229|0x0000000729200000, 0x0000000729200000, 0x0000000729400000|  0%| F|  |TAMS 0x0000000729200000| PB 0x0000000729200000| Untracked |  0
| 230|0x0000000729400000, 0x0000000729400000, 0x0000000729600000|  0%| F|  |TAMS 0x0000000729400000| PB 0x0000000729400000| Untracked |  0
| 231|0x0000000729600000, 0x0000000729600000, 0x0000000729800000|  0%| F|  |TAMS 0x0000000729600000| PB 0x0000000729600000| Untracked |  0
| 232|0x0000000729800000, 0x0000000729800000, 0x0000000729a00000|  0%| F|  |TAMS 0x0000000729800000| PB 0x0000000729800000| Untracked |  0
| 233|0x0000000729a00000, 0x0000000729a00000, 0x0000000729c00000|  0%| F|  |TAMS 0x0000000729a00000| PB 0x0000000729a00000| Untracked |  0
| 234|0x0000000729c00000, 0x0000000729c00000, 0x0000000729e00000|  0%| F|  |TAMS 0x0000000729c00000| PB 0x0000000729c00000| Untracked |  0
| 235|0x0000000729e00000, 0x0000000729e00000, 0x000000072a000000|  0%| F|  |TAMS 0x0000000729e00000| PB 0x0000000729e00000| Untracked |  0
| 236|0x000000072a000000, 0x000000072a000000, 0x000000072a200000|  0%| F|  |TAMS 0x000000072a000000| PB 0x000000072a000000| Untracked |  0
| 237|0x000000072a200000, 0x000000072a200000, 0x000000072a400000|  0%| F|  |TAMS 0x000000072a200000| PB 0x000000072a200000| Untracked |  0
| 238|0x000000072a400000, 0x000000072a400000, 0x000000072a600000|  0%| F|  |TAMS 0x000000072a400000| PB 0x000000072a400000| Untracked |  0
| 239|0x000000072a600000, 0x000000072a600000, 0x000000072a800000|  0%| F|  |TAMS 0x000000072a600000| PB 0x000000072a600000| Untracked |  0
| 240|0x000000072a800000, 0x000000072a800000, 0x000000072aa00000|  0%| F|  |TAMS 0x000000072a800000| PB 0x000000072a800000| Untracked |  0
| 241|0x000000072aa00000, 0x000000072aa00000, 0x000000072ac00000|  0%| F|  |TAMS 0x000000072aa00000| PB 0x000000072aa00000| Untracked |  0
| 242|0x000000072ac00000, 0x000000072ac00000, 0x000000072ae00000|  0%| F|  |TAMS 0x000000072ac00000| PB 0x000000072ac00000| Untracked |  0
| 243|0x000000072ae00000, 0x000000072ae00000, 0x000000072b000000|  0%| F|  |TAMS 0x000000072ae00000| PB 0x000000072ae00000| Untracked |  0
| 244|0x000000072b000000, 0x000000072b000000, 0x000000072b200000|  0%| F|  |TAMS 0x000000072b000000| PB 0x000000072b000000| Untracked |  0
| 245|0x000000072b200000, 0x000000072b200000, 0x000000072b400000|  0%| F|  |TAMS 0x000000072b200000| PB 0x000000072b200000| Untracked |  0
| 246|0x000000072b400000, 0x000000072b400000, 0x000000072b600000|  0%| F|  |TAMS 0x000000072b400000| PB 0x000000072b400000| Untracked |  0
| 247|0x000000072b600000, 0x000000072b600000, 0x000000072b800000|  0%| F|  |TAMS 0x000000072b600000| PB 0x000000072b600000| Untracked |  0
| 248|0x000000072b800000, 0x000000072b800000, 0x000000072ba00000|  0%| F|  |TAMS 0x000000072b800000| PB 0x000000072b800000| Untracked |  0
| 249|0x000000072ba00000, 0x000000072ba00000, 0x000000072bc00000|  0%| F|  |TAMS 0x000000072ba00000| PB 0x000000072ba00000| Untracked |  0
| 250|0x000000072bc00000, 0x000000072bc00000, 0x000000072be00000|  0%| F|  |TAMS 0x000000072bc00000| PB 0x000000072bc00000| Untracked |  0
| 251|0x000000072be00000, 0x000000072be00000, 0x000000072c000000|  0%| F|  |TAMS 0x000000072be00000| PB 0x000000072be00000| Untracked |  0
| 252|0x000000072c000000, 0x000000072c000000, 0x000000072c200000|  0%| F|  |TAMS 0x000000072c000000| PB 0x000000072c000000| Untracked |  0
| 253|0x000000072c200000, 0x000000072c200000, 0x000000072c400000|  0%| F|  |TAMS 0x000000072c200000| PB 0x000000072c200000| Untracked |  0
| 254|0x000000072c400000, 0x000000072c400000, 0x000000072c600000|  0%| F|  |TAMS 0x000000072c400000| PB 0x000000072c400000| Untracked |  0
| 255|0x000000072c600000, 0x000000072c600000, 0x000000072c800000|  0%| F|  |TAMS 0x000000072c600000| PB 0x000000072c600000| Untracked |  0
| 256|0x000000072c800000, 0x000000072c800000, 0x000000072ca00000|  0%| F|  |TAMS 0x000000072c800000| PB 0x000000072c800000| Untracked |  0
| 257|0x000000072ca00000, 0x000000072ca00000, 0x000000072cc00000|  0%| F|  |TAMS 0x000000072ca00000| PB 0x000000072ca00000| Untracked |  0
| 258|0x000000072cc00000, 0x000000072cc00000, 0x000000072ce00000|  0%| F|  |TAMS 0x000000072cc00000| PB 0x000000072cc00000| Untracked |  0
| 259|0x000000072ce00000, 0x000000072ce00000, 0x000000072d000000|  0%| F|  |TAMS 0x000000072ce00000| PB 0x000000072ce00000| Untracked |  0
| 260|0x000000072d000000, 0x000000072d000000, 0x000000072d200000|  0%| F|  |TAMS 0x000000072d000000| PB 0x000000072d000000| Untracked |  0
| 261|0x000000072d200000, 0x000000072d200000, 0x000000072d400000|  0%| F|  |TAMS 0x000000072d200000| PB 0x000000072d200000| Untracked |  0
| 262|0x000000072d400000, 0x000000072d400000, 0x000000072d600000|  0%| F|  |TAMS 0x000000072d400000| PB 0x000000072d400000| Untracked |  0
| 263|0x000000072d600000, 0x000000072d600000, 0x000000072d800000|  0%| F|  |TAMS 0x000000072d600000| PB 0x000000072d600000| Untracked |  0
| 264|0x000000072d800000, 0x000000072d800000, 0x000000072da00000|  0%| F|  |TAMS 0x000000072d800000| PB 0x000000072d800000| Untracked |  0
| 265|0x000000072da00000, 0x000000072da00000, 0x000000072dc00000|  0%| F|  |TAMS 0x000000072da00000| PB 0x000000072da00000| Untracked |  0
| 266|0x000000072dc00000, 0x000000072dc00000, 0x000000072de00000|  0%| F|  |TAMS 0x000000072dc00000| PB 0x000000072dc00000| Untracked |  0
| 267|0x000000072de00000, 0x000000072de00000, 0x000000072e000000|  0%| F|  |TAMS 0x000000072de00000| PB 0x000000072de00000| Untracked |  0
| 268|0x000000072e000000, 0x000000072e000000, 0x000000072e200000|  0%| F|  |TAMS 0x000000072e000000| PB 0x000000072e000000| Untracked |  0
| 269|0x000000072e200000, 0x000000072e200000, 0x000000072e400000|  0%| F|  |TAMS 0x000000072e200000| PB 0x000000072e200000| Untracked |  0
| 270|0x000000072e400000, 0x000000072e400000, 0x000000072e600000|  0%| F|  |TAMS 0x000000072e400000| PB 0x000000072e400000| Untracked |  0
| 271|0x000000072e600000, 0x000000072e600000, 0x000000072e800000|  0%| F|  |TAMS 0x000000072e600000| PB 0x000000072e600000| Untracked |  0
| 272|0x000000072e800000, 0x000000072e800000, 0x000000072ea00000|  0%| F|  |TAMS 0x000000072e800000| PB 0x000000072e800000| Untracked |  0
| 273|0x000000072ea00000, 0x000000072ea00000, 0x000000072ec00000|  0%| F|  |TAMS 0x000000072ea00000| PB 0x000000072ea00000| Untracked |  0
| 274|0x000000072ec00000, 0x000000072ec00000, 0x000000072ee00000|  0%| F|  |TAMS 0x000000072ec00000| PB 0x000000072ec00000| Untracked |  0
| 275|0x000000072ee00000, 0x000000072ee00000, 0x000000072f000000|  0%| F|  |TAMS 0x000000072ee00000| PB 0x000000072ee00000| Untracked |  0
| 276|0x000000072f000000, 0x000000072f000000, 0x000000072f200000|  0%| F|  |TAMS 0x000000072f000000| PB 0x000000072f000000| Untracked |  0
| 277|0x000000072f200000, 0x000000072f200000, 0x000000072f400000|  0%| F|  |TAMS 0x000000072f200000| PB 0x000000072f200000| Untracked |  0
| 278|0x000000072f400000, 0x000000072f400000, 0x000000072f600000|  0%| F|  |TAMS 0x000000072f400000| PB 0x000000072f400000| Untracked |  0
| 279|0x000000072f600000, 0x000000072f600000, 0x000000072f800000|  0%| F|  |TAMS 0x000000072f600000| PB 0x000000072f600000| Untracked |  0
| 280|0x000000072f800000, 0x000000072f800000, 0x000000072fa00000|  0%| F|  |TAMS 0x000000072f800000| PB 0x000000072f800000| Untracked |  0
| 281|0x000000072fa00000, 0x000000072fa00000, 0x000000072fc00000|  0%| F|  |TAMS 0x000000072fa00000| PB 0x000000072fa00000| Untracked |  0
| 282|0x000000072fc00000, 0x000000072fc00000, 0x000000072fe00000|  0%| F|  |TAMS 0x000000072fc00000| PB 0x000000072fc00000| Untracked |  0
| 283|0x000000072fe00000, 0x000000072fe00000, 0x0000000730000000|  0%| F|  |TAMS 0x000000072fe00000| PB 0x000000072fe00000| Untracked |  0
| 284|0x0000000730000000, 0x0000000730000000, 0x0000000730200000|  0%| F|  |TAMS 0x0000000730000000| PB 0x0000000730000000| Untracked |  0
| 285|0x0000000730200000, 0x0000000730200000, 0x0000000730400000|  0%| F|  |TAMS 0x0000000730200000| PB 0x0000000730200000| Untracked |  0
| 286|0x0000000730400000, 0x0000000730400000, 0x0000000730600000|  0%| F|  |TAMS 0x0000000730400000| PB 0x0000000730400000| Untracked |  0
| 287|0x0000000730600000, 0x0000000730600000, 0x0000000730800000|  0%| F|  |TAMS 0x0000000730600000| PB 0x0000000730600000| Untracked |  0
| 288|0x0000000730800000, 0x0000000730800000, 0x0000000730a00000|  0%| F|  |TAMS 0x0000000730800000| PB 0x0000000730800000| Untracked |  0
| 289|0x0000000730a00000, 0x0000000730a00000, 0x0000000730c00000|  0%| F|  |TAMS 0x0000000730a00000| PB 0x0000000730a00000| Untracked |  0
| 290|0x0000000730c00000, 0x0000000730c00000, 0x0000000730e00000|  0%| F|  |TAMS 0x0000000730c00000| PB 0x0000000730c00000| Untracked |  0
| 291|0x0000000730e00000, 0x0000000730e00000, 0x0000000731000000|  0%| F|  |TAMS 0x0000000730e00000| PB 0x0000000730e00000| Untracked |  0
| 292|0x0000000731000000, 0x0000000731000000, 0x0000000731200000|  0%| F|  |TAMS 0x0000000731000000| PB 0x0000000731000000| Untracked |  0
| 293|0x0000000731200000, 0x0000000731200000, 0x0000000731400000|  0%| F|  |TAMS 0x0000000731200000| PB 0x0000000731200000| Untracked |  0
| 294|0x0000000731400000, 0x0000000731400000, 0x0000000731600000|  0%| F|  |TAMS 0x0000000731400000| PB 0x0000000731400000| Untracked |  0
| 295|0x0000000731600000, 0x0000000731600000, 0x0000000731800000|  0%| F|  |TAMS 0x0000000731600000| PB 0x0000000731600000| Untracked |  0
| 296|0x0000000731800000, 0x0000000731800000, 0x0000000731a00000|  0%| F|  |TAMS 0x0000000731800000| PB 0x0000000731800000| Untracked |  0
| 297|0x0000000731a00000, 0x0000000731a00000, 0x0000000731c00000|  0%| F|  |TAMS 0x0000000731a00000| PB 0x0000000731a00000| Untracked |  0
| 298|0x0000000731c00000, 0x0000000731c00000, 0x0000000731e00000|  0%| F|  |TAMS 0x0000000731c00000| PB 0x0000000731c00000| Untracked |  0
| 299|0x0000000731e00000, 0x0000000731e00000, 0x0000000732000000|  0%| F|  |TAMS 0x0000000731e00000| PB 0x0000000731e00000| Untracked |  0
| 300|0x0000000732000000, 0x0000000732000000, 0x0000000732200000|  0%| F|  |TAMS 0x0000000732000000| PB 0x0000000732000000| Untracked |  0
| 301|0x0000000732200000, 0x0000000732200000, 0x0000000732400000|  0%| F|  |TAMS 0x0000000732200000| PB 0x0000000732200000| Untracked |  0
| 302|0x0000000732400000, 0x0000000732400000, 0x0000000732600000|  0%| F|  |TAMS 0x0000000732400000| PB 0x0000000732400000| Untracked |  0
| 303|0x0000000732600000, 0x0000000732600000, 0x0000000732800000|  0%| F|  |TAMS 0x0000000732600000| PB 0x0000000732600000| Untracked |  0
| 304|0x0000000732800000, 0x00000007328d9340, 0x0000000732a00000| 42%| S|CS|TAMS 0x0000000732800000| PB 0x0000000732800000| Complete |  0
| 305|0x0000000732a00000, 0x0000000732c00000, 0x0000000732c00000|100%| S|CS|TAMS 0x0000000732a00000| PB 0x0000000732a00000| Complete |  0
| 306|0x0000000732c00000, 0x0000000732e00000, 0x0000000732e00000|100%| S|CS|TAMS 0x0000000732c00000| PB 0x0000000732c00000| Complete |  0
| 307|0x0000000732e00000, 0x0000000733000000, 0x0000000733000000|100%| E|CS|TAMS 0x0000000732e00000| PB 0x0000000732e00000| Complete |  0
| 308|0x0000000733000000, 0x0000000733200000, 0x0000000733200000|100%| E|CS|TAMS 0x0000000733000000| PB 0x0000000733000000| Complete |  0
| 309|0x0000000733200000, 0x0000000733400000, 0x0000000733400000|100%| E|CS|TAMS 0x0000000733200000| PB 0x0000000733200000| Complete |  0
| 310|0x0000000733400000, 0x0000000733600000, 0x0000000733600000|100%| E|CS|TAMS 0x0000000733400000| PB 0x0000000733400000| Complete |  0
| 311|0x0000000733600000, 0x0000000733800000, 0x0000000733800000|100%| E|CS|TAMS 0x0000000733600000| PB 0x0000000733600000| Complete |  0
| 312|0x0000000733800000, 0x0000000733a00000, 0x0000000733a00000|100%| E|CS|TAMS 0x0000000733800000| PB 0x0000000733800000| Complete |  0
| 313|0x0000000733a00000, 0x0000000733c00000, 0x0000000733c00000|100%| E|CS|TAMS 0x0000000733a00000| PB 0x0000000733a00000| Complete |  0
| 314|0x0000000733c00000, 0x0000000733e00000, 0x0000000733e00000|100%| E|CS|TAMS 0x0000000733c00000| PB 0x0000000733c00000| Complete |  0
| 315|0x0000000733e00000, 0x0000000734000000, 0x0000000734000000|100%| E|CS|TAMS 0x0000000733e00000| PB 0x0000000733e00000| Complete |  0
| 316|0x0000000734000000, 0x0000000734200000, 0x0000000734200000|100%| E|CS|TAMS 0x0000000734000000| PB 0x0000000734000000| Complete |  0
| 317|0x0000000734200000, 0x0000000734400000, 0x0000000734400000|100%| E|CS|TAMS 0x0000000734200000| PB 0x0000000734200000| Complete |  0
| 318|0x0000000734400000, 0x0000000734600000, 0x0000000734600000|100%| E|CS|TAMS 0x0000000734400000| PB 0x0000000734400000| Complete |  0
| 319|0x0000000734600000, 0x0000000734800000, 0x0000000734800000|100%| E|CS|TAMS 0x0000000734600000| PB 0x0000000734600000| Complete |  0
| 320|0x0000000734800000, 0x0000000734a00000, 0x0000000734a00000|100%| E|CS|TAMS 0x0000000734800000| PB 0x0000000734800000| Complete |  0
| 321|0x0000000734a00000, 0x0000000734c00000, 0x0000000734c00000|100%| E|CS|TAMS 0x0000000734a00000| PB 0x0000000734a00000| Complete |  0
| 322|0x0000000734c00000, 0x0000000734e00000, 0x0000000734e00000|100%| E|CS|TAMS 0x0000000734c00000| PB 0x0000000734c00000| Complete |  0
| 323|0x0000000734e00000, 0x0000000735000000, 0x0000000735000000|100%| E|CS|TAMS 0x0000000734e00000| PB 0x0000000734e00000| Complete |  0
| 324|0x0000000735000000, 0x0000000735200000, 0x0000000735200000|100%| E|CS|TAMS 0x0000000735000000| PB 0x0000000735000000| Complete |  0
| 325|0x0000000735200000, 0x0000000735400000, 0x0000000735400000|100%| E|CS|TAMS 0x0000000735200000| PB 0x0000000735200000| Complete |  0
| 326|0x0000000735400000, 0x0000000735600000, 0x0000000735600000|100%| E|CS|TAMS 0x0000000735400000| PB 0x0000000735400000| Complete |  0
| 327|0x0000000735600000, 0x0000000735800000, 0x0000000735800000|100%| E|CS|TAMS 0x0000000735600000| PB 0x0000000735600000| Complete |  0
| 328|0x0000000735800000, 0x0000000735a00000, 0x0000000735a00000|100%| E|CS|TAMS 0x0000000735800000| PB 0x0000000735800000| Complete |  0
| 329|0x0000000735a00000, 0x0000000735c00000, 0x0000000735c00000|100%| E|CS|TAMS 0x0000000735a00000| PB 0x0000000735a00000| Complete |  0
| 330|0x0000000735c00000, 0x0000000735e00000, 0x0000000735e00000|100%| E|CS|TAMS 0x0000000735c00000| PB 0x0000000735c00000| Complete |  0
| 331|0x0000000735e00000, 0x0000000736000000, 0x0000000736000000|100%| E|CS|TAMS 0x0000000735e00000| PB 0x0000000735e00000| Complete |  0
| 332|0x0000000736000000, 0x0000000736200000, 0x0000000736200000|100%| E|CS|TAMS 0x0000000736000000| PB 0x0000000736000000| Complete |  0
| 333|0x0000000736200000, 0x0000000736400000, 0x0000000736400000|100%| E|CS|TAMS 0x0000000736200000| PB 0x0000000736200000| Complete |  0
| 334|0x0000000736400000, 0x0000000736600000, 0x0000000736600000|100%| E|CS|TAMS 0x0000000736400000| PB 0x0000000736400000| Complete |  0
| 335|0x0000000736600000, 0x0000000736800000, 0x0000000736800000|100%| E|CS|TAMS 0x0000000736600000| PB 0x0000000736600000| Complete |  0
| 336|0x0000000736800000, 0x0000000736a00000, 0x0000000736a00000|100%| E|CS|TAMS 0x0000000736800000| PB 0x0000000736800000| Complete |  0
| 337|0x0000000736a00000, 0x0000000736c00000, 0x0000000736c00000|100%| E|CS|TAMS 0x0000000736a00000| PB 0x0000000736a00000| Complete |  0
| 338|0x0000000736c00000, 0x0000000736e00000, 0x0000000736e00000|100%| E|CS|TAMS 0x0000000736c00000| PB 0x0000000736c00000| Complete |  0
| 339|0x0000000736e00000, 0x0000000737000000, 0x0000000737000000|100%| E|CS|TAMS 0x0000000736e00000| PB 0x0000000736e00000| Complete |  0
| 340|0x0000000737000000, 0x0000000737200000, 0x0000000737200000|100%| E|CS|TAMS 0x0000000737000000| PB 0x0000000737000000| Complete |  0
| 341|0x0000000737200000, 0x0000000737400000, 0x0000000737400000|100%| E|CS|TAMS 0x0000000737200000| PB 0x0000000737200000| Complete |  0
| 342|0x0000000737400000, 0x0000000737600000, 0x0000000737600000|100%| E|CS|TAMS 0x0000000737400000| PB 0x0000000737400000| Complete |  0
| 343|0x0000000737600000, 0x0000000737800000, 0x0000000737800000|100%| E|CS|TAMS 0x0000000737600000| PB 0x0000000737600000| Complete |  0
| 344|0x0000000737800000, 0x0000000737a00000, 0x0000000737a00000|100%| E|CS|TAMS 0x0000000737800000| PB 0x0000000737800000| Complete |  0
| 345|0x0000000737a00000, 0x0000000737c00000, 0x0000000737c00000|100%| E|CS|TAMS 0x0000000737a00000| PB 0x0000000737a00000| Complete |  0
| 346|0x0000000737c00000, 0x0000000737e00000, 0x0000000737e00000|100%| E|CS|TAMS 0x0000000737c00000| PB 0x0000000737c00000| Complete |  0
| 347|0x0000000737e00000, 0x0000000738000000, 0x0000000738000000|100%| E|CS|TAMS 0x0000000737e00000| PB 0x0000000737e00000| Complete |  0
| 348|0x0000000738000000, 0x0000000738200000, 0x0000000738200000|100%| E|CS|TAMS 0x0000000738000000| PB 0x0000000738000000| Complete |  0
| 349|0x0000000738200000, 0x0000000738400000, 0x0000000738400000|100%| E|CS|TAMS 0x0000000738200000| PB 0x0000000738200000| Complete |  0
| 350|0x0000000738400000, 0x0000000738600000, 0x0000000738600000|100%| E|CS|TAMS 0x0000000738400000| PB 0x0000000738400000| Complete |  0
| 351|0x0000000738600000, 0x0000000738800000, 0x0000000738800000|100%| E|CS|TAMS 0x0000000738600000| PB 0x0000000738600000| Complete |  0
| 352|0x0000000738800000, 0x0000000738a00000, 0x0000000738a00000|100%| E|CS|TAMS 0x0000000738800000| PB 0x0000000738800000| Complete |  0
| 353|0x0000000738a00000, 0x0000000738c00000, 0x0000000738c00000|100%| E|CS|TAMS 0x0000000738a00000| PB 0x0000000738a00000| Complete |  0
| 354|0x0000000738c00000, 0x0000000738e00000, 0x0000000738e00000|100%| E|CS|TAMS 0x0000000738c00000| PB 0x0000000738c00000| Complete |  0
| 355|0x0000000738e00000, 0x0000000739000000, 0x0000000739000000|100%| E|CS|TAMS 0x0000000738e00000| PB 0x0000000738e00000| Complete |  0
| 356|0x0000000739000000, 0x0000000739200000, 0x0000000739200000|100%| E|CS|TAMS 0x0000000739000000| PB 0x0000000739000000| Complete |  0
| 357|0x0000000739200000, 0x0000000739400000, 0x0000000739400000|100%| E|CS|TAMS 0x0000000739200000| PB 0x0000000739200000| Complete |  0
| 358|0x0000000739400000, 0x0000000739600000, 0x0000000739600000|100%| E|CS|TAMS 0x0000000739400000| PB 0x0000000739400000| Complete |  0
| 359|0x0000000739600000, 0x0000000739800000, 0x0000000739800000|100%| E|CS|TAMS 0x0000000739600000| PB 0x0000000739600000| Complete |  0
| 360|0x0000000739800000, 0x0000000739a00000, 0x0000000739a00000|100%| E|CS|TAMS 0x0000000739800000| PB 0x0000000739800000| Complete |  0
| 361|0x0000000739a00000, 0x0000000739c00000, 0x0000000739c00000|100%| E|CS|TAMS 0x0000000739a00000| PB 0x0000000739a00000| Complete |  0
| 362|0x0000000739c00000, 0x0000000739e00000, 0x0000000739e00000|100%| E|CS|TAMS 0x0000000739c00000| PB 0x0000000739c00000| Complete |  0
| 363|0x0000000739e00000, 0x000000073a000000, 0x000000073a000000|100%| E|CS|TAMS 0x0000000739e00000| PB 0x0000000739e00000| Complete |  0
| 364|0x000000073a000000, 0x000000073a200000, 0x000000073a200000|100%| E|CS|TAMS 0x000000073a000000| PB 0x000000073a000000| Complete |  0
| 365|0x000000073a200000, 0x000000073a400000, 0x000000073a400000|100%| E|CS|TAMS 0x000000073a200000| PB 0x000000073a200000| Complete |  0
| 366|0x000000073a400000, 0x000000073a600000, 0x000000073a600000|100%| E|CS|TAMS 0x000000073a400000| PB 0x000000073a400000| Complete |  0
| 367|0x000000073a600000, 0x000000073a800000, 0x000000073a800000|100%| E|CS|TAMS 0x000000073a600000| PB 0x000000073a600000| Complete |  0
| 368|0x000000073a800000, 0x000000073aa00000, 0x000000073aa00000|100%| E|CS|TAMS 0x000000073a800000| PB 0x000000073a800000| Complete |  0
| 369|0x000000073aa00000, 0x000000073ac00000, 0x000000073ac00000|100%| E|CS|TAMS 0x000000073aa00000| PB 0x000000073aa00000| Complete |  0
| 370|0x000000073ac00000, 0x000000073ae00000, 0x000000073ae00000|100%| E|CS|TAMS 0x000000073ac00000| PB 0x000000073ac00000| Complete |  0
| 371|0x000000073ae00000, 0x000000073b000000, 0x000000073b000000|100%| E|CS|TAMS 0x000000073ae00000| PB 0x000000073ae00000| Complete |  0
| 372|0x000000073b000000, 0x000000073b200000, 0x000000073b200000|100%| E|CS|TAMS 0x000000073b000000| PB 0x000000073b000000| Complete |  0
| 373|0x000000073b200000, 0x000000073b400000, 0x000000073b400000|100%| E|CS|TAMS 0x000000073b200000| PB 0x000000073b200000| Complete |  0
| 374|0x000000073b400000, 0x000000073b600000, 0x000000073b600000|100%| E|CS|TAMS 0x000000073b400000| PB 0x000000073b400000| Complete |  0
| 375|0x000000073b600000, 0x000000073b800000, 0x000000073b800000|100%| E|CS|TAMS 0x000000073b600000| PB 0x000000073b600000| Complete |  0
| 376|0x000000073b800000, 0x000000073ba00000, 0x000000073ba00000|100%| E|CS|TAMS 0x000000073b800000| PB 0x000000073b800000| Complete |  0
| 377|0x000000073ba00000, 0x000000073bc00000, 0x000000073bc00000|100%| E|CS|TAMS 0x000000073ba00000| PB 0x000000073ba00000| Complete |  0
| 378|0x000000073bc00000, 0x000000073be00000, 0x000000073be00000|100%| E|CS|TAMS 0x000000073bc00000| PB 0x000000073bc00000| Complete |  0
| 379|0x000000073be00000, 0x000000073c000000, 0x000000073c000000|100%| E|CS|TAMS 0x000000073be00000| PB 0x000000073be00000| Complete |  0
| 380|0x000000073c000000, 0x000000073c200000, 0x000000073c200000|100%| E|CS|TAMS 0x000000073c000000| PB 0x000000073c000000| Complete |  0
| 381|0x000000073c200000, 0x000000073c400000, 0x000000073c400000|100%| E|CS|TAMS 0x000000073c200000| PB 0x000000073c200000| Complete |  0
| 382|0x000000073c400000, 0x000000073c600000, 0x000000073c600000|100%| E|CS|TAMS 0x000000073c400000| PB 0x000000073c400000| Complete |  0
| 383|0x000000073c600000, 0x000000073c800000, 0x000000073c800000|100%| E|CS|TAMS 0x000000073c600000| PB 0x000000073c600000| Complete |  0
| 384|0x000000073c800000, 0x000000073ca00000, 0x000000073ca00000|100%| E|CS|TAMS 0x000000073c800000| PB 0x000000073c800000| Complete |  0
| 385|0x000000073ca00000, 0x000000073cc00000, 0x000000073cc00000|100%| E|CS|TAMS 0x000000073ca00000| PB 0x000000073ca00000| Complete |  0
| 386|0x000000073cc00000, 0x000000073ce00000, 0x000000073ce00000|100%| E|CS|TAMS 0x000000073cc00000| PB 0x000000073cc00000| Complete |  0
| 387|0x000000073ce00000, 0x000000073d000000, 0x000000073d000000|100%| E|CS|TAMS 0x000000073ce00000| PB 0x000000073ce00000| Complete |  0
| 388|0x000000073d000000, 0x000000073d200000, 0x000000073d200000|100%| E|CS|TAMS 0x000000073d000000| PB 0x000000073d000000| Complete |  0
| 389|0x000000073d200000, 0x000000073d400000, 0x000000073d400000|100%| E|CS|TAMS 0x000000073d200000| PB 0x000000073d200000| Complete |  0
| 390|0x000000073d400000, 0x000000073d600000, 0x000000073d600000|100%| E|CS|TAMS 0x000000073d400000| PB 0x000000073d400000| Complete |  0
| 391|0x000000073d600000, 0x000000073d800000, 0x000000073d800000|100%| E|CS|TAMS 0x000000073d600000| PB 0x000000073d600000| Complete |  0
| 392|0x000000073d800000, 0x000000073da00000, 0x000000073da00000|100%| E|CS|TAMS 0x000000073d800000| PB 0x000000073d800000| Complete |  0
| 393|0x000000073da00000, 0x000000073dc00000, 0x000000073dc00000|100%| E|CS|TAMS 0x000000073da00000| PB 0x000000073da00000| Complete |  0
| 394|0x000000073dc00000, 0x000000073de00000, 0x000000073de00000|100%| E|CS|TAMS 0x000000073dc00000| PB 0x000000073dc00000| Complete |  0
| 395|0x000000073de00000, 0x000000073e000000, 0x000000073e000000|100%| E|CS|TAMS 0x000000073de00000| PB 0x000000073de00000| Complete |  0
| 396|0x000000073e000000, 0x000000073e200000, 0x000000073e200000|100%| E|CS|TAMS 0x000000073e000000| PB 0x000000073e000000| Complete |  0
| 397|0x000000073e200000, 0x000000073e400000, 0x000000073e400000|100%| E|CS|TAMS 0x000000073e200000| PB 0x000000073e200000| Complete |  0
| 398|0x000000073e400000, 0x000000073e600000, 0x000000073e600000|100%| E|CS|TAMS 0x000000073e400000| PB 0x000000073e400000| Complete |  0
| 399|0x000000073e600000, 0x000000073e800000, 0x000000073e800000|100%| E|CS|TAMS 0x000000073e600000| PB 0x000000073e600000| Complete |  0
| 400|0x000000073e800000, 0x000000073ea00000, 0x000000073ea00000|100%| E|CS|TAMS 0x000000073e800000| PB 0x000000073e800000| Complete |  0
| 401|0x000000073ea00000, 0x000000073ec00000, 0x000000073ec00000|100%| E|CS|TAMS 0x000000073ea00000| PB 0x000000073ea00000| Complete |  0
| 402|0x000000073ec00000, 0x000000073ee00000, 0x000000073ee00000|100%| E|CS|TAMS 0x000000073ec00000| PB 0x000000073ec00000| Complete |  0
| 403|0x000000073ee00000, 0x000000073f000000, 0x000000073f000000|100%| E|CS|TAMS 0x000000073ee00000| PB 0x000000073ee00000| Complete |  0
| 404|0x000000073f000000, 0x000000073f200000, 0x000000073f200000|100%| E|CS|TAMS 0x000000073f000000| PB 0x000000073f000000| Complete |  0
| 405|0x000000073f200000, 0x000000073f400000, 0x000000073f400000|100%| E|CS|TAMS 0x000000073f200000| PB 0x000000073f200000| Complete |  0
| 406|0x000000073f400000, 0x000000073f600000, 0x000000073f600000|100%| E|CS|TAMS 0x000000073f400000| PB 0x000000073f400000| Complete |  0
| 407|0x000000073f600000, 0x000000073f800000, 0x000000073f800000|100%| E|CS|TAMS 0x000000073f600000| PB 0x000000073f600000| Complete |  0
| 408|0x000000073f800000, 0x000000073fa00000, 0x000000073fa00000|100%| E|CS|TAMS 0x000000073f800000| PB 0x000000073f800000| Complete |  0
| 409|0x000000073fa00000, 0x000000073fc00000, 0x000000073fc00000|100%| E|CS|TAMS 0x000000073fa00000| PB 0x000000073fa00000| Complete |  0
| 410|0x000000073fc00000, 0x000000073fe00000, 0x000000073fe00000|100%| E|CS|TAMS 0x000000073fc00000| PB 0x000000073fc00000| Complete |  0
| 411|0x000000073fe00000, 0x0000000740000000, 0x0000000740000000|100%| E|CS|TAMS 0x000000073fe00000| PB 0x000000073fe00000| Complete |  0
| 412|0x0000000740000000, 0x0000000740200000, 0x0000000740200000|100%| E|CS|TAMS 0x0000000740000000| PB 0x0000000740000000| Complete |  0
| 413|0x0000000740200000, 0x0000000740400000, 0x0000000740400000|100%| E|CS|TAMS 0x0000000740200000| PB 0x0000000740200000| Complete |  0
| 414|0x0000000740400000, 0x0000000740600000, 0x0000000740600000|100%| E|CS|TAMS 0x0000000740400000| PB 0x0000000740400000| Complete |  0
| 415|0x0000000740600000, 0x0000000740800000, 0x0000000740800000|100%| E|CS|TAMS 0x0000000740600000| PB 0x0000000740600000| Complete |  0
| 416|0x0000000740800000, 0x0000000740a00000, 0x0000000740a00000|100%| E|CS|TAMS 0x0000000740800000| PB 0x0000000740800000| Complete |  0
| 417|0x0000000740a00000, 0x0000000740c00000, 0x0000000740c00000|100%| E|CS|TAMS 0x0000000740a00000| PB 0x0000000740a00000| Complete |  0
| 418|0x0000000740c00000, 0x0000000740e00000, 0x0000000740e00000|100%| E|CS|TAMS 0x0000000740c00000| PB 0x0000000740c00000| Complete |  0
| 419|0x0000000740e00000, 0x0000000741000000, 0x0000000741000000|100%| E|CS|TAMS 0x0000000740e00000| PB 0x0000000740e00000| Complete |  0
| 420|0x0000000741000000, 0x0000000741200000, 0x0000000741200000|100%| E|CS|TAMS 0x0000000741000000| PB 0x0000000741000000| Complete |  0
| 421|0x0000000741200000, 0x0000000741400000, 0x0000000741400000|100%| E|CS|TAMS 0x0000000741200000| PB 0x0000000741200000| Complete |  0
| 422|0x0000000741400000, 0x0000000741600000, 0x0000000741600000|100%| E|CS|TAMS 0x0000000741400000| PB 0x0000000741400000| Complete |  0
| 423|0x0000000741600000, 0x0000000741800000, 0x0000000741800000|100%| E|CS|TAMS 0x0000000741600000| PB 0x0000000741600000| Complete |  0
| 424|0x0000000741800000, 0x0000000741a00000, 0x0000000741a00000|100%| E|CS|TAMS 0x0000000741800000| PB 0x0000000741800000| Complete |  0
| 425|0x0000000741a00000, 0x0000000741c00000, 0x0000000741c00000|100%| E|CS|TAMS 0x0000000741a00000| PB 0x0000000741a00000| Complete |  0
| 426|0x0000000741c00000, 0x0000000741e00000, 0x0000000741e00000|100%| E|CS|TAMS 0x0000000741c00000| PB 0x0000000741c00000| Complete |  0
| 427|0x0000000741e00000, 0x0000000742000000, 0x0000000742000000|100%| E|CS|TAMS 0x0000000741e00000| PB 0x0000000741e00000| Complete |  0
| 428|0x0000000742000000, 0x0000000742200000, 0x0000000742200000|100%| E|CS|TAMS 0x0000000742000000| PB 0x0000000742000000| Complete |  0
| 429|0x0000000742200000, 0x0000000742400000, 0x0000000742400000|100%| E|CS|TAMS 0x0000000742200000| PB 0x0000000742200000| Complete |  0
| 430|0x0000000742400000, 0x0000000742600000, 0x0000000742600000|100%| E|CS|TAMS 0x0000000742400000| PB 0x0000000742400000| Complete |  0
| 431|0x0000000742600000, 0x0000000742800000, 0x0000000742800000|100%| E|CS|TAMS 0x0000000742600000| PB 0x0000000742600000| Complete |  0
| 432|0x0000000742800000, 0x0000000742a00000, 0x0000000742a00000|100%| E|CS|TAMS 0x0000000742800000| PB 0x0000000742800000| Complete |  0
| 433|0x0000000742a00000, 0x0000000742c00000, 0x0000000742c00000|100%| E|CS|TAMS 0x0000000742a00000| PB 0x0000000742a00000| Complete |  0
| 434|0x0000000742c00000, 0x0000000742e00000, 0x0000000742e00000|100%| E|CS|TAMS 0x0000000742c00000| PB 0x0000000742c00000| Complete |  0
| 435|0x0000000742e00000, 0x0000000743000000, 0x0000000743000000|100%| E|CS|TAMS 0x0000000742e00000| PB 0x0000000742e00000| Complete |  0
| 436|0x0000000743000000, 0x0000000743200000, 0x0000000743200000|100%| E|CS|TAMS 0x0000000743000000| PB 0x0000000743000000| Complete |  0
| 437|0x0000000743200000, 0x0000000743400000, 0x0000000743400000|100%| E|CS|TAMS 0x0000000743200000| PB 0x0000000743200000| Complete |  0
| 438|0x0000000743400000, 0x0000000743600000, 0x0000000743600000|100%| E|CS|TAMS 0x0000000743400000| PB 0x0000000743400000| Complete |  0
| 439|0x0000000743600000, 0x0000000743800000, 0x0000000743800000|100%| E|CS|TAMS 0x0000000743600000| PB 0x0000000743600000| Complete |  0
| 440|0x0000000743800000, 0x0000000743a00000, 0x0000000743a00000|100%| E|CS|TAMS 0x0000000743800000| PB 0x0000000743800000| Complete |  0
| 441|0x0000000743a00000, 0x0000000743c00000, 0x0000000743c00000|100%| E|CS|TAMS 0x0000000743a00000| PB 0x0000000743a00000| Complete |  0
| 442|0x0000000743c00000, 0x0000000743e00000, 0x0000000743e00000|100%| E|CS|TAMS 0x0000000743c00000| PB 0x0000000743c00000| Complete |  0
| 443|0x0000000743e00000, 0x0000000744000000, 0x0000000744000000|100%| E|CS|TAMS 0x0000000743e00000| PB 0x0000000743e00000| Complete |  0
| 444|0x0000000744000000, 0x0000000744200000, 0x0000000744200000|100%| E|CS|TAMS 0x0000000744000000| PB 0x0000000744000000| Complete |  0
| 445|0x0000000744200000, 0x0000000744400000, 0x0000000744400000|100%| E|CS|TAMS 0x0000000744200000| PB 0x0000000744200000| Complete |  0
| 446|0x0000000744400000, 0x0000000744600000, 0x0000000744600000|100%| E|CS|TAMS 0x0000000744400000| PB 0x0000000744400000| Complete |  0
| 447|0x0000000744600000, 0x0000000744800000, 0x0000000744800000|100%| E|CS|TAMS 0x0000000744600000| PB 0x0000000744600000| Complete |  0
| 448|0x0000000744800000, 0x0000000744a00000, 0x0000000744a00000|100%| E|CS|TAMS 0x0000000744800000| PB 0x0000000744800000| Complete |  0
| 449|0x0000000744a00000, 0x0000000744c00000, 0x0000000744c00000|100%| E|CS|TAMS 0x0000000744a00000| PB 0x0000000744a00000| Complete |  0
| 450|0x0000000744c00000, 0x0000000744e00000, 0x0000000744e00000|100%| E|CS|TAMS 0x0000000744c00000| PB 0x0000000744c00000| Complete |  0
| 451|0x0000000744e00000, 0x0000000745000000, 0x0000000745000000|100%| E|CS|TAMS 0x0000000744e00000| PB 0x0000000744e00000| Complete |  0
| 452|0x0000000745000000, 0x0000000745200000, 0x0000000745200000|100%| E|CS|TAMS 0x0000000745000000| PB 0x0000000745000000| Complete |  0
| 453|0x0000000745200000, 0x0000000745400000, 0x0000000745400000|100%| E|CS|TAMS 0x0000000745200000| PB 0x0000000745200000| Complete |  0
| 454|0x0000000745400000, 0x0000000745600000, 0x0000000745600000|100%| E|CS|TAMS 0x0000000745400000| PB 0x0000000745400000| Complete |  0
| 455|0x0000000745600000, 0x0000000745800000, 0x0000000745800000|100%| E|CS|TAMS 0x0000000745600000| PB 0x0000000745600000| Complete |  0
| 456|0x0000000745800000, 0x0000000745a00000, 0x0000000745a00000|100%| E|CS|TAMS 0x0000000745800000| PB 0x0000000745800000| Complete |  0
| 457|0x0000000745a00000, 0x0000000745c00000, 0x0000000745c00000|100%| E|CS|TAMS 0x0000000745a00000| PB 0x0000000745a00000| Complete |  0
| 458|0x0000000745c00000, 0x0000000745e00000, 0x0000000745e00000|100%| E|CS|TAMS 0x0000000745c00000| PB 0x0000000745c00000| Complete |  0
| 459|0x0000000745e00000, 0x0000000746000000, 0x0000000746000000|100%| E|CS|TAMS 0x0000000745e00000| PB 0x0000000745e00000| Complete |  0
| 460|0x0000000746000000, 0x0000000746200000, 0x0000000746200000|100%| E|CS|TAMS 0x0000000746000000| PB 0x0000000746000000| Complete |  0
| 461|0x0000000746200000, 0x0000000746400000, 0x0000000746400000|100%| E|CS|TAMS 0x0000000746200000| PB 0x0000000746200000| Complete |  0
| 462|0x0000000746400000, 0x0000000746600000, 0x0000000746600000|100%| E|CS|TAMS 0x0000000746400000| PB 0x0000000746400000| Complete |  0
| 463|0x0000000746600000, 0x0000000746800000, 0x0000000746800000|100%| E|CS|TAMS 0x0000000746600000| PB 0x0000000746600000| Complete |  0
| 464|0x0000000746800000, 0x0000000746a00000, 0x0000000746a00000|100%| E|CS|TAMS 0x0000000746800000| PB 0x0000000746800000| Complete |  0
| 465|0x0000000746a00000, 0x0000000746c00000, 0x0000000746c00000|100%| E|CS|TAMS 0x0000000746a00000| PB 0x0000000746a00000| Complete |  0
| 466|0x0000000746c00000, 0x0000000746e00000, 0x0000000746e00000|100%| E|CS|TAMS 0x0000000746c00000| PB 0x0000000746c00000| Complete |  0
| 467|0x0000000746e00000, 0x0000000747000000, 0x0000000747000000|100%| E|CS|TAMS 0x0000000746e00000| PB 0x0000000746e00000| Complete |  0
| 468|0x0000000747000000, 0x0000000747200000, 0x0000000747200000|100%| E|CS|TAMS 0x0000000747000000| PB 0x0000000747000000| Complete |  0
| 469|0x0000000747200000, 0x0000000747400000, 0x0000000747400000|100%| E|CS|TAMS 0x0000000747200000| PB 0x0000000747200000| Complete |  0
| 470|0x0000000747400000, 0x0000000747600000, 0x0000000747600000|100%| E|CS|TAMS 0x0000000747400000| PB 0x0000000747400000| Complete |  0
| 471|0x0000000747600000, 0x0000000747800000, 0x0000000747800000|100%| E|CS|TAMS 0x0000000747600000| PB 0x0000000747600000| Complete |  0
| 472|0x0000000747800000, 0x0000000747a00000, 0x0000000747a00000|100%| E|CS|TAMS 0x0000000747800000| PB 0x0000000747800000| Complete |  0
| 473|0x0000000747a00000, 0x0000000747c00000, 0x0000000747c00000|100%| E|CS|TAMS 0x0000000747a00000| PB 0x0000000747a00000| Complete |  0
| 474|0x0000000747c00000, 0x0000000747e00000, 0x0000000747e00000|100%| E|CS|TAMS 0x0000000747c00000| PB 0x0000000747c00000| Complete |  0
| 475|0x0000000747e00000, 0x0000000748000000, 0x0000000748000000|100%| E|CS|TAMS 0x0000000747e00000| PB 0x0000000747e00000| Complete |  0
| 476|0x0000000748000000, 0x0000000748200000, 0x0000000748200000|100%| E|CS|TAMS 0x0000000748000000| PB 0x0000000748000000| Complete |  0
| 477|0x0000000748200000, 0x0000000748400000, 0x0000000748400000|100%| E|CS|TAMS 0x0000000748200000| PB 0x0000000748200000| Complete |  0
| 478|0x0000000748400000, 0x0000000748600000, 0x0000000748600000|100%| E|CS|TAMS 0x0000000748400000| PB 0x0000000748400000| Complete |  0
| 479|0x0000000748600000, 0x0000000748800000, 0x0000000748800000|100%| E|CS|TAMS 0x0000000748600000| PB 0x0000000748600000| Complete |  0
| 480|0x0000000748800000, 0x0000000748a00000, 0x0000000748a00000|100%| E|CS|TAMS 0x0000000748800000| PB 0x0000000748800000| Complete |  0
| 481|0x0000000748a00000, 0x0000000748c00000, 0x0000000748c00000|100%| E|CS|TAMS 0x0000000748a00000| PB 0x0000000748a00000| Complete |  0
| 482|0x0000000748c00000, 0x0000000748e00000, 0x0000000748e00000|100%| E|CS|TAMS 0x0000000748c00000| PB 0x0000000748c00000| Complete |  0
| 483|0x0000000748e00000, 0x0000000749000000, 0x0000000749000000|100%| E|CS|TAMS 0x0000000748e00000| PB 0x0000000748e00000| Complete |  0
| 484|0x0000000749000000, 0x0000000749200000, 0x0000000749200000|100%| E|CS|TAMS 0x0000000749000000| PB 0x0000000749000000| Complete |  0
| 485|0x0000000749200000, 0x0000000749400000, 0x0000000749400000|100%| E|CS|TAMS 0x0000000749200000| PB 0x0000000749200000| Complete |  0
| 486|0x0000000749400000, 0x0000000749600000, 0x0000000749600000|100%| E|CS|TAMS 0x0000000749400000| PB 0x0000000749400000| Complete |  0
| 487|0x0000000749600000, 0x0000000749800000, 0x0000000749800000|100%| E|CS|TAMS 0x0000000749600000| PB 0x0000000749600000| Complete |  0
| 488|0x0000000749800000, 0x0000000749a00000, 0x0000000749a00000|100%| E|CS|TAMS 0x0000000749800000| PB 0x0000000749800000| Complete |  0
| 489|0x0000000749a00000, 0x0000000749c00000, 0x0000000749c00000|100%| E|CS|TAMS 0x0000000749a00000| PB 0x0000000749a00000| Complete |  0
| 490|0x0000000749c00000, 0x0000000749e00000, 0x0000000749e00000|100%| E|CS|TAMS 0x0000000749c00000| PB 0x0000000749c00000| Complete |  0
| 491|0x0000000749e00000, 0x000000074a000000, 0x000000074a000000|100%| E|CS|TAMS 0x0000000749e00000| PB 0x0000000749e00000| Complete |  0
| 492|0x000000074a000000, 0x000000074a200000, 0x000000074a200000|100%| E|CS|TAMS 0x000000074a000000| PB 0x000000074a000000| Complete |  0
| 493|0x000000074a200000, 0x000000074a400000, 0x000000074a400000|100%| E|CS|TAMS 0x000000074a200000| PB 0x000000074a200000| Complete |  0
| 494|0x000000074a400000, 0x000000074a600000, 0x000000074a600000|100%| E|CS|TAMS 0x000000074a400000| PB 0x000000074a400000| Complete |  0
| 495|0x000000074a600000, 0x000000074a800000, 0x000000074a800000|100%| E|CS|TAMS 0x000000074a600000| PB 0x000000074a600000| Complete |  0
| 496|0x000000074a800000, 0x000000074aa00000, 0x000000074aa00000|100%| E|CS|TAMS 0x000000074a800000| PB 0x000000074a800000| Complete |  0
| 497|0x000000074aa00000, 0x000000074ac00000, 0x000000074ac00000|100%| E|CS|TAMS 0x000000074aa00000| PB 0x000000074aa00000| Complete |  0
| 498|0x000000074ac00000, 0x000000074ae00000, 0x000000074ae00000|100%| E|CS|TAMS 0x000000074ac00000| PB 0x000000074ac00000| Complete |  0
| 499|0x000000074ae00000, 0x000000074b000000, 0x000000074b000000|100%| E|CS|TAMS 0x000000074ae00000| PB 0x000000074ae00000| Complete |  0
| 500|0x000000074b000000, 0x000000074b200000, 0x000000074b200000|100%| E|CS|TAMS 0x000000074b000000| PB 0x000000074b000000| Complete |  0
| 501|0x000000074b200000, 0x000000074b400000, 0x000000074b400000|100%| E|CS|TAMS 0x000000074b200000| PB 0x000000074b200000| Complete |  0
| 502|0x000000074b400000, 0x000000074b600000, 0x000000074b600000|100%| E|CS|TAMS 0x000000074b400000| PB 0x000000074b400000| Complete |  0
| 503|0x000000074b600000, 0x000000074b800000, 0x000000074b800000|100%| E|CS|TAMS 0x000000074b600000| PB 0x000000074b600000| Complete |  0
| 504|0x000000074b800000, 0x000000074ba00000, 0x000000074ba00000|100%| E|CS|TAMS 0x000000074b800000| PB 0x000000074b800000| Complete |  0
| 505|0x000000074ba00000, 0x000000074bc00000, 0x000000074bc00000|100%| E|CS|TAMS 0x000000074ba00000| PB 0x000000074ba00000| Complete |  0
| 506|0x000000074bc00000, 0x000000074be00000, 0x000000074be00000|100%| E|CS|TAMS 0x000000074bc00000| PB 0x000000074bc00000| Complete |  0
| 507|0x000000074be00000, 0x000000074c000000, 0x000000074c000000|100%| E|CS|TAMS 0x000000074be00000| PB 0x000000074be00000| Complete |  0
| 508|0x000000074c000000, 0x000000074c200000, 0x000000074c200000|100%| E|CS|TAMS 0x000000074c000000| PB 0x000000074c000000| Complete |  0
| 509|0x000000074c200000, 0x000000074c400000, 0x000000074c400000|100%| E|CS|TAMS 0x000000074c200000| PB 0x000000074c200000| Complete |  0
| 510|0x000000074c400000, 0x000000074c600000, 0x000000074c600000|100%| E|CS|TAMS 0x000000074c400000| PB 0x000000074c400000| Complete |  0
| 511|0x000000074c600000, 0x000000074c800000, 0x000000074c800000|100%| E|CS|TAMS 0x000000074c600000| PB 0x000000074c600000| Complete |  0
| 512|0x000000074c800000, 0x000000074ca00000, 0x000000074ca00000|100%| E|CS|TAMS 0x000000074c800000| PB 0x000000074c800000| Complete |  0
| 513|0x000000074ca00000, 0x000000074cc00000, 0x000000074cc00000|100%| E|CS|TAMS 0x000000074ca00000| PB 0x000000074ca00000| Complete |  0
| 514|0x000000074cc00000, 0x000000074ce00000, 0x000000074ce00000|100%| E|CS|TAMS 0x000000074cc00000| PB 0x000000074cc00000| Complete |  0
| 515|0x000000074ce00000, 0x000000074d000000, 0x000000074d000000|100%| E|CS|TAMS 0x000000074ce00000| PB 0x000000074ce00000| Complete |  0
| 516|0x000000074d000000, 0x000000074d200000, 0x000000074d200000|100%| E|CS|TAMS 0x000000074d000000| PB 0x000000074d000000| Complete |  0
| 517|0x000000074d200000, 0x000000074d400000, 0x000000074d400000|100%| E|CS|TAMS 0x000000074d200000| PB 0x000000074d200000| Complete |  0
| 518|0x000000074d400000, 0x000000074d600000, 0x000000074d600000|100%| E|CS|TAMS 0x000000074d400000| PB 0x000000074d400000| Complete |  0
| 519|0x000000074d600000, 0x000000074d800000, 0x000000074d800000|100%| E|CS|TAMS 0x000000074d600000| PB 0x000000074d600000| Complete |  0
| 520|0x000000074d800000, 0x000000074da00000, 0x000000074da00000|100%| E|CS|TAMS 0x000000074d800000| PB 0x000000074d800000| Complete |  0
| 521|0x000000074da00000, 0x000000074dc00000, 0x000000074dc00000|100%| E|CS|TAMS 0x000000074da00000| PB 0x000000074da00000| Complete |  0
| 522|0x000000074dc00000, 0x000000074de00000, 0x000000074de00000|100%| E|CS|TAMS 0x000000074dc00000| PB 0x000000074dc00000| Complete |  0
| 523|0x000000074de00000, 0x000000074e000000, 0x000000074e000000|100%| E|CS|TAMS 0x000000074de00000| PB 0x000000074de00000| Complete |  0
| 524|0x000000074e000000, 0x000000074e200000, 0x000000074e200000|100%| E|CS|TAMS 0x000000074e000000| PB 0x000000074e000000| Complete |  0
| 525|0x000000074e200000, 0x000000074e400000, 0x000000074e400000|100%| E|CS|TAMS 0x000000074e200000| PB 0x000000074e200000| Complete |  0
| 526|0x000000074e400000, 0x000000074e600000, 0x000000074e600000|100%| E|CS|TAMS 0x000000074e400000| PB 0x000000074e400000| Complete |  0
| 527|0x000000074e600000, 0x000000074e800000, 0x000000074e800000|100%| E|CS|TAMS 0x000000074e600000| PB 0x000000074e600000| Complete |  0
| 528|0x000000074e800000, 0x000000074ea00000, 0x000000074ea00000|100%| E|CS|TAMS 0x000000074e800000| PB 0x000000074e800000| Complete |  0
| 529|0x000000074ea00000, 0x000000074ec00000, 0x000000074ec00000|100%| E|CS|TAMS 0x000000074ea00000| PB 0x000000074ea00000| Complete |  0
| 530|0x000000074ec00000, 0x000000074ee00000, 0x000000074ee00000|100%| E|CS|TAMS 0x000000074ec00000| PB 0x000000074ec00000| Complete |  0
| 531|0x000000074ee00000, 0x000000074f000000, 0x000000074f000000|100%| E|CS|TAMS 0x000000074ee00000| PB 0x000000074ee00000| Complete |  0
| 532|0x000000074f000000, 0x000000074f200000, 0x000000074f200000|100%| E|CS|TAMS 0x000000074f000000| PB 0x000000074f000000| Complete |  0
| 533|0x000000074f200000, 0x000000074f400000, 0x000000074f400000|100%| E|CS|TAMS 0x000000074f200000| PB 0x000000074f200000| Complete |  0
| 534|0x000000074f400000, 0x000000074f600000, 0x000000074f600000|100%| E|CS|TAMS 0x000000074f400000| PB 0x000000074f400000| Complete |  0
| 535|0x000000074f600000, 0x000000074f800000, 0x000000074f800000|100%| E|CS|TAMS 0x000000074f600000| PB 0x000000074f600000| Complete |  0
| 536|0x000000074f800000, 0x000000074fa00000, 0x000000074fa00000|100%| E|CS|TAMS 0x000000074f800000| PB 0x000000074f800000| Complete |  0
| 537|0x000000074fa00000, 0x000000074fc00000, 0x000000074fc00000|100%| E|CS|TAMS 0x000000074fa00000| PB 0x000000074fa00000| Complete |  0
| 538|0x000000074fc00000, 0x000000074fe00000, 0x000000074fe00000|100%| E|CS|TAMS 0x000000074fc00000| PB 0x000000074fc00000| Complete |  0
| 539|0x000000074fe00000, 0x0000000750000000, 0x0000000750000000|100%| E|CS|TAMS 0x000000074fe00000| PB 0x000000074fe00000| Complete |  0
| 540|0x0000000750000000, 0x0000000750200000, 0x0000000750200000|100%| E|CS|TAMS 0x0000000750000000| PB 0x0000000750000000| Complete |  0
| 541|0x0000000750200000, 0x0000000750400000, 0x0000000750400000|100%| E|CS|TAMS 0x0000000750200000| PB 0x0000000750200000| Complete |  0
| 542|0x0000000750400000, 0x0000000750600000, 0x0000000750600000|100%| E|CS|TAMS 0x0000000750400000| PB 0x0000000750400000| Complete |  0
| 543|0x0000000750600000, 0x0000000750800000, 0x0000000750800000|100%| E|CS|TAMS 0x0000000750600000| PB 0x0000000750600000| Complete |  0
| 544|0x0000000750800000, 0x0000000750a00000, 0x0000000750a00000|100%| E|CS|TAMS 0x0000000750800000| PB 0x0000000750800000| Complete |  0
| 545|0x0000000750a00000, 0x0000000750c00000, 0x0000000750c00000|100%| E|CS|TAMS 0x0000000750a00000| PB 0x0000000750a00000| Complete |  0
| 546|0x0000000750c00000, 0x0000000750e00000, 0x0000000750e00000|100%| E|CS|TAMS 0x0000000750c00000| PB 0x0000000750c00000| Complete |  0
| 547|0x0000000750e00000, 0x0000000751000000, 0x0000000751000000|100%| E|CS|TAMS 0x0000000750e00000| PB 0x0000000750e00000| Complete |  0
| 548|0x0000000751000000, 0x0000000751200000, 0x0000000751200000|100%| E|CS|TAMS 0x0000000751000000| PB 0x0000000751000000| Complete |  0
| 549|0x0000000751200000, 0x0000000751400000, 0x0000000751400000|100%| E|CS|TAMS 0x0000000751200000| PB 0x0000000751200000| Complete |  0
| 550|0x0000000751400000, 0x0000000751600000, 0x0000000751600000|100%| E|CS|TAMS 0x0000000751400000| PB 0x0000000751400000| Complete |  0
| 551|0x0000000751600000, 0x0000000751800000, 0x0000000751800000|100%| E|CS|TAMS 0x0000000751600000| PB 0x0000000751600000| Complete |  0
| 552|0x0000000751800000, 0x0000000751a00000, 0x0000000751a00000|100%| E|CS|TAMS 0x0000000751800000| PB 0x0000000751800000| Complete |  0
| 553|0x0000000751a00000, 0x0000000751c00000, 0x0000000751c00000|100%| E|CS|TAMS 0x0000000751a00000| PB 0x0000000751a00000| Complete |  0
| 554|0x0000000751c00000, 0x0000000751e00000, 0x0000000751e00000|100%| E|CS|TAMS 0x0000000751c00000| PB 0x0000000751c00000| Complete |  0
| 555|0x0000000751e00000, 0x0000000752000000, 0x0000000752000000|100%| E|CS|TAMS 0x0000000751e00000| PB 0x0000000751e00000| Complete |  0
| 556|0x0000000752000000, 0x0000000752200000, 0x0000000752200000|100%| E|CS|TAMS 0x0000000752000000| PB 0x0000000752000000| Complete |  0
| 557|0x0000000752200000, 0x0000000752400000, 0x0000000752400000|100%| E|CS|TAMS 0x0000000752200000| PB 0x0000000752200000| Complete |  0
| 558|0x0000000752400000, 0x0000000752600000, 0x0000000752600000|100%| E|CS|TAMS 0x0000000752400000| PB 0x0000000752400000| Complete |  0
| 559|0x0000000752600000, 0x0000000752800000, 0x0000000752800000|100%| E|CS|TAMS 0x0000000752600000| PB 0x0000000752600000| Complete |  0
| 560|0x0000000752800000, 0x0000000752a00000, 0x0000000752a00000|100%| E|CS|TAMS 0x0000000752800000| PB 0x0000000752800000| Complete |  0
| 561|0x0000000752a00000, 0x0000000752c00000, 0x0000000752c00000|100%| E|CS|TAMS 0x0000000752a00000| PB 0x0000000752a00000| Complete |  0
| 562|0x0000000752c00000, 0x0000000752e00000, 0x0000000752e00000|100%| E|CS|TAMS 0x0000000752c00000| PB 0x0000000752c00000| Complete |  0
| 563|0x0000000752e00000, 0x0000000753000000, 0x0000000753000000|100%| E|CS|TAMS 0x0000000752e00000| PB 0x0000000752e00000| Complete |  0
| 564|0x0000000753000000, 0x0000000753200000, 0x0000000753200000|100%| E|CS|TAMS 0x0000000753000000| PB 0x0000000753000000| Complete |  0
| 565|0x0000000753200000, 0x0000000753400000, 0x0000000753400000|100%| E|CS|TAMS 0x0000000753200000| PB 0x0000000753200000| Complete |  0
| 566|0x0000000753400000, 0x0000000753600000, 0x0000000753600000|100%| E|CS|TAMS 0x0000000753400000| PB 0x0000000753400000| Complete |  0
| 567|0x0000000753600000, 0x0000000753800000, 0x0000000753800000|100%| E|CS|TAMS 0x0000000753600000| PB 0x0000000753600000| Complete |  0
| 568|0x0000000753800000, 0x0000000753a00000, 0x0000000753a00000|100%| E|CS|TAMS 0x0000000753800000| PB 0x0000000753800000| Complete |  0
| 569|0x0000000753a00000, 0x0000000753c00000, 0x0000000753c00000|100%| E|CS|TAMS 0x0000000753a00000| PB 0x0000000753a00000| Complete |  0
| 570|0x0000000753c00000, 0x0000000753e00000, 0x0000000753e00000|100%| E|CS|TAMS 0x0000000753c00000| PB 0x0000000753c00000| Complete |  0
| 571|0x0000000753e00000, 0x0000000754000000, 0x0000000754000000|100%| E|CS|TAMS 0x0000000753e00000| PB 0x0000000753e00000| Complete |  0
| 572|0x0000000754000000, 0x0000000754200000, 0x0000000754200000|100%| E|CS|TAMS 0x0000000754000000| PB 0x0000000754000000| Complete |  0
| 573|0x0000000754200000, 0x0000000754400000, 0x0000000754400000|100%| E|CS|TAMS 0x0000000754200000| PB 0x0000000754200000| Complete |  0
| 574|0x0000000754400000, 0x0000000754600000, 0x0000000754600000|100%| E|CS|TAMS 0x0000000754400000| PB 0x0000000754400000| Complete |  0
| 575|0x0000000754600000, 0x0000000754800000, 0x0000000754800000|100%| E|CS|TAMS 0x0000000754600000| PB 0x0000000754600000| Complete |  0
| 576|0x0000000754800000, 0x0000000754a00000, 0x0000000754a00000|100%| E|CS|TAMS 0x0000000754800000| PB 0x0000000754800000| Complete |  0
| 577|0x0000000754a00000, 0x0000000754c00000, 0x0000000754c00000|100%| E|CS|TAMS 0x0000000754a00000| PB 0x0000000754a00000| Complete |  0
| 578|0x0000000754c00000, 0x0000000754e00000, 0x0000000754e00000|100%| E|CS|TAMS 0x0000000754c00000| PB 0x0000000754c00000| Complete |  0
| 579|0x0000000754e00000, 0x0000000755000000, 0x0000000755000000|100%| E|CS|TAMS 0x0000000754e00000| PB 0x0000000754e00000| Complete |  0
| 580|0x0000000755000000, 0x0000000755200000, 0x0000000755200000|100%| E|CS|TAMS 0x0000000755000000| PB 0x0000000755000000| Complete |  0
| 581|0x0000000755200000, 0x0000000755400000, 0x0000000755400000|100%| E|CS|TAMS 0x0000000755200000| PB 0x0000000755200000| Complete |  0
| 582|0x0000000755400000, 0x0000000755600000, 0x0000000755600000|100%| E|CS|TAMS 0x0000000755400000| PB 0x0000000755400000| Complete |  0
| 583|0x0000000755600000, 0x0000000755800000, 0x0000000755800000|100%| E|CS|TAMS 0x0000000755600000| PB 0x0000000755600000| Complete |  0
| 584|0x0000000755800000, 0x0000000755a00000, 0x0000000755a00000|100%| E|CS|TAMS 0x0000000755800000| PB 0x0000000755800000| Complete |  0
| 585|0x0000000755a00000, 0x0000000755c00000, 0x0000000755c00000|100%| E|CS|TAMS 0x0000000755a00000| PB 0x0000000755a00000| Complete |  0
| 586|0x0000000755c00000, 0x0000000755e00000, 0x0000000755e00000|100%| E|CS|TAMS 0x0000000755c00000| PB 0x0000000755c00000| Complete |  0
| 587|0x0000000755e00000, 0x0000000756000000, 0x0000000756000000|100%| E|CS|TAMS 0x0000000755e00000| PB 0x0000000755e00000| Complete |  0
| 588|0x0000000756000000, 0x0000000756200000, 0x0000000756200000|100%| E|CS|TAMS 0x0000000756000000| PB 0x0000000756000000| Complete |  0
| 589|0x0000000756200000, 0x0000000756400000, 0x0000000756400000|100%| E|CS|TAMS 0x0000000756200000| PB 0x0000000756200000| Complete |  0
| 590|0x0000000756400000, 0x0000000756600000, 0x0000000756600000|100%| E|CS|TAMS 0x0000000756400000| PB 0x0000000756400000| Complete |  0
| 591|0x0000000756600000, 0x0000000756800000, 0x0000000756800000|100%| E|CS|TAMS 0x0000000756600000| PB 0x0000000756600000| Complete |  0
| 592|0x0000000756800000, 0x0000000756a00000, 0x0000000756a00000|100%| E|CS|TAMS 0x0000000756800000| PB 0x0000000756800000| Complete |  0
| 593|0x0000000756a00000, 0x0000000756c00000, 0x0000000756c00000|100%| E|CS|TAMS 0x0000000756a00000| PB 0x0000000756a00000| Complete |  0
| 594|0x0000000756c00000, 0x0000000756e00000, 0x0000000756e00000|100%| E|CS|TAMS 0x0000000756c00000| PB 0x0000000756c00000| Complete |  0
| 595|0x0000000756e00000, 0x0000000757000000, 0x0000000757000000|100%| E|CS|TAMS 0x0000000756e00000| PB 0x0000000756e00000| Complete |  0
| 596|0x0000000757000000, 0x0000000757200000, 0x0000000757200000|100%| E|CS|TAMS 0x0000000757000000| PB 0x0000000757000000| Complete |  0
| 597|0x0000000757200000, 0x0000000757400000, 0x0000000757400000|100%| E|CS|TAMS 0x0000000757200000| PB 0x0000000757200000| Complete |  0
| 598|0x0000000757400000, 0x0000000757600000, 0x0000000757600000|100%| E|CS|TAMS 0x0000000757400000| PB 0x0000000757400000| Complete |  0
| 599|0x0000000757600000, 0x0000000757800000, 0x0000000757800000|100%| E|CS|TAMS 0x0000000757600000| PB 0x0000000757600000| Complete |  0
| 600|0x0000000757800000, 0x0000000757a00000, 0x0000000757a00000|100%| E|CS|TAMS 0x0000000757800000| PB 0x0000000757800000| Complete |  0
| 601|0x0000000757a00000, 0x0000000757c00000, 0x0000000757c00000|100%| E|CS|TAMS 0x0000000757a00000| PB 0x0000000757a00000| Complete |  0
| 602|0x0000000757c00000, 0x0000000757e00000, 0x0000000757e00000|100%| E|CS|TAMS 0x0000000757c00000| PB 0x0000000757c00000| Complete |  0
| 603|0x0000000757e00000, 0x0000000758000000, 0x0000000758000000|100%| E|CS|TAMS 0x0000000757e00000| PB 0x0000000757e00000| Complete |  0
| 604|0x0000000758000000, 0x0000000758200000, 0x0000000758200000|100%| E|CS|TAMS 0x0000000758000000| PB 0x0000000758000000| Complete |  0
| 605|0x0000000758200000, 0x0000000758400000, 0x0000000758400000|100%| E|CS|TAMS 0x0000000758200000| PB 0x0000000758200000| Complete |  0
| 606|0x0000000758400000, 0x0000000758600000, 0x0000000758600000|100%| E|CS|TAMS 0x0000000758400000| PB 0x0000000758400000| Complete |  0
| 607|0x0000000758600000, 0x0000000758800000, 0x0000000758800000|100%| E|CS|TAMS 0x0000000758600000| PB 0x0000000758600000| Complete |  0
| 608|0x0000000758800000, 0x0000000758a00000, 0x0000000758a00000|100%| E|CS|TAMS 0x0000000758800000| PB 0x0000000758800000| Complete |  0
| 609|0x0000000758a00000, 0x0000000758c00000, 0x0000000758c00000|100%| E|CS|TAMS 0x0000000758a00000| PB 0x0000000758a00000| Complete |  0
| 610|0x0000000758c00000, 0x0000000758e00000, 0x0000000758e00000|100%| E|CS|TAMS 0x0000000758c00000| PB 0x0000000758c00000| Complete |  0
| 611|0x0000000758e00000, 0x0000000759000000, 0x0000000759000000|100%| E|CS|TAMS 0x0000000758e00000| PB 0x0000000758e00000| Complete |  0
| 612|0x0000000759000000, 0x0000000759200000, 0x0000000759200000|100%| E|CS|TAMS 0x0000000759000000| PB 0x0000000759000000| Complete |  0
| 613|0x0000000759200000, 0x0000000759400000, 0x0000000759400000|100%| E|CS|TAMS 0x0000000759200000| PB 0x0000000759200000| Complete |  0
| 614|0x0000000759400000, 0x0000000759600000, 0x0000000759600000|100%| E|CS|TAMS 0x0000000759400000| PB 0x0000000759400000| Complete |  0
| 615|0x0000000759600000, 0x0000000759800000, 0x0000000759800000|100%| E|CS|TAMS 0x0000000759600000| PB 0x0000000759600000| Complete |  0
| 616|0x0000000759800000, 0x0000000759a00000, 0x0000000759a00000|100%| E|CS|TAMS 0x0000000759800000| PB 0x0000000759800000| Complete |  0
| 617|0x0000000759a00000, 0x0000000759c00000, 0x0000000759c00000|100%| E|CS|TAMS 0x0000000759a00000| PB 0x0000000759a00000| Complete |  0
| 618|0x0000000759c00000, 0x0000000759e00000, 0x0000000759e00000|100%| E|CS|TAMS 0x0000000759c00000| PB 0x0000000759c00000| Complete |  0
| 619|0x0000000759e00000, 0x000000075a000000, 0x000000075a000000|100%| E|CS|TAMS 0x0000000759e00000| PB 0x0000000759e00000| Complete |  0
| 620|0x000000075a000000, 0x000000075a200000, 0x000000075a200000|100%| E|CS|TAMS 0x000000075a000000| PB 0x000000075a000000| Complete |  0
| 621|0x000000075a200000, 0x000000075a400000, 0x000000075a400000|100%| E|CS|TAMS 0x000000075a200000| PB 0x000000075a200000| Complete |  0
| 622|0x000000075a400000, 0x000000075a600000, 0x000000075a600000|100%| E|CS|TAMS 0x000000075a400000| PB 0x000000075a400000| Complete |  0
| 623|0x000000075a600000, 0x000000075a800000, 0x000000075a800000|100%| E|CS|TAMS 0x000000075a600000| PB 0x000000075a600000| Complete |  0
| 624|0x000000075a800000, 0x000000075aa00000, 0x000000075aa00000|100%| E|CS|TAMS 0x000000075a800000| PB 0x000000075a800000| Complete |  0
| 625|0x000000075aa00000, 0x000000075ac00000, 0x000000075ac00000|100%| E|CS|TAMS 0x000000075aa00000| PB 0x000000075aa00000| Complete |  0
| 626|0x000000075ac00000, 0x000000075ae00000, 0x000000075ae00000|100%| E|CS|TAMS 0x000000075ac00000| PB 0x000000075ac00000| Complete |  0
| 627|0x000000075ae00000, 0x000000075b000000, 0x000000075b000000|100%| E|CS|TAMS 0x000000075ae00000| PB 0x000000075ae00000| Complete |  0
| 628|0x000000075b000000, 0x000000075b200000, 0x000000075b200000|100%| E|CS|TAMS 0x000000075b000000| PB 0x000000075b000000| Complete |  0
| 629|0x000000075b200000, 0x000000075b400000, 0x000000075b400000|100%| E|CS|TAMS 0x000000075b200000| PB 0x000000075b200000| Complete |  0
| 630|0x000000075b400000, 0x000000075b600000, 0x000000075b600000|100%| E|CS|TAMS 0x000000075b400000| PB 0x000000075b400000| Complete |  0
| 631|0x000000075b600000, 0x000000075b800000, 0x000000075b800000|100%| E|CS|TAMS 0x000000075b600000| PB 0x000000075b600000| Complete |  0
| 632|0x000000075b800000, 0x000000075ba00000, 0x000000075ba00000|100%| E|CS|TAMS 0x000000075b800000| PB 0x000000075b800000| Complete |  0
| 633|0x000000075ba00000, 0x000000075bc00000, 0x000000075bc00000|100%| E|CS|TAMS 0x000000075ba00000| PB 0x000000075ba00000| Complete |  0
| 634|0x000000075bc00000, 0x000000075be00000, 0x000000075be00000|100%| E|CS|TAMS 0x000000075bc00000| PB 0x000000075bc00000| Complete |  0
| 635|0x000000075be00000, 0x000000075c000000, 0x000000075c000000|100%| E|CS|TAMS 0x000000075be00000| PB 0x000000075be00000| Complete |  0
| 636|0x000000075c000000, 0x000000075c200000, 0x000000075c200000|100%| E|CS|TAMS 0x000000075c000000| PB 0x000000075c000000| Complete |  0
| 637|0x000000075c200000, 0x000000075c400000, 0x000000075c400000|100%| E|CS|TAMS 0x000000075c200000| PB 0x000000075c200000| Complete |  0
| 638|0x000000075c400000, 0x000000075c600000, 0x000000075c600000|100%| E|CS|TAMS 0x000000075c400000| PB 0x000000075c400000| Complete |  0
| 639|0x000000075c600000, 0x000000075c800000, 0x000000075c800000|100%| E|CS|TAMS 0x000000075c600000| PB 0x000000075c600000| Complete |  0
| 640|0x000000075c800000, 0x000000075ca00000, 0x000000075ca00000|100%| E|CS|TAMS 0x000000075c800000| PB 0x000000075c800000| Complete |  0
| 641|0x000000075ca00000, 0x000000075cc00000, 0x000000075cc00000|100%| E|CS|TAMS 0x000000075ca00000| PB 0x000000075ca00000| Complete |  0
| 642|0x000000075cc00000, 0x000000075ce00000, 0x000000075ce00000|100%| E|CS|TAMS 0x000000075cc00000| PB 0x000000075cc00000| Complete |  0
| 643|0x000000075ce00000, 0x000000075d000000, 0x000000075d000000|100%| E|CS|TAMS 0x000000075ce00000| PB 0x000000075ce00000| Complete |  0
| 644|0x000000075d000000, 0x000000075d200000, 0x000000075d200000|100%| E|CS|TAMS 0x000000075d000000| PB 0x000000075d000000| Complete |  0
| 645|0x000000075d200000, 0x000000075d400000, 0x000000075d400000|100%| E|CS|TAMS 0x000000075d200000| PB 0x000000075d200000| Complete |  0
| 646|0x000000075d400000, 0x000000075d600000, 0x000000075d600000|100%| E|CS|TAMS 0x000000075d400000| PB 0x000000075d400000| Complete |  0
| 647|0x000000075d600000, 0x000000075d800000, 0x000000075d800000|100%| E|CS|TAMS 0x000000075d600000| PB 0x000000075d600000| Complete |  0
| 648|0x000000075d800000, 0x000000075da00000, 0x000000075da00000|100%| E|CS|TAMS 0x000000075d800000| PB 0x000000075d800000| Complete |  0
| 649|0x000000075da00000, 0x000000075dc00000, 0x000000075dc00000|100%| E|CS|TAMS 0x000000075da00000| PB 0x000000075da00000| Complete |  0
| 650|0x000000075dc00000, 0x000000075de00000, 0x000000075de00000|100%| E|CS|TAMS 0x000000075dc00000| PB 0x000000075dc00000| Complete |  0
| 651|0x000000075de00000, 0x000000075e000000, 0x000000075e000000|100%| E|CS|TAMS 0x000000075de00000| PB 0x000000075de00000| Complete |  0
| 652|0x000000075e000000, 0x000000075e200000, 0x000000075e200000|100%| E|CS|TAMS 0x000000075e000000| PB 0x000000075e000000| Complete |  0
| 653|0x000000075e200000, 0x000000075e400000, 0x000000075e400000|100%| E|CS|TAMS 0x000000075e200000| PB 0x000000075e200000| Complete |  0
| 654|0x000000075e400000, 0x000000075e600000, 0x000000075e600000|100%| E|CS|TAMS 0x000000075e400000| PB 0x000000075e400000| Complete |  0
| 655|0x000000075e600000, 0x000000075e800000, 0x000000075e800000|100%| E|CS|TAMS 0x000000075e600000| PB 0x000000075e600000| Complete |  0
| 656|0x000000075e800000, 0x000000075ea00000, 0x000000075ea00000|100%| E|CS|TAMS 0x000000075e800000| PB 0x000000075e800000| Complete |  0
| 657|0x000000075ea00000, 0x000000075ec00000, 0x000000075ec00000|100%| E|CS|TAMS 0x000000075ea00000| PB 0x000000075ea00000| Complete |  0
| 658|0x000000075ec00000, 0x000000075ee00000, 0x000000075ee00000|100%| E|CS|TAMS 0x000000075ec00000| PB 0x000000075ec00000| Complete |  0
| 659|0x000000075ee00000, 0x000000075f000000, 0x000000075f000000|100%| E|CS|TAMS 0x000000075ee00000| PB 0x000000075ee00000| Complete |  0
| 660|0x000000075f000000, 0x000000075f200000, 0x000000075f200000|100%| E|CS|TAMS 0x000000075f000000| PB 0x000000075f000000| Complete |  0
| 661|0x000000075f200000, 0x000000075f400000, 0x000000075f400000|100%| E|CS|TAMS 0x000000075f200000| PB 0x000000075f200000| Complete |  0
| 662|0x000000075f400000, 0x000000075f600000, 0x000000075f600000|100%| E|CS|TAMS 0x000000075f400000| PB 0x000000075f400000| Complete |  0
| 663|0x000000075f600000, 0x000000075f800000, 0x000000075f800000|100%| E|CS|TAMS 0x000000075f600000| PB 0x000000075f600000| Complete |  0
| 664|0x000000075f800000, 0x000000075fa00000, 0x000000075fa00000|100%| E|CS|TAMS 0x000000075f800000| PB 0x000000075f800000| Complete |  0
| 665|0x000000075fa00000, 0x000000075fc00000, 0x000000075fc00000|100%| E|CS|TAMS 0x000000075fa00000| PB 0x000000075fa00000| Complete |  0
| 666|0x000000075fc00000, 0x000000075fe00000, 0x000000075fe00000|100%| E|CS|TAMS 0x000000075fc00000| PB 0x000000075fc00000| Complete |  0
| 667|0x000000075fe00000, 0x0000000760000000, 0x0000000760000000|100%| E|CS|TAMS 0x000000075fe00000| PB 0x000000075fe00000| Complete |  0
| 668|0x0000000760000000, 0x0000000760200000, 0x0000000760200000|100%| E|CS|TAMS 0x0000000760000000| PB 0x0000000760000000| Complete |  0
| 669|0x0000000760200000, 0x0000000760400000, 0x0000000760400000|100%| E|CS|TAMS 0x0000000760200000| PB 0x0000000760200000| Complete |  0
| 670|0x0000000760400000, 0x0000000760600000, 0x0000000760600000|100%| E|CS|TAMS 0x0000000760400000| PB 0x0000000760400000| Complete |  0
| 671|0x0000000760600000, 0x0000000760800000, 0x0000000760800000|100%| E|CS|TAMS 0x0000000760600000| PB 0x0000000760600000| Complete |  0
| 672|0x0000000760800000, 0x0000000760a00000, 0x0000000760a00000|100%| E|CS|TAMS 0x0000000760800000| PB 0x0000000760800000| Complete |  0
| 673|0x0000000760a00000, 0x0000000760c00000, 0x0000000760c00000|100%| E|CS|TAMS 0x0000000760a00000| PB 0x0000000760a00000| Complete |  0
| 674|0x0000000760c00000, 0x0000000760e00000, 0x0000000760e00000|100%| E|CS|TAMS 0x0000000760c00000| PB 0x0000000760c00000| Complete |  0
| 675|0x0000000760e00000, 0x0000000761000000, 0x0000000761000000|100%| E|CS|TAMS 0x0000000760e00000| PB 0x0000000760e00000| Complete |  0
| 676|0x0000000761000000, 0x0000000761200000, 0x0000000761200000|100%| E|CS|TAMS 0x0000000761000000| PB 0x0000000761000000| Complete |  0
| 677|0x0000000761200000, 0x0000000761400000, 0x0000000761400000|100%| E|CS|TAMS 0x0000000761200000| PB 0x0000000761200000| Complete |  0
| 678|0x0000000761400000, 0x0000000761600000, 0x0000000761600000|100%| E|CS|TAMS 0x0000000761400000| PB 0x0000000761400000| Complete |  0
| 679|0x0000000761600000, 0x0000000761800000, 0x0000000761800000|100%| E|CS|TAMS 0x0000000761600000| PB 0x0000000761600000| Complete |  0
| 680|0x0000000761800000, 0x0000000761a00000, 0x0000000761a00000|100%| E|CS|TAMS 0x0000000761800000| PB 0x0000000761800000| Complete |  0
| 681|0x0000000761a00000, 0x0000000761c00000, 0x0000000761c00000|100%| E|CS|TAMS 0x0000000761a00000| PB 0x0000000761a00000| Complete |  0
| 682|0x0000000761c00000, 0x0000000761e00000, 0x0000000761e00000|100%| E|CS|TAMS 0x0000000761c00000| PB 0x0000000761c00000| Complete |  0
| 683|0x0000000761e00000, 0x0000000762000000, 0x0000000762000000|100%| E|CS|TAMS 0x0000000761e00000| PB 0x0000000761e00000| Complete |  0
| 684|0x0000000762000000, 0x0000000762200000, 0x0000000762200000|100%| E|CS|TAMS 0x0000000762000000| PB 0x0000000762000000| Complete |  0
| 685|0x0000000762200000, 0x0000000762400000, 0x0000000762400000|100%| E|CS|TAMS 0x0000000762200000| PB 0x0000000762200000| Complete |  0
| 686|0x0000000762400000, 0x0000000762600000, 0x0000000762600000|100%| E|CS|TAMS 0x0000000762400000| PB 0x0000000762400000| Complete |  0
| 687|0x0000000762600000, 0x0000000762800000, 0x0000000762800000|100%| E|CS|TAMS 0x0000000762600000| PB 0x0000000762600000| Complete |  0
| 688|0x0000000762800000, 0x0000000762a00000, 0x0000000762a00000|100%| E|CS|TAMS 0x0000000762800000| PB 0x0000000762800000| Complete |  0
| 689|0x0000000762a00000, 0x0000000762c00000, 0x0000000762c00000|100%| E|CS|TAMS 0x0000000762a00000| PB 0x0000000762a00000| Complete |  0
| 690|0x0000000762c00000, 0x0000000762e00000, 0x0000000762e00000|100%| E|CS|TAMS 0x0000000762c00000| PB 0x0000000762c00000| Complete |  0
| 691|0x0000000762e00000, 0x0000000763000000, 0x0000000763000000|100%| E|CS|TAMS 0x0000000762e00000| PB 0x0000000762e00000| Complete |  0
| 692|0x0000000763000000, 0x0000000763200000, 0x0000000763200000|100%| E|CS|TAMS 0x0000000763000000| PB 0x0000000763000000| Complete |  0
| 693|0x0000000763200000, 0x0000000763400000, 0x0000000763400000|100%| E|CS|TAMS 0x0000000763200000| PB 0x0000000763200000| Complete |  0
| 694|0x0000000763400000, 0x0000000763600000, 0x0000000763600000|100%| E|CS|TAMS 0x0000000763400000| PB 0x0000000763400000| Complete |  0
| 695|0x0000000763600000, 0x0000000763800000, 0x0000000763800000|100%| E|CS|TAMS 0x0000000763600000| PB 0x0000000763600000| Complete |  0
| 696|0x0000000763800000, 0x0000000763a00000, 0x0000000763a00000|100%| E|CS|TAMS 0x0000000763800000| PB 0x0000000763800000| Complete |  0
| 697|0x0000000763a00000, 0x0000000763c00000, 0x0000000763c00000|100%| E|CS|TAMS 0x0000000763a00000| PB 0x0000000763a00000| Complete |  0
| 698|0x0000000763c00000, 0x0000000763e00000, 0x0000000763e00000|100%| E|CS|TAMS 0x0000000763c00000| PB 0x0000000763c00000| Complete |  0
| 699|0x0000000763e00000, 0x0000000764000000, 0x0000000764000000|100%| E|CS|TAMS 0x0000000763e00000| PB 0x0000000763e00000| Complete |  0
| 700|0x0000000764000000, 0x0000000764200000, 0x0000000764200000|100%| E|CS|TAMS 0x0000000764000000| PB 0x0000000764000000| Complete |  0
| 701|0x0000000764200000, 0x0000000764400000, 0x0000000764400000|100%| E|CS|TAMS 0x0000000764200000| PB 0x0000000764200000| Complete |  0
| 702|0x0000000764400000, 0x0000000764600000, 0x0000000764600000|100%| E|CS|TAMS 0x0000000764400000| PB 0x0000000764400000| Complete |  0
| 703|0x0000000764600000, 0x0000000764800000, 0x0000000764800000|100%| E|CS|TAMS 0x0000000764600000| PB 0x0000000764600000| Complete |  0
| 704|0x0000000764800000, 0x0000000764a00000, 0x0000000764a00000|100%| E|CS|TAMS 0x0000000764800000| PB 0x0000000764800000| Complete |  0
| 705|0x0000000764a00000, 0x0000000764c00000, 0x0000000764c00000|100%| E|CS|TAMS 0x0000000764a00000| PB 0x0000000764a00000| Complete |  0
| 706|0x0000000764c00000, 0x0000000764e00000, 0x0000000764e00000|100%| E|CS|TAMS 0x0000000764c00000| PB 0x0000000764c00000| Complete |  0
| 707|0x0000000764e00000, 0x0000000765000000, 0x0000000765000000|100%| E|CS|TAMS 0x0000000764e00000| PB 0x0000000764e00000| Complete |  0
| 708|0x0000000765000000, 0x0000000765200000, 0x0000000765200000|100%| E|CS|TAMS 0x0000000765000000| PB 0x0000000765000000| Complete |  0
| 709|0x0000000765200000, 0x0000000765400000, 0x0000000765400000|100%| E|CS|TAMS 0x0000000765200000| PB 0x0000000765200000| Complete |  0
| 710|0x0000000765400000, 0x0000000765600000, 0x0000000765600000|100%| E|CS|TAMS 0x0000000765400000| PB 0x0000000765400000| Complete |  0
| 711|0x0000000765600000, 0x0000000765800000, 0x0000000765800000|100%| E|CS|TAMS 0x0000000765600000| PB 0x0000000765600000| Complete |  0
| 712|0x0000000765800000, 0x0000000765a00000, 0x0000000765a00000|100%| E|CS|TAMS 0x0000000765800000| PB 0x0000000765800000| Complete |  0
| 713|0x0000000765a00000, 0x0000000765c00000, 0x0000000765c00000|100%| E|CS|TAMS 0x0000000765a00000| PB 0x0000000765a00000| Complete |  0
| 714|0x0000000765c00000, 0x0000000765e00000, 0x0000000765e00000|100%| E|CS|TAMS 0x0000000765c00000| PB 0x0000000765c00000| Complete |  0
| 715|0x0000000765e00000, 0x0000000766000000, 0x0000000766000000|100%| E|CS|TAMS 0x0000000765e00000| PB 0x0000000765e00000| Complete |  0
| 716|0x0000000766000000, 0x0000000766200000, 0x0000000766200000|100%| E|CS|TAMS 0x0000000766000000| PB 0x0000000766000000| Complete |  0
| 717|0x0000000766200000, 0x0000000766400000, 0x0000000766400000|100%| E|CS|TAMS 0x0000000766200000| PB 0x0000000766200000| Complete |  0
| 718|0x0000000766400000, 0x0000000766600000, 0x0000000766600000|100%| E|CS|TAMS 0x0000000766400000| PB 0x0000000766400000| Complete |  0
| 719|0x0000000766600000, 0x0000000766800000, 0x0000000766800000|100%| E|CS|TAMS 0x0000000766600000| PB 0x0000000766600000| Complete |  0
| 720|0x0000000766800000, 0x0000000766a00000, 0x0000000766a00000|100%| E|CS|TAMS 0x0000000766800000| PB 0x0000000766800000| Complete |  0
| 721|0x0000000766a00000, 0x0000000766c00000, 0x0000000766c00000|100%| E|CS|TAMS 0x0000000766a00000| PB 0x0000000766a00000| Complete |  0
| 722|0x0000000766c00000, 0x0000000766e00000, 0x0000000766e00000|100%| E|CS|TAMS 0x0000000766c00000| PB 0x0000000766c00000| Complete |  0
| 723|0x0000000766e00000, 0x0000000767000000, 0x0000000767000000|100%| E|CS|TAMS 0x0000000766e00000| PB 0x0000000766e00000| Complete |  0
| 724|0x0000000767000000, 0x0000000767200000, 0x0000000767200000|100%| E|CS|TAMS 0x0000000767000000| PB 0x0000000767000000| Complete |  0
| 725|0x0000000767200000, 0x0000000767400000, 0x0000000767400000|100%| E|CS|TAMS 0x0000000767200000| PB 0x0000000767200000| Complete |  0
| 726|0x0000000767400000, 0x0000000767600000, 0x0000000767600000|100%| E|CS|TAMS 0x0000000767400000| PB 0x0000000767400000| Complete |  0
| 727|0x0000000767600000, 0x0000000767800000, 0x0000000767800000|100%| E|CS|TAMS 0x0000000767600000| PB 0x0000000767600000| Complete |  0
| 728|0x0000000767800000, 0x0000000767a00000, 0x0000000767a00000|100%| E|CS|TAMS 0x0000000767800000| PB 0x0000000767800000| Complete |  0
| 729|0x0000000767a00000, 0x0000000767c00000, 0x0000000767c00000|100%| E|CS|TAMS 0x0000000767a00000| PB 0x0000000767a00000| Complete |  0
| 730|0x0000000767c00000, 0x0000000767e00000, 0x0000000767e00000|100%| E|CS|TAMS 0x0000000767c00000| PB 0x0000000767c00000| Complete |  0
| 731|0x0000000767e00000, 0x0000000768000000, 0x0000000768000000|100%| E|CS|TAMS 0x0000000767e00000| PB 0x0000000767e00000| Complete |  0
| 732|0x0000000768000000, 0x0000000768200000, 0x0000000768200000|100%| E|CS|TAMS 0x0000000768000000| PB 0x0000000768000000| Complete |  0
| 733|0x0000000768200000, 0x0000000768400000, 0x0000000768400000|100%| E|CS|TAMS 0x0000000768200000| PB 0x0000000768200000| Complete |  0
| 734|0x0000000768400000, 0x0000000768600000, 0x0000000768600000|100%| E|CS|TAMS 0x0000000768400000| PB 0x0000000768400000| Complete |  0
| 735|0x0000000768600000, 0x0000000768800000, 0x0000000768800000|100%| E|CS|TAMS 0x0000000768600000| PB 0x0000000768600000| Complete |  0
| 736|0x0000000768800000, 0x0000000768a00000, 0x0000000768a00000|100%| E|CS|TAMS 0x0000000768800000| PB 0x0000000768800000| Complete |  0
| 737|0x0000000768a00000, 0x0000000768c00000, 0x0000000768c00000|100%| E|CS|TAMS 0x0000000768a00000| PB 0x0000000768a00000| Complete |  0
| 738|0x0000000768c00000, 0x0000000768e00000, 0x0000000768e00000|100%| E|CS|TAMS 0x0000000768c00000| PB 0x0000000768c00000| Complete |  0
| 739|0x0000000768e00000, 0x0000000769000000, 0x0000000769000000|100%| E|CS|TAMS 0x0000000768e00000| PB 0x0000000768e00000| Complete |  0
| 740|0x0000000769000000, 0x0000000769200000, 0x0000000769200000|100%| E|CS|TAMS 0x0000000769000000| PB 0x0000000769000000| Complete |  0
| 741|0x0000000769200000, 0x0000000769400000, 0x0000000769400000|100%| E|CS|TAMS 0x0000000769200000| PB 0x0000000769200000| Complete |  0
| 742|0x0000000769400000, 0x0000000769600000, 0x0000000769600000|100%| E|CS|TAMS 0x0000000769400000| PB 0x0000000769400000| Complete |  0
| 743|0x0000000769600000, 0x0000000769800000, 0x0000000769800000|100%| E|CS|TAMS 0x0000000769600000| PB 0x0000000769600000| Complete |  0
| 744|0x0000000769800000, 0x0000000769a00000, 0x0000000769a00000|100%| E|CS|TAMS 0x0000000769800000| PB 0x0000000769800000| Complete |  0
| 745|0x0000000769a00000, 0x0000000769c00000, 0x0000000769c00000|100%| E|CS|TAMS 0x0000000769a00000| PB 0x0000000769a00000| Complete |  0
| 746|0x0000000769c00000, 0x0000000769e00000, 0x0000000769e00000|100%| E|CS|TAMS 0x0000000769c00000| PB 0x0000000769c00000| Complete |  0
| 747|0x0000000769e00000, 0x000000076a000000, 0x000000076a000000|100%| E|CS|TAMS 0x0000000769e00000| PB 0x0000000769e00000| Complete |  0
| 748|0x000000076a000000, 0x000000076a200000, 0x000000076a200000|100%| E|CS|TAMS 0x000000076a000000| PB 0x000000076a000000| Complete |  0
| 749|0x000000076a200000, 0x000000076a400000, 0x000000076a400000|100%| E|CS|TAMS 0x000000076a200000| PB 0x000000076a200000| Complete |  0
| 750|0x000000076a400000, 0x000000076a600000, 0x000000076a600000|100%| E|CS|TAMS 0x000000076a400000| PB 0x000000076a400000| Complete |  0
| 751|0x000000076a600000, 0x000000076a800000, 0x000000076a800000|100%| E|CS|TAMS 0x000000076a600000| PB 0x000000076a600000| Complete |  0
| 752|0x000000076a800000, 0x000000076aa00000, 0x000000076aa00000|100%| E|CS|TAMS 0x000000076a800000| PB 0x000000076a800000| Complete |  0
| 753|0x000000076aa00000, 0x000000076ac00000, 0x000000076ac00000|100%| E|CS|TAMS 0x000000076aa00000| PB 0x000000076aa00000| Complete |  0
| 754|0x000000076ac00000, 0x000000076ae00000, 0x000000076ae00000|100%| E|CS|TAMS 0x000000076ac00000| PB 0x000000076ac00000| Complete |  0
| 755|0x000000076ae00000, 0x000000076b000000, 0x000000076b000000|100%| E|CS|TAMS 0x000000076ae00000| PB 0x000000076ae00000| Complete |  0
| 756|0x000000076b000000, 0x000000076b200000, 0x000000076b200000|100%| E|CS|TAMS 0x000000076b000000| PB 0x000000076b000000| Complete |  0
| 757|0x000000076b200000, 0x000000076b400000, 0x000000076b400000|100%| E|CS|TAMS 0x000000076b200000| PB 0x000000076b200000| Complete |  0
| 758|0x000000076b400000, 0x000000076b600000, 0x000000076b600000|100%| E|CS|TAMS 0x000000076b400000| PB 0x000000076b400000| Complete |  0
| 759|0x000000076b600000, 0x000000076b800000, 0x000000076b800000|100%| E|CS|TAMS 0x000000076b600000| PB 0x000000076b600000| Complete |  0
|1947|0x00000007ffe00000, 0x00000007fff1d1c0, 0x0000000800000000| 55%| O|  |TAMS 0x00000007ffe00000| PB 0x00000007ffe00000| Untracked |  0

Card table byte_map: [0x00000214adf30000,0x00000214ae6d0000] _byte_map_base: 0x00000214aa6cc000

Marking Bits: (CMBitMap*) 0x0000021495f54ae0
 Bits: [0x00000214ae6d0000, 0x00000214b23b0000)

Polling page: 0x0000021493c90000

Metaspace:

Usage:
  Non-class:     14.78 MB used.
      Class:      2.02 MB used.
       Both:     16.80 MB used.

Virtual space:
  Non-class space:       64.00 MB reserved,      14.88 MB ( 23%) committed,  1 nodes.
      Class space:        1.00 GB reserved,       2.12 MB ( <1%) committed,  1 nodes.
             Both:        1.06 GB reserved,      17.00 MB (  2%) committed. 

Chunk freelists:
   Non-Class:  336.00 KB
       Class:  13.73 MB
        Both:  14.06 MB

MaxMetaspaceSize: unlimited
CompressedClassSpaceSize: 1.00 GB
Initial GC threshold: 21.00 MB
Current GC threshold: 21.00 MB
CDS: on
 - commit_granule_bytes: 65536.
 - commit_granule_words: 8192.
 - virtual_space_node_default_size: 8388608.
 - enlarge_chunks_in_place: 1.
UseCompressedClassPointers 1, UseCompactObjectHeaders 0
Narrow klass pointer bits 32, Max shift 3
Narrow klass base: 0x00000214b5000000, Narrow klass shift: 0
Encoding Range: [0x00000214b5000000 - 0x00000215b5000000), (4294967296 bytes)
Klass Range:    [0x00000214b5000000 - 0x00000214f6000000), (1090519040 bytes)
Klass ID Range:  [8 - 1090519033) (1090519025)


Internal statistics:

num_allocs_failed_limit: 0.
num_arena_births: 174.
num_arena_deaths: 0.
num_vsnodes_births: 2.
num_vsnodes_deaths: 0.
num_space_committed: 272.
num_space_uncommitted: 0.
num_chunks_returned_to_freelist: 0.
num_chunks_taken_from_freelist: 698.
num_chunk_merges: 0.
num_chunk_splits: 506.
num_chunks_enlarged: 428.
num_inconsistent_stats: 0.

CodeHeap 'non-profiled nmethods': size=120064Kb used=2774Kb max_used=2774Kb free=117289Kb
 bounds [0x00000214a6250000, 0x00000214a6510000, 0x00000214ad790000]
CodeHeap 'profiled nmethods': size=120000Kb used=10423Kb max_used=10423Kb free=109576Kb
 bounds [0x000002149e790000, 0x000002149f1c0000, 0x00000214a5cc0000]
CodeHeap 'non-nmethods': size=5696Kb used=1678Kb max_used=1854Kb free=4017Kb
 bounds [0x00000214a5cc0000, 0x00000214a5f30000, 0x00000214a6250000]
CodeCache: size=245760Kb, used=14875Kb, max_used=15051Kb, free=230882Kb
 total_blobs=6635, nmethods=5791, adapters=748, full_count=0
Compilation: enabled, stopped_count=0, restarted_count=0

Compilation events (20 events):
Event: 58.931 Thread 0x00000214b499fb70 5782       3       javafx.scene.effect.DropShadow::colorProperty (27 bytes)
Event: 58.931 Thread 0x00000214b499fb70 nmethod 5782 0x000002149f1b8f08 code [0x000002149f1b9060, 0x000002149f1b9580]
Event: 58.933 Thread 0x00000214b499fb70 5783       3       javafx.stage.Stage::fullScreenPropertyImpl (26 bytes)
Event: 58.934 Thread 0x00000214b499fb70 nmethod 5783 0x000002149f1b9608 code [0x000002149f1b9760, 0x000002149f1b9d08]
Event: 58.947 Thread 0x00000214b499fb70 5784       3       com.sun.javafx.tk.RenderJob::<init> (12 bytes)
Event: 58.947 Thread 0x00000214b499fb70 nmethod 5784 0x000002149f1b9d88 code [0x000002149f1b9ee0, 0x000002149f1ba4f0]
Event: 58.947 Thread 0x00000214b499fb70 5785       3       java.util.concurrent.FutureTask::<init> (19 bytes)
Event: 58.948 Thread 0x00000214b499fb70 nmethod 5785 0x000002149f1ba588 code [0x000002149f1ba6e0, 0x000002149f1babf8]
Event: 58.948 Thread 0x00000214b499fb70 5786       3       java.util.concurrent.Executors::callable (22 bytes)
Event: 58.948 Thread 0x00000214b499fb70 nmethod 5786 0x000002149f1bac88 code [0x000002149f1badc0, 0x000002149f1bb178]
Event: 58.948 Thread 0x00000214b499fb70 5787       3       java.util.concurrent.Executors$RunnableAdapter::<init> (15 bytes)
Event: 58.949 Thread 0x00000214b499fb70 nmethod 5787 0x000002149f1bb208 code [0x000002149f1bb320, 0x000002149f1bb550]
Event: 58.964 Thread 0x00000214b499fb70 5788       3       com.sun.glass.ui.win.WinWindow::setBounds (547 bytes)
Event: 58.967 Thread 0x00000214b499fb70 nmethod 5788 0x000002149f1bb588 code [0x000002149f1bb7e0, 0x000002149f1bcee0]
Event: 58.967 Thread 0x00000214b499fb70 5789       3       com.sun.glass.ui.Screen::toPlatformX (21 bytes)
Event: 58.967 Thread 0x00000214b499fb70 nmethod 5789 0x000002149f1bcf88 code [0x000002149f1bd0a0, 0x000002149f1bd1f0]
Event: 58.967 Thread 0x00000214b499fb70 5790       3       com.sun.glass.ui.Screen::toPlatformY (21 bytes)
Event: 58.968 Thread 0x00000214b499fb70 nmethod 5790 0x000002149f1bd288 code [0x000002149f1bd3a0, 0x000002149f1bd4f0]
Event: 58.978 Thread 0x00000214b499fb70 5791       3       com.sun.javafx.util.Utils::runOnFxThread (20 bytes)
Event: 58.979 Thread 0x00000214b499fb70 nmethod 5791 0x000002149f1bd588 code [0x000002149f1bd700, 0x000002149f1bdc50]

GC Heap History (20 events):
Event: 55.817 GC heap before
{Heap before GC invocations=25 (full 0):
 garbage-first heap   total reserved 3989504K, committed 1558528K, used 957634K [0x000000070c800000, 0x0000000800000000)
  region size 2048K, 456 young (933888K), 1 survivors (2048K)
 Metaspace       used 17024K, committed 17216K, reserved 1114112K
  class space    used 2063K, committed 2176K, reserved 1048576K
}
Event: 55.827 GC heap after
{Heap after GC invocations=26 (full 0):
 garbage-first heap   total reserved 3989504K, committed 1558528K, used 29632K [0x000000070c800000, 0x0000000800000000)
  region size 2048K, 3 young (6144K), 3 survivors (6144K)
 Metaspace       used 17024K, committed 17216K, reserved 1114112K
  class space    used 2063K, committed 2176K, reserved 1048576K
}
Event: 56.139 GC heap before
{Heap before GC invocations=26 (full 0):
 garbage-first heap   total reserved 3989504K, committed 1558528K, used 957376K [0x000000070c800000, 0x0000000800000000)
  region size 2048K, 456 young (933888K), 3 survivors (6144K)
 Metaspace       used 17034K, committed 17216K, reserved 1114112K
  class space    used 2063K, committed 2176K, reserved 1048576K
}
Event: 56.151 GC heap after
{Heap after GC invocations=27 (full 0):
 garbage-first heap   total reserved 3989504K, committed 1558528K, used 29570K [0x000000070c800000, 0x0000000800000000)
  region size 2048K, 3 young (6144K), 3 survivors (6144K)
 Metaspace       used 17034K, committed 17216K, reserved 1114112K
  class space    used 2063K, committed 2176K, reserved 1048576K
}
Event: 56.465 GC heap before
{Heap before GC invocations=27 (full 0):
 garbage-first heap   total reserved 3989504K, committed 1558528K, used 957314K [0x000000070c800000, 0x0000000800000000)
  region size 2048K, 456 young (933888K), 3 survivors (6144K)
 Metaspace       used 17036K, committed 17216K, reserved 1114112K
  class space    used 2063K, committed 2176K, reserved 1048576K
}
Event: 56.474 GC heap after
{Heap after GC invocations=28 (full 0):
 garbage-first heap   total reserved 3989504K, committed 1558528K, used 29731K [0x000000070c800000, 0x0000000800000000)
  region size 2048K, 3 young (6144K), 3 survivors (6144K)
 Metaspace       used 17036K, committed 17216K, reserved 1114112K
  class space    used 2063K, committed 2176K, reserved 1048576K
}
Event: 56.777 GC heap before
{Heap before GC invocations=28 (full 0):
 garbage-first heap   total reserved 3989504K, committed 1558528K, used 957475K [0x000000070c800000, 0x0000000800000000)
  region size 2048K, 456 young (933888K), 3 survivors (6144K)
 Metaspace       used 17081K, committed 17344K, reserved 1114112K
  class space    used 2063K, committed 2176K, reserved 1048576K
}
Event: 56.785 GC heap after
{Heap after GC invocations=29 (full 0):
 garbage-first heap   total reserved 3989504K, committed 1558528K, used 29810K [0x000000070c800000, 0x0000000800000000)
  region size 2048K, 3 young (6144K), 3 survivors (6144K)
 Metaspace       used 17081K, committed 17344K, reserved 1114112K
  class space    used 2063K, committed 2176K, reserved 1048576K
}
Event: 57.160 GC heap before
{Heap before GC invocations=29 (full 0):
 garbage-first heap   total reserved 3989504K, committed 1558528K, used 957554K [0x000000070c800000, 0x0000000800000000)
  region size 2048K, 456 young (933888K), 3 survivors (6144K)
 Metaspace       used 17109K, committed 17344K, reserved 1114112K
  class space    used 2063K, committed 2176K, reserved 1048576K
}
Event: 57.168 GC heap after
{Heap after GC invocations=30 (full 0):
 garbage-first heap   total reserved 3989504K, committed 1558528K, used 29824K [0x000000070c800000, 0x0000000800000000)
  region size 2048K, 3 young (6144K), 3 survivors (6144K)
 Metaspace       used 17109K, committed 17344K, reserved 1114112K
  class space    used 2063K, committed 2176K, reserved 1048576K
}
Event: 57.425 GC heap before
{Heap before GC invocations=30 (full 0):
 garbage-first heap   total reserved 3989504K, committed 1558528K, used 957568K [0x000000070c800000, 0x0000000800000000)
  region size 2048K, 456 young (933888K), 3 survivors (6144K)
 Metaspace       used 17112K, committed 17344K, reserved 1114112K
  class space    used 2063K, committed 2176K, reserved 1048576K
}
Event: 57.434 GC heap after
{Heap after GC invocations=31 (full 0):
 garbage-first heap   total reserved 3989504K, committed 1558528K, used 29889K [0x000000070c800000, 0x0000000800000000)
  region size 2048K, 3 young (6144K), 3 survivors (6144K)
 Metaspace       used 17112K, committed 17344K, reserved 1114112K
  class space    used 2063K, committed 2176K, reserved 1048576K
}
Event: 57.774 GC heap before
{Heap before GC invocations=31 (full 0):
 garbage-first heap   total reserved 3989504K, committed 1558528K, used 957633K [0x000000070c800000, 0x0000000800000000)
  region size 2048K, 456 young (933888K), 3 survivors (6144K)
 Metaspace       used 17135K, committed 17344K, reserved 1114112K
  class space    used 2063K, committed 2176K, reserved 1048576K
}
Event: 57.782 GC heap after
{Heap after GC invocations=32 (full 0):
 garbage-first heap   total reserved 3989504K, committed 1558528K, used 29963K [0x000000070c800000, 0x0000000800000000)
  region size 2048K, 3 young (6144K), 3 survivors (6144K)
 Metaspace       used 17135K, committed 17344K, reserved 1114112K
  class space    used 2063K, committed 2176K, reserved 1048576K
}
Event: 58.100 GC heap before
{Heap before GC invocations=32 (full 0):
 garbage-first heap   total reserved 3989504K, committed 1558528K, used 957707K [0x000000070c800000, 0x0000000800000000)
  region size 2048K, 456 young (933888K), 3 survivors (6144K)
 Metaspace       used 17137K, committed 17344K, reserved 1114112K
  class space    used 2063K, committed 2176K, reserved 1048576K
}
Event: 58.109 GC heap after
{Heap after GC invocations=33 (full 0):
 garbage-first heap   total reserved 3989504K, committed 1558528K, used 29754K [0x000000070c800000, 0x0000000800000000)
  region size 2048K, 3 young (6144K), 3 survivors (6144K)
 Metaspace       used 17137K, committed 17344K, reserved 1114112K
  class space    used 2063K, committed 2176K, reserved 1048576K
}
Event: 58.430 GC heap before
{Heap before GC invocations=33 (full 0):
 garbage-first heap   total reserved 3989504K, committed 1558528K, used 957498K [0x000000070c800000, 0x0000000800000000)
  region size 2048K, 456 young (933888K), 3 survivors (6144K)
 Metaspace       used 17157K, committed 17408K, reserved 1114112K
  class space    used 2063K, committed 2176K, reserved 1048576K
}
Event: 58.437 GC heap after
{Heap after GC invocations=34 (full 0):
 garbage-first heap   total reserved 3989504K, committed 1558528K, used 30032K [0x000000070c800000, 0x0000000800000000)
  region size 2048K, 3 young (6144K), 3 survivors (6144K)
 Metaspace       used 17157K, committed 17408K, reserved 1114112K
  class space    used 2063K, committed 2176K, reserved 1048576K
}
Event: 58.846 GC heap before
{Heap before GC invocations=34 (full 0):
 garbage-first heap   total reserved 3989504K, committed 1558528K, used 957776K [0x000000070c800000, 0x0000000800000000)
  region size 2048K, 456 young (933888K), 3 survivors (6144K)
 Metaspace       used 17168K, committed 17408K, reserved 1114112K
  class space    used 2063K, committed 2176K, reserved 1048576K
}
Event: 58.856 GC heap after
{Heap after GC invocations=35 (full 0):
 garbage-first heap   total reserved 3989504K, committed 1558528K, used 30063K [0x000000070c800000, 0x0000000800000000)
  region size 2048K, 3 young (6144K), 3 survivors (6144K)
 Metaspace       used 17168K, committed 17408K, reserved 1114112K
  class space    used 2063K, committed 2176K, reserved 1048576K
}

Dll operation events (20 events):
Event: 0.814 Loaded shared library C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-crt-private-l1-1-0.dll
Event: 0.816 Loaded shared library C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-crt-process-l1-1-0.dll
Event: 0.818 Loaded shared library C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-crt-runtime-l1-1-0.dll
Event: 0.821 Loaded shared library C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-crt-stdio-l1-1-0.dll
Event: 0.823 Loaded shared library C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-crt-string-l1-1-0.dll
Event: 0.830 Loaded shared library C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-crt-time-l1-1-0.dll
Event: 0.832 Loaded shared library C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-crt-utility-l1-1-0.dll
Event: 0.835 Loaded shared library C:\Javac\javafx-sdk-24.0.1\bin\ucrtbase.dll
Event: 0.837 Loaded shared library C:\Javac\javafx-sdk-24.0.1\bin\vcruntime140.dll
Event: 0.839 Loaded shared library C:\Javac\javafx-sdk-24.0.1\bin\vcruntime140_1.dll
Event: 0.842 Loaded shared library C:\Javac\javafx-sdk-24.0.1\bin\msvcp140.dll
Event: 0.844 Loaded shared library C:\Javac\javafx-sdk-24.0.1\bin\msvcp140_1.dll
Event: 0.846 Loaded shared library C:\Javac\javafx-sdk-24.0.1\bin\msvcp140_2.dll
Event: 0.922 Loaded shared library C:\Javac\javafx-sdk-24.0.1\bin\prism_d3d.dll
Event: 1.039 Loaded shared library C:\Javac\javafx-sdk-24.0.1\bin\glass.dll
Event: 1.251 Loaded shared library C:\Program Files\Java\jdk-24\bin\jimage.dll
Event: 1.268 Loaded shared library C:\Javac\javafx-sdk-24.0.1\bin\glib-lite.dll
Event: 1.272 Loaded shared library C:\Javac\javafx-sdk-24.0.1\bin\gstreamer-lite.dll
Event: 1.274 Loaded shared library C:\Javac\javafx-sdk-24.0.1\bin\jfxmedia.dll
Event: 2.117 Loaded shared library C:\Javac\javafx-sdk-24.0.1\bin\javafx_font.dll

Deoptimization events (20 events):
Event: 58.150 Thread 0x00000214fa8064c0 DEOPT PACKING pc=0x00000214a64dfecc sp=0x00000014dc60dae0
Event: 58.150 Thread 0x00000214fa8064c0 DEOPT UNPACKING pc=0x00000214a5dd4102 sp=0x00000014dc60da88 mode 2
Event: 58.252 Thread 0x00000214fa8064c0 DEOPT PACKING pc=0x000002149f12aaa5 sp=0x00000014dc60d270
Event: 58.252 Thread 0x00000214fa8064c0 DEOPT UNPACKING pc=0x00000214a5d15722 sp=0x00000014dc60c6f0 mode 0
Event: 58.286 Thread 0x00000214fa8064c0 DEOPT PACKING pc=0x000002149f12a70c sp=0x00000014dc60c960
Event: 58.286 Thread 0x00000214fa8064c0 DEOPT UNPACKING pc=0x00000214a5d15722 sp=0x00000014dc60be18 mode 0
Event: 58.605 Thread 0x00000214fa8064c0 DEOPT PACKING pc=0x000002149f12a70c sp=0x00000014dc60d2b0
Event: 58.605 Thread 0x00000214fa8064c0 DEOPT UNPACKING pc=0x00000214a5d15722 sp=0x00000014dc60c768 mode 0
Event: 58.761 Thread 0x00000214fa8064c0 Uncommon trap: trap_request=0xffffff4d fr.pc=0x00000214a6457f3c relative=0x000000000000091c
Event: 58.761 Thread 0x00000214fa8064c0 Uncommon trap: reason=unstable_if action=reinterpret pc=0x00000214a6457f3c method=javafx.collections.ListChangeBuilder.commit()V @ 129 c2
Event: 58.761 Thread 0x00000214fa8064c0 DEOPT PACKING pc=0x00000214a6457f3c sp=0x00000014dc60c720
Event: 58.761 Thread 0x00000214fa8064c0 DEOPT UNPACKING pc=0x00000214a5dd4102 sp=0x00000014dc60c6a0 mode 2
Event: 58.814 Thread 0x00000214fa8064c0 Uncommon trap: trap_request=0xffffff4d fr.pc=0x00000214a639df9c relative=0x000000000000095c
Event: 58.814 Thread 0x00000214fa8064c0 Uncommon trap: reason=unstable_if action=reinterpret pc=0x00000214a639df9c method=javafx.scene.Parent.layout()V @ 55 c2
Event: 58.814 Thread 0x00000214fa8064c0 DEOPT PACKING pc=0x00000214a639df9c sp=0x00000014dc60fcd0
Event: 58.814 Thread 0x00000214fa8064c0 DEOPT UNPACKING pc=0x00000214a5dd4102 sp=0x00000014dc60fc68 mode 2
Event: 58.817 Thread 0x00000214fa8064c0 Uncommon trap: trap_request=0xffffff4d fr.pc=0x00000214a63c3b58 relative=0x0000000000000118
Event: 58.817 Thread 0x00000214fa8064c0 Uncommon trap: reason=unstable_if action=reinterpret pc=0x00000214a63c3b58 method=com.sun.javafx.sg.prism.NGNode.setTransformedBounds(Lcom/sun/javafx/geom/BaseBounds;Z)V @ 19 c2
Event: 58.817 Thread 0x00000214fa8064c0 DEOPT PACKING pc=0x00000214a63c3b58 sp=0x00000014dc60dc70
Event: 58.817 Thread 0x00000214fa8064c0 DEOPT UNPACKING pc=0x00000214a5dd4102 sp=0x00000014dc60dc28 mode 2

Classes loaded (20 events):
Event: 3.468 Loading class java/util/EnumMap$Values
Event: 3.468 Loading class java/util/EnumMap$Values done
Event: 3.468 Loading class java/util/EnumMap$ValueIterator
Event: 3.468 Loading class java/util/EnumMap$EnumMapIterator
Event: 3.468 Loading class java/util/EnumMap$EnumMapIterator done
Event: 3.468 Loading class java/util/EnumMap$ValueIterator done
Event: 4.545 Loading class java/lang/Throwable$WrappedPrintStream
Event: 4.545 Loading class java/lang/Throwable$PrintStreamOrWriter
Event: 4.545 Loading class java/lang/Throwable$PrintStreamOrWriter done
Event: 4.545 Loading class java/lang/Throwable$WrappedPrintStream done
Event: 7.333 Loading class java/lang/FdLibm$Cbrt
Event: 7.333 Loading class java/lang/FdLibm$Cbrt done
Event: 10.323 Loading class java/lang/invoke/MethodHandle$1
Event: 10.323 Loading class java/lang/invoke/MethodHandle$1 done
Event: 51.576 Loading class java/lang/Math$RandomNumberGeneratorHolder
Event: 51.576 Loading class java/lang/Math$RandomNumberGeneratorHolder done
Event: 52.452 Loading class java/lang/foreign/MemorySegment
Event: 52.452 Loading class java/lang/foreign/MemorySegment done
Event: 52.488 Loading class java/io/InterruptedIOException
Event: 52.488 Loading class java/io/InterruptedIOException done

Classes unloaded (0 events):
No events

Classes redefined (0 events):
No events

Internal exceptions (20 events):
Event: 58.605 Thread 0x00000214fa8064c0 StackOverflowError at 0x000002149ee49900
Event: 58.605 Thread 0x00000214fa8064c0 Exception <a 'java/lang/StackOverflowError'{0x000000075451b808}> (0x000000075451b808) 
thrown [s\open\src\hotspot\share\runtime\sharedRuntime.cpp, line 678]
Event: 58.623 Thread 0x00000214fa8064c0 StackOverflowError at 0x00000214a6374a30
Event: 58.624 Thread 0x00000214fa8064c0 Exception <a 'java/lang/StackOverflowError'{0x0000000753315098}> (0x0000000753315098) 
thrown [s\open\src\hotspot\share\runtime\sharedRuntime.cpp, line 678]
Event: 58.650 Thread 0x00000214fa8064c0 StackOverflowError at 0x000002149edc0d20
Event: 58.650 Thread 0x00000214fa8064c0 Exception <a 'java/lang/StackOverflowError'{0x00000007503149d8}> (0x00000007503149d8) 
thrown [s\open\src\hotspot\share\runtime\sharedRuntime.cpp, line 678]
Event: 58.713 Thread 0x00000214fa8064c0 StackOverflowError at 0x000002149ee49900
Event: 58.713 Thread 0x00000214fa8064c0 Exception <a 'java/lang/StackOverflowError'{0x0000000745060000}> (0x0000000745060000) 
thrown [s\open\src\hotspot\share\runtime\sharedRuntime.cpp, line 678]
Event: 58.730 Thread 0x00000214fa8064c0 StackOverflowError at 0x00000214a6374a30
Event: 58.730 Thread 0x00000214fa8064c0 Exception <a 'java/lang/StackOverflowError'{0x0000000742c3a170}> (0x0000000742c3a170) 
thrown [s\open\src\hotspot\share\runtime\sharedRuntime.cpp, line 678]
Event: 58.745 Thread 0x00000214fa8064c0 StackOverflowError at 0x000002149edc0d20
Event: 58.745 Thread 0x00000214fa8064c0 Exception <a 'java/lang/StackOverflowError'{0x0000000741e59150}> (0x0000000741e59150) 
thrown [s\open\src\hotspot\share\runtime\sharedRuntime.cpp, line 678]
Event: 58.767 Thread 0x00000214fa8064c0 Exception <a 'java/lang/StackOverflowError'{0x000000073b151718}> (0x000000073b151718) 
thrown [s\open\src\hotspot\share\runtime\javaCalls.cpp, line 373]
Event: 58.768 Thread 0x00000214fa8064c0 Exception <a 'java/lang/StackOverflowError'{0x000000073b156d40}> (0x000000073b156d40) 
thrown [s\open\src\hotspot\share\runtime\javaCalls.cpp, line 373]
Event: 58.769 Thread 0x00000214fa8064c0 StackOverflowError at 0x00000214a6265830
Event: 58.769 Thread 0x00000214fa8064c0 Exception <a 'java/lang/StackOverflowError'{0x000000073af014a8}> (0x000000073af014a8) 
thrown [s\open\src\hotspot\share\runtime\sharedRuntime.cpp, line 678]
Event: 58.801 Thread 0x00000214fa8064c0 Exception <a 'java/lang/StackOverflowError'{0x0000000737f1a200}> (0x0000000737f1a200) 
thrown [s\open\src\hotspot\share\runtime\javaCalls.cpp, line 373]
Event: 58.801 Thread 0x00000214fa8064c0 Exception <a 'java/lang/StackOverflowError'{0x0000000737300530}> (0x0000000737300530) 
thrown [s\open\src\hotspot\share\runtime\javaCalls.cpp, line 373]
Event: 58.802 Thread 0x00000214fa8064c0 StackOverflowError at 0x00000214a6312210
Event: 58.802 Thread 0x00000214fa8064c0 Exception <a 'java/lang/StackOverflowError'{0x0000000737305b88}> (0x0000000737305b88) 
thrown [s\open\src\hotspot\share\runtime\sharedRuntime.cpp, line 678]

VM Operations (20 events):
Event: 55.817 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause)
Event: 55.827 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause) done
Event: 56.132 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause)
Event: 56.151 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause) done
Event: 56.465 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause)
Event: 56.474 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause) done
Event: 56.775 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause)
Event: 56.785 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause) done
Event: 57.149 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause)
Event: 57.168 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause) done
Event: 57.425 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause)
Event: 57.434 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause) done
Event: 57.771 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause)
Event: 57.782 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause) done
Event: 58.083 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause)
Event: 58.109 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause) done
Event: 58.430 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause)
Event: 58.437 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause) done
Event: 58.846 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause)
Event: 58.856 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause) done

Memory protections (0 events):
No events

Nmethod flushes (0 events):
No events

Events (20 events):
Event: 58.984 Thread 0x0000021486604920 Thread added: 0x0000021486604920
Event: 58.984 Thread 0x0000021486604920 Thread exited: 0x0000021486604920
Event: 58.984 Thread 0x0000021486605f10 Thread added: 0x0000021486605f10
Event: 58.984 Thread 0x0000021486605f10 Thread exited: 0x0000021486605f10
Event: 58.990 Thread 0x00000214866041d0 Thread added: 0x00000214866041d0
Event: 58.991 Thread 0x00000214866041d0 Thread exited: 0x00000214866041d0
Event: 58.991 Thread 0x0000021486604920 Thread added: 0x0000021486604920
Event: 58.991 Thread 0x0000021486604920 Thread exited: 0x0000021486604920
Event: 58.991 Thread 0x00000214866041d0 Thread added: 0x00000214866041d0
Event: 58.991 Thread 0x00000214866041d0 Thread exited: 0x00000214866041d0
Event: 58.991 Thread 0x00000214866041d0 Thread added: 0x00000214866041d0
Event: 58.991 Thread 0x00000214866041d0 Thread exited: 0x00000214866041d0
Event: 58.993 Thread 0x00000214fa74bcb0 Thread added: 0x00000214fa74bcb0
Event: 58.993 Thread 0x00000214fa74bcb0 Thread exited: 0x00000214fa74bcb0
Event: 58.994 Thread 0x00000214fa74e140 Thread added: 0x00000214fa74e140
Event: 58.994 Thread 0x00000214fa74e140 Thread exited: 0x00000214fa74e140
Event: 58.994 Thread 0x00000214fa3de050 Thread added: 0x00000214fa3de050
Event: 58.994 Thread 0x00000214fa3de050 Thread exited: 0x00000214fa3de050
Event: 58.994 Thread 0x00000214fa3de050 Thread added: 0x00000214fa3de050
Event: 58.994 Thread 0x00000214fa3de050 Thread exited: 0x00000214fa3de050


Dynamic libraries:
0x00007ff78b960000 - 0x00007ff78b970000 	C:\Program Files\Java\jdk-24\bin\java.exe
0x00007ffa1f670000 - 0x00007ffa1f887000 	C:\Windows\SYSTEM32\ntdll.dll
0x00007ffa1ed10000 - 0x00007ffa1edd4000 	C:\Windows\System32\KERNEL32.DLL
0x00007ffa1ccb0000 - 0x00007ffa1d067000 	C:\Windows\System32\KERNELBASE.dll
0x00007ffa1d160000 - 0x00007ffa1d271000 	C:\Windows\System32\ucrtbase.dll
0x00007ffa184d0000 - 0x00007ffa184eb000 	C:\Program Files\Java\jdk-24\bin\VCRUNTIME140.dll
0x00007ffa184b0000 - 0x00007ffa184c6000 	C:\Program Files\Java\jdk-24\bin\jli.dll
0x00007ffa1f130000 - 0x00007ffa1f2df000 	C:\Windows\System32\USER32.dll
0x00007ffa1cc80000 - 0x00007ffa1cca6000 	C:\Windows\System32\win32u.dll
0x00007ffa0b300000 - 0x00007ffa0b593000 	C:\Windows\WinSxS\amd64_microsoft.windows.common-controls_6595b64144ccf1df_6.0.22621.3672_none_2713b9d173822955\COMCTL32.dll
0x00007ffa1f470000 - 0x00007ffa1f517000 	C:\Windows\System32\msvcrt.dll
0x00007ffa1f600000 - 0x00007ffa1f629000 	C:\Windows\System32\GDI32.dll
0x00007ffa1d280000 - 0x00007ffa1d398000 	C:\Windows\System32\gdi32full.dll
0x00007ffa1cbe0000 - 0x00007ffa1cc7a000 	C:\Windows\System32\msvcp_win.dll
0x00007ffa1e6c0000 - 0x00007ffa1e6f1000 	C:\Windows\System32\IMM32.DLL
0x00007ffa19bf0000 - 0x00007ffa19bfc000 	C:\Program Files\Java\jdk-24\bin\vcruntime140_1.dll
0x00007ffa0d140000 - 0x00007ffa0d1ce000 	C:\Program Files\Java\jdk-24\bin\msvcp140.dll
0x00007ff9bc6a0000 - 0x00007ff9bd442000 	C:\Program Files\Java\jdk-24\bin\server\jvm.dll
0x00007ffa1d4a0000 - 0x00007ffa1d552000 	C:\Windows\System32\ADVAPI32.dll
0x00007ffa1f3c0000 - 0x00007ffa1f468000 	C:\Windows\System32\sechost.dll
0x00007ffa1cbb0000 - 0x00007ffa1cbd8000 	C:\Windows\System32\bcrypt.dll
0x00007ffa1edf0000 - 0x00007ffa1ef04000 	C:\Windows\System32\RPCRT4.dll
0x00007ffa1f580000 - 0x00007ffa1f5f1000 	C:\Windows\System32\WS2_32.dll
0x00007ffa1b830000 - 0x00007ffa1b87d000 	C:\Windows\SYSTEM32\POWRPROF.dll
0x00007ffa15880000 - 0x00007ffa158b4000 	C:\Windows\SYSTEM32\WINMM.dll
0x00007ffa0b5a0000 - 0x00007ffa0b5aa000 	C:\Windows\SYSTEM32\VERSION.dll
0x00007ffa1b810000 - 0x00007ffa1b823000 	C:\Windows\SYSTEM32\UMPDC.dll
0x00007ffa1bac0000 - 0x00007ffa1bad8000 	C:\Windows\SYSTEM32\kernel.appcore.dll
0x00007ffa185d0000 - 0x00007ffa185da000 	C:\Program Files\Java\jdk-24\bin\jimage.dll
0x00007ffa0b730000 - 0x00007ffa0b962000 	C:\Windows\SYSTEM32\DBGHELP.DLL
0x00007ffa1e960000 - 0x00007ffa1ecee000 	C:\Windows\System32\combase.dll
0x00007ffa1f2e0000 - 0x00007ffa1f3b7000 	C:\Windows\System32\OLEAUT32.dll
0x00007ffa0a760000 - 0x00007ffa0a792000 	C:\Windows\SYSTEM32\dbgcore.DLL
0x00007ffa1d0e0000 - 0x00007ffa1d15b000 	C:\Windows\System32\bcryptPrimitives.dll
0x00007ffa184a0000 - 0x00007ffa184af000 	C:\Program Files\Java\jdk-24\bin\instrument.dll
0x00007ffa182e0000 - 0x00007ffa182fe000 	C:\Program Files\Java\jdk-24\bin\java.dll
0x00007ffa1dba0000 - 0x00007ffa1dd45000 	C:\Windows\System32\ole32.dll
0x00007ffa1dd50000 - 0x00007ffa1e5b9000 	C:\Windows\System32\SHELL32.dll
0x00007ffa1a900000 - 0x00007ffa1b1ff000 	C:\Windows\SYSTEM32\windows.storage.dll
0x00007ffa1a7c0000 - 0x00007ffa1a8ff000 	C:\Windows\SYSTEM32\wintypes.dll
0x00007ffa1e700000 - 0x00007ffa1e7f9000 	C:\Windows\System32\SHCORE.dll
0x00007ffa1f520000 - 0x00007ffa1f57e000 	C:\Windows\System32\shlwapi.dll
0x00007ffa1c8b0000 - 0x00007ffa1c8d7000 	C:\Windows\SYSTEM32\profapi.dll
0x00007ffa0d060000 - 0x00007ffa0d137000 	C:\Program Files\Java\jdk-24\bin\jsvml.dll
0x00007ffa18490000 - 0x00007ffa184a0000 	C:\Program Files\Java\jdk-24\bin\net.dll
0x00007ffa1bf30000 - 0x00007ffa1bf99000 	C:\Windows\system32\mswsock.dll
0x00007ffa0dcd0000 - 0x00007ffa0dce6000 	C:\Program Files\Java\jdk-24\bin\nio.dll
0x00007ffa0dcb0000 - 0x00007ffa0dcc7000 	C:\Program Files\Java\jdk-24\bin\zip.dll
0x00007ffa182d0000 - 0x00007ffa182d9000 	C:\Program Files\Java\jdk-24\bin\extnet.dll
0x0000021493f60000 - 0x0000021493f64000 	C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-core-console-l1-1-0.dll
0x0000021493f70000 - 0x0000021493f74000 	C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-core-console-l1-2-0.dll
0x0000021493f80000 - 0x0000021493f84000 	C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-core-datetime-l1-1-0.dll
0x0000021495e70000 - 0x0000021495e74000 	C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-core-debug-l1-1-0.dll
0x0000021495e80000 - 0x0000021495e84000 	C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-core-errorhandling-l1-1-0.dll
0x0000021495e90000 - 0x0000021495e95000 	C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-core-file-l1-1-0.dll
0x0000021495ea0000 - 0x0000021495ea4000 	C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-core-file-l1-2-0.dll
0x00000214b4e00000 - 0x00000214b4e04000 	C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-core-file-l2-1-0.dll
0x00000214b4e10000 - 0x00000214b4e14000 	C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-core-handle-l1-1-0.dll
0x00000214b4e20000 - 0x00000214b4e24000 	C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-core-heap-l1-1-0.dll
0x00000214b4e30000 - 0x00000214b4e34000 	C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-core-interlocked-l1-1-0.dll
0x00000214b4f50000 - 0x00000214b4f54000 	C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-core-libraryloader-l1-1-0.dll
0x00000214b4f60000 - 0x00000214b4f64000 	C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-core-localization-l1-2-0.dll
0x00000214b4f70000 - 0x00000214b4f74000 	C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-core-memory-l1-1-0.dll
0x00000214b4f80000 - 0x00000214b4f84000 	C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-core-namedpipe-l1-1-0.dll
0x00000214b4f90000 - 0x00000214b4f94000 	C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-core-processenvironment-l1-1-0.dll
0x00000214b4fa0000 - 0x00000214b4fa4000 	C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-core-processthreads-l1-1-0.dll
0x00000214b4fb0000 - 0x00000214b4fb4000 	C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-core-processthreads-l1-1-1.dll
0x00000214b4fc0000 - 0x00000214b4fc4000 	C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-core-profile-l1-1-0.dll
0x00000214b4fd0000 - 0x00000214b4fd4000 	C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-core-rtlsupport-l1-1-0.dll
0x00000214b4fe0000 - 0x00000214b4fe4000 	C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-core-string-l1-1-0.dll
0x00000214b4ff0000 - 0x00000214b4ff4000 	C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-core-synch-l1-1-0.dll
0x00000214fb900000 - 0x00000214fb904000 	C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-core-synch-l1-2-0.dll
0x00000214fb910000 - 0x00000214fb914000 	C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-core-sysinfo-l1-1-0.dll
0x00000214fb920000 - 0x00000214fb924000 	C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-core-timezone-l1-1-0.dll
0x00000214fb930000 - 0x00000214fb934000 	C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-core-util-l1-1-0.dll
0x00000214fb7d0000 - 0x00000214fb7d4000 	C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-crt-conio-l1-1-0.dll
0x00000214fb7e0000 - 0x00000214fb7e5000 	C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-crt-convert-l1-1-0.dll
0x00000214fb7f0000 - 0x00000214fb7f4000 	C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-crt-environment-l1-1-0.dll
0x00000214fb800000 - 0x00000214fb804000 	C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-crt-filesystem-l1-1-0.dll
0x00000214fb810000 - 0x00000214fb814000 	C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-crt-heap-l1-1-0.dll
0x00000214fb820000 - 0x00000214fb824000 	C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-crt-locale-l1-1-0.dll
0x00000214fb830000 - 0x00000214fb836000 	C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-crt-math-l1-1-0.dll
0x00000214fb840000 - 0x00000214fb846000 	C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-crt-multibyte-l1-1-0.dll
0x00000214fb850000 - 0x00000214fb861000 	C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-crt-private-l1-1-0.dll
0x00000214fb870000 - 0x00000214fb874000 	C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-crt-process-l1-1-0.dll
0x00000214fb880000 - 0x00000214fb885000 	C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-crt-runtime-l1-1-0.dll
0x00000214fb890000 - 0x00000214fb895000 	C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-crt-stdio-l1-1-0.dll
0x00000214fb8a0000 - 0x00000214fb8a5000 	C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-crt-string-l1-1-0.dll
0x00000214fb8b0000 - 0x00000214fb8b4000 	C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-crt-time-l1-1-0.dll
0x00000214fb8c0000 - 0x00000214fb8c4000 	C:\Javac\javafx-sdk-24.0.1\bin\api-ms-win-crt-utility-l1-1-0.dll
0x00007ffa06500000 - 0x00007ffa06611000 	C:\Javac\javafx-sdk-24.0.1\bin\ucrtbase.dll
0x00007ffa0dc90000 - 0x00007ffa0dcab000 	C:\Javac\javafx-sdk-24.0.1\bin\vcruntime140.dll
0x00007ffa0dc80000 - 0x00007ffa0dc8c000 	C:\Javac\javafx-sdk-24.0.1\bin\vcruntime140_1.dll
0x00007ffa06470000 - 0x00007ffa064fe000 	C:\Javac\javafx-sdk-24.0.1\bin\msvcp140.dll
0x00007ffa0d650000 - 0x00007ffa0d659000 	C:\Javac\javafx-sdk-24.0.1\bin\msvcp140_1.dll
0x00007ffa0d600000 - 0x00007ffa0d641000 	C:\Javac\javafx-sdk-24.0.1\bin\msvcp140_2.dll
0x00007ffa0b1a0000 - 0x00007ffa0b1d0000 	C:\Javac\javafx-sdk-24.0.1\bin\prism_d3d.dll
0x00007ff9d06e0000 - 0x00007ff9d0888000 	C:\Windows\system32\d3d9.dll
0x00007ffa1a090000 - 0x00007ffa1a0bb000 	C:\Windows\SYSTEM32\dwmapi.dll
0x00007ffa1a100000 - 0x00007ffa1a137000 	C:\Windows\SYSTEM32\dxcore.dll
0x00007ffa19e00000 - 0x00007ffa19eb1000 	C:\Windows\system32\uxtheme.dll
0x00007ff9b7b60000 - 0x00007ff9b85cd000 	C:\Windows\SYSTEM32\igdumdim64.dll
0x00007ffa0e730000 - 0x00007ffa0eb95000 	C:\Windows\SYSTEM32\igdusc64.dll
0x00007ffa134f0000 - 0x00007ffa13539000 	C:\Windows\SYSTEM32\directxdatabasehelper.dll
0x00007ffa06420000 - 0x00007ffa06468000 	C:\Javac\javafx-sdk-24.0.1\bin\glass.dll
0x00007ffa1ef70000 - 0x00007ffa1f06f000 	C:\Windows\System32\COMDLG32.dll
0x00007ffa1f080000 - 0x00007ffa1f130000 	C:\Windows\System32\clbcatq.dll
0x00007ffa149c0000 - 0x00007ffa14b39000 	C:\Windows\System32\Windows.UI.dll
0x00007ffa02890000 - 0x00007ffa0297d000 	C:\Windows\System32\Windows.Networking.Connectivity.dll
0x00007ffa1e800000 - 0x00007ffa1e960000 	C:\Windows\System32\MSCTF.dll
0x00007ffa13370000 - 0x00007ffa134e5000 	C:\Windows\System32\Windows.UI.Immersive.dll
0x00007ffa18b60000 - 0x00007ffa18b78000 	C:\Windows\System32\npmproxy.dll
0x00007ffa14cb0000 - 0x00007ffa14cfb000 	C:\Windows\System32\CapabilityAccessManagerClient.dll
0x00007ffa195b0000 - 0x00007ffa19636000 	C:\Windows\SYSTEM32\wlanapi.dll
0x00007ffa19590000 - 0x00007ffa195af000 	C:\Windows\SYSTEM32\MobileNetworking.dll
0x00007ffa1b4d0000 - 0x00007ffa1b4fd000 	C:\Windows\System32\IPHLPAPI.DLL
0x00007ffa1e640000 - 0x00007ffa1e649000 	C:\Windows\System32\NSI.dll
0x00007ffa047e0000 - 0x00007ffa047f7000 	C:\Windows\System32\dusmapi.dll
0x00007ffa06370000 - 0x00007ffa06411000 	C:\Javac\javafx-sdk-24.0.1\bin\glib-lite.dll
0x00007ffa06270000 - 0x00007ffa0636b000 	C:\Javac\javafx-sdk-24.0.1\bin\gstreamer-lite.dll
0x00007ffa061c0000 - 0x00007ffa06262000 	C:\Windows\SYSTEM32\DSOUND.dll
0x00007ffa06100000 - 0x00007ffa061b1000 	C:\Windows\SYSTEM32\ResampleDmo.DLL
0x00007ffa060d0000 - 0x00007ffa060f9000 	C:\Windows\SYSTEM32\winmmbase.dll
0x00007ffa0a7a0000 - 0x00007ffa0a7ab000 	C:\Windows\SYSTEM32\msdmo.dll
0x00007ffa060a0000 - 0x00007ffa060c5000 	C:\Javac\javafx-sdk-24.0.1\bin\jfxmedia.dll
0x00007ffa0d5e0000 - 0x00007ffa0d5f5000 	C:\Javac\javafx-sdk-24.0.1\bin\javafx_font.dll
0x00007ffa06070000 - 0x00007ffa06094000 	C:\Javac\javafx-sdk-24.0.1\bin\fxplugins.dll
0x00007ffa170f0000 - 0x00007ffa172be000 	C:\Windows\SYSTEM32\MFPlat.DLL

JVMTI agents:
C:\Program Files\JetBrains\IntelliJ IDEA 2024.3.5\lib\idea_rt.jar path:C:\Program Files\Java\jdk-24\bin\instrument.dll, loaded, initialized, instrumentlib options:50034

dbghelp: loaded successfully - version: 4.0.5 - missing functions: none
symbol engine: initialized successfully - sym options: 0x614 - pdb path: .;C:\Program Files\Java\jdk-24\bin;C:\Windows\SYSTEM32;C:\Windows\WinSxS\amd64_microsoft.windows.common-controls_6595b64144ccf1df_6.0.22621.3672_none_2713b9d173822955;C:\Program Files\Java\jdk-24\bin\server;C:\Javac\javafx-sdk-24.0.1\bin;C:\Program Files\Common Files\Microsoft Shared\Ink

VM Arguments:
jvm_args: --module-path=C:\Javac\javafx-sdk-24.0.1\lib --add-modules=javafx.controls,javafx.media -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2024.3.5\lib\idea_rt.jar=50034 -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8 
java_command: BattleManager
java_class_path (initial): C:\Users\Mhmdrza\Desktop\Project\underhell\target\classes;C:\Javac\javafx-sdk-24.0.1\lib\javafx-swt.jar;C:\Javac\javafx-sdk-24.0.1\lib\javafx.web.jar;C:\Javac\javafx-sdk-24.0.1\lib\javafx.base.jar;C:\Javac\javafx-sdk-24.0.1\lib\javafx.fxml.jar;C:\Javac\javafx-sdk-24.0.1\lib\javafx.media.jar;C:\Javac\javafx-sdk-24.0.1\lib\javafx.swing.jar;C:\Javac\javafx-sdk-24.0.1\lib\jdk.jsobject.jar;C:\Javac\javafx-sdk-24.0.1\lib\javafx.controls.jar;C:\Javac\javafx-sdk-24.0.1\lib\javafx.graphics.jar;C:\Javac\javafx-sdk-24.0.1\lib\jfx.incubator.input.jar;C:\Javac\javafx-sdk-24.0.1\lib\jfx.incubator.richtext.jar
Launcher Type: SUN_STANDARD

[Global flags]
     intx CICompilerCount                          = 3                                         {product} {ergonomic}
     uint ConcGCThreads                            = 1                                         {product} {ergonomic}
     uint G1ConcRefinementThreads                  = 4                                         {product} {ergonomic}
   size_t G1HeapRegionSize                         = 2097152                                   {product} {ergonomic}
   size_t InitialHeapSize                          = 255852544                                 {product} {ergonomic}
   size_t MarkStackSize                            = 4194304                                   {product} {ergonomic}
   size_t MarkStackSizeMax                         = 536870912                                 {product} {ergonomic}
   size_t MaxHeapSize                              = 4085252096                                {product} {ergonomic}
   size_t MaxNewSize                               = 2449473536                                {product} {ergonomic}
   size_t MinHeapDeltaBytes                        = 2097152                                   {product} {ergonomic}
   size_t MinHeapSize                              = 8388608                                   {product} {ergonomic}
    uintx NonNMethodCodeHeapSize                   = 5832704                                {pd product} {ergonomic}
    uintx NonProfiledCodeHeapSize                  = 122945536                              {pd product} {ergonomic}
     bool PerfDisableSharedMem                     = true                                      {product} {ergonomic}
    uintx ProfiledCodeHeapSize                     = 122880000                              {pd product} {ergonomic}
    uintx ReservedCodeCacheSize                    = 251658240                              {pd product} {ergonomic}
     bool SegmentedCodeCache                       = true                                      {product} {ergonomic}
   size_t SoftMaxHeapSize                          = 4085252096                             {manageable} {ergonomic}
     bool UseCompressedOops                        = true                           {product lp64_product} {ergonomic}
     bool UseG1GC                                  = true                                      {product} {ergonomic}
     bool UseLargePagesIndividualAllocation        = false                                  {pd product} {ergonomic}

Logging:
Log output configuration:
 #0: stdout all=warning uptime,level,tags foldmultilines=false
 #1: stderr all=off uptime,level,tags foldmultilines=false

Environment Variables:
JAVA_HOME=C:\Program Files\BellSoft\LibericaJDK-21\
PATH=C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-21\bin\;C:\Program Files\Eclipse Adoptium\jdk-17.0.14.7-hotspot\bin;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\MinGW\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\Git\cmd;C:\Program Files (x86)\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Mhmdrza\AppData\Local\Microsoft\WindowsApps;C:\Users\Mhmdrza\.dotnet\tools;C:\Users\Mhmdrza\AppData\Local\GitHubDesktop\bin;C:\msys64\mingw64\bin;C:\Users\Mhmdrza\.lmstudio\bin;;C:\Program Files\JetBrains\PyCharm 2025.1\bin;
USERNAME=Mhmdrza
OS=Windows_NT
PROCESSOR_IDENTIFIER=Intel64 Family 6 Model 58 Stepping 9, GenuineIntel
TMP=C:\Users\Mhmdrza\AppData\Local\Temp
TEMP=C:\Users\Mhmdrza\AppData\Local\Temp




Periodic native trim disabled

---------------  S Y S T E M  ---------------

OS:
 Windows 11 , 64 bit Build 22621 (10.0.22621.3958)
OS uptime: 0 days 0:21 hours

CPU: total 4 (initial active 4) (2 cores per cpu, 2 threads per core) family 6 model 58 stepping 9 microcode 0x21, cx8, cmov, fxsr, ht, mmx, sse, sse2, sse3, ssse3, sse4.1, sse4.2, popcnt, tsc, tscinvbit, avx, aes, erms, clmul, vzeroupper, clflush, rdtscp, f16c
Processor Information for the first 4 processors :
  Max Mhz: 2601, Current Mhz: 2601, Mhz Limit: 2601

Memory: 4k page, system-wide physical 15579M (7814M free)
TotalPageFile size 17883M (AvailPageFile size 8017M)
current process WorkingSet (physical memory assigned to process): 497M, peak: 523M
current process commit charge ("private bytes"): 1775M, peak: 1815M

vm_info: Java HotSpot(TM) 64-Bit Server VM (24.0.1+9-30) for windows-amd64 JRE (24.0.1+9-30), built on 2025-03-05T07:23:45Z with MS VC++ 17.6 (VS2022)

END.
